{"meta":{"title":"乙未丁酉","subtitle":"模拟工程师","description":"","author":"sgs","url":"http://shenguosai.github.io","root":"/"},"pages":[{"title":"关于","date":"2023-08-08T17:07:20.711Z","updated":"2023-08-02T15:39:31.463Z","comments":false,"path":"about/index.html","permalink":"http://shenguosai.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2023-08-02T15:39:31.465Z","updated":"2023-08-02T15:39:31.465Z","comments":true,"path":"links/index.html","permalink":"http://shenguosai.github.io/links/index.html","excerpt":"","text":""},{"title":"categories","date":"2024-01-05T01:16:13.000Z","updated":"2024-01-05T01:16:58.898Z","comments":true,"path":"categories/index.html","permalink":"http://shenguosai.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-01-05T01:18:11.000Z","updated":"2024-01-05T01:18:30.706Z","comments":true,"path":"tags/index.html","permalink":"http://shenguosai.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"关闭 Adobe Genuine Service Alert 正版验证","slug":"关闭-Adobe-Genuine-Service-Alert-正版验证","date":"2024-09-09T01:10:18.000Z","updated":"2024-09-11T01:45:06.221Z","comments":true,"path":"2024/09/09/关闭-Adobe-Genuine-Service-Alert-正版验证/","link":"","permalink":"http://shenguosai.github.io/2024/09/09/%E5%85%B3%E9%97%AD-Adobe-Genuine-Service-Alert-%E6%AD%A3%E7%89%88%E9%AA%8C%E8%AF%81/","excerpt":"自用方法 单击 Windows 键，输入”服务”或”Service”，打开服务选项。 在服务中找到 “Adobe Genuine Software Monitor Service” 服务。 右键点击 =&gt; 左键属性，弹出属性对话框。 将启动类型改为禁止，并在服务状态栏点击停止将服务状态改为已停止。 防火墙设置规则让 Adobe Genuine Launcher.exe，AdobeGCClient.exe，AGMService.exe，AGSService.exe 无法联网。打开 Windows 防火墙 =&gt; 入站规则 =&gt; 新建规则 =&gt; 程序(下一步) =&gt; 此程序路径中选择程序路径 (C:\\Program Files (x86)\\Common Files\\Adobe\\AdobeGCClient)并打开 =&gt; 操作:阻止连接 =&gt; 输入名称即可。同样方法设置出站规则。这样就不会再出现弹窗了。","text":"自用方法 单击 Windows 键，输入”服务”或”Service”，打开服务选项。 在服务中找到 “Adobe Genuine Software Monitor Service” 服务。 右键点击 =&gt; 左键属性，弹出属性对话框。 将启动类型改为禁止，并在服务状态栏点击停止将服务状态改为已停止。 防火墙设置规则让 Adobe Genuine Launcher.exe，AdobeGCClient.exe，AGMService.exe，AGSService.exe 无法联网。打开 Windows 防火墙 =&gt; 入站规则 =&gt; 新建规则 =&gt; 程序(下一步) =&gt; 此程序路径中选择程序路径 (C:\\Program Files (x86)\\Common Files\\Adobe\\AdobeGCClient)并打开 =&gt; 操作:阻止连接 =&gt; 输入名称即可。同样方法设置出站规则。这样就不会再出现弹窗了。 网上博客中介绍的方法网上介绍的方法都是要删掉 AdobeGCClient 正版检测文件并防止其重建，应为自用方法也可以实现，没有试过。 在弹出 Adobe Genuine Service Alert 提示时打开任务管理器； “任务管理器 =&gt; 进程 =&gt; 后台进程”中找到类似 “Adobe Genuine Software Client” 的进程； 右击上面的进程 =&gt; 打开文件所在位置；( 我的位置是:C:\\Program Files (x86)\\Common Files\\Adobe\\AdobeGCClient\\ ) 在任务管理器结束2中的进程并将以下文件移除，Adobe Genuine Launcher.exe，AdobeGCClient.exe，AGMService.exe，AGSService.exe，网上没有明确指出删除哪些文件，所以建议将其移动到一个专门地方进行备份，防止 Adobe 因缺少某些文件导致无法使用； 新建几个空的文本文件，文件名与上面移除的文件名相同并将后缀改为 exe，以防止程序自动生成上述文件； 可以在打开 Windows 的防火墙将 Adobe 相关的启动文件断网，我没有在防火墙中发现可能是以前关掉了。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Adobe","slug":"Adobe","permalink":"http://shenguosai.github.io/tags/Adobe/"}]},{"title":"打开word时MathType报错:MathType has detected an error inAutoExecCls.Main: 文件未找到: MathPage.WLL.","slug":"打开word时MathType报错-MathType-has-detected-an-error-inAutoExecCls-Main-文件未找到-MathPage-WLL","date":"2024-09-04T07:00:33.000Z","updated":"2024-09-04T07:09:19.401Z","comments":true,"path":"2024/09/04/打开word时MathType报错-MathType-has-detected-an-error-inAutoExecCls-Main-文件未找到-MathPage-WLL/","link":"","permalink":"http://shenguosai.github.io/2024/09/04/%E6%89%93%E5%BC%80word%E6%97%B6MathType%E6%8A%A5%E9%94%99-MathType-has-detected-an-error-inAutoExecCls-Main-%E6%96%87%E4%BB%B6%E6%9C%AA%E6%89%BE%E5%88%B0-MathPage-WLL/","excerpt":"","text":"报错信息不知道为什么打开 Work 时出现了 MathType 的报错。连续点击两次”确定”报错对话框消失，如果点击 MathType 按钮会再次出现报错信息。 解决方法找到 MathPage.wll 文件将其复制到 Office 指定目录下。 MathPage.wll如果是 64 位的 Office，就去复制C:\\Program Files (x86)\\MathType\\Office Support\\64\\中的 MathPage.wll。如果是 32 位的 Office，就去复制C:\\Program Files (x86)\\MathType\\Office Support\\32\\中的 MathPage.wll。 Office 指定目录将上面的文件复制到目录: C:\\Program Files\\Microsoft Office\\root\\Office16中即可正常。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"},{"name":"MathType","slug":"MathType","permalink":"http://shenguosai.github.io/tags/MathType/"}]},{"title":"QNAP安装Aria2并使用油猴网盘直链进行RPC推送下载网盘资源","slug":"QNAP安装Aria2并使用油猴网盘直链进行RPC推送下载网盘资源","date":"2024-09-03T02:37:18.000Z","updated":"2024-09-18T08:57:57.800Z","comments":true,"path":"2024/09/03/QNAP安装Aria2并使用油猴网盘直链进行RPC推送下载网盘资源/","link":"","permalink":"http://shenguosai.github.io/2024/09/03/QNAP%E5%AE%89%E8%A3%85Aria2%E5%B9%B6%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E8%BF%9B%E8%A1%8CRPC%E6%8E%A8%E9%80%81%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/","excerpt":"QNAP 安装 Aria2QNAP 型号TS-464C","text":"QNAP 安装 Aria2QNAP 型号TS-464C 加入第三方资源库 AppCenter =&gt; 设置 =&gt; 程序来源 =&gt; 添加 输入名称(MyQNAP)和URL(https://www.myqnap.org/repo.xml) 点击确定即可完成下载并安装 Aria2 在 AppCenter 中点击 MyQNAP =&gt; 所有应用 =&gt; 下载 找到 Aria2 1.37 并点击下载配置并使用 Aria2Aria2 命令行下载常用命令及选项下载并安装完成后就可以使用命令行进行下载了，常用命令如下。命令 aria2c url: 下载文件，url代表文件下载链接 aria2c -S file.torrent: 显示 file.torrent 文件的信息 aria2c –stop: 停止所有下载 aria2c –pause: 暂停所有下载 aria2c –resume: 恢复暂停的下载 aria2c –version: 显示版本信息选项 -x n: 最大使用 n 个线程下载文件 -s n: 使用 n 个连接数进行下载 -o filename: 指定下载文件的文件名 -d directory: 指定文件的下载目录 -c: 断点续传 -m n: 最大下载连接数为 n –max-download-limit=100K: 限制下载速度为 100K/S 以上是 Aria2 的常用命令和选项。你可以在终端中输入“man aria2c”命令来查看完整的命令和选项列表。 示例 直接下载aria2c http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe 后台下载aria2c -D urlaria2c –deamon=true url 重命名下载aria2c --out=QQ http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exearia2c -o QQ http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe 分段下载aria2c -x 2 http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe 配合使用aria2c -s 2 -x 2 -j 10 http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe-s这个参数的意思是使用几个线程进行下载，-x是最大使用几个线程下载，-j就是同时下载几个文件。 断点续传aria2c -c http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe 验证文件正确性`aria2c -c -x16 -s20 -j20 --checksum=md5=xxxxxxxxxxxxx http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe bt 下载aria2c ‘path/xxx.torrnet‘ 磁力链下载 列出种子内容aria2c -S target.torrent 下载种子内编号为 1、4、5、6、7 的文件aria2c --select-file=1,4-7 target.torrent 设置 bt 端口aria2c --listen-port=51413 ‘xxx.torrent’ 设置 dht 端口aria2c --dht-listen-port=51413 ‘xxx.torrent’Aria2 配置文件配置文件路径不同的系统可能会有所不同，按上述方法安装的 Aria2 的配置文件路径为: /opt/AriaII/aria2.conf配置文件详解 ##此部分主要分为几部分## #1、文件保存 #2、下载链接 #3、进度保存 #4、RPC相关 #5、BT\\PT下载相关 ##===================================## ## 文件保存相关 ## ##===================================## # 文件保存目录 dir=../download # 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M disk-cache=16M # 断点续传 continue=true #日志保存 log=aria2.log # 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc # 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc # falloc和trunc则需要文件系统和内核支持 # NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项 file-allocation=prealloc ##===================================## ## 下载连接相关 ## ##===================================## # 最大同时下载任务数, 运行时可修改, 默认:5 max-concurrent-downloads=100 # 同一服务器连接数, 添加时可指定, 默认:1 # 官方的aria2最高设置为16, 如果需要设置任意数值请重新编译aria2 max-connection-per-server=16 # 整体下载速度限制, 运行时可修改, 默认:0（不限制） max-overall-download-limit=0 # 单个任务下载速度限制, 默认:0（不限制） max-download-limit=0 # 整体上传速度限制, 运行时可修改, 默认:0（不限制） max-overall-upload-limit=0 # 单个任务上传速度限制, 默认:0（不限制） max-upload-limit=0 # 禁用IPv6, 默认:false disable-ipv6=false # 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M # 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载 min-split-size=10M # 单个任务最大线程数, 添加时可指定, 默认:5 # 建议同max-connection-per-server设置为相同值 split=16 ##===================================## ## 进度保存相关 ## ##===================================## # 从会话文件中读取下载任务 input-file=aria2.session # 在Aria2退出时保存错误的、未完成的下载任务到会话文件 save-session=aria2.session # 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0 save-session-interval=60 ##===================================## ## RPC相关设置 ## ##此部分必须启用，否则无法使用WebUI ##===================================## # 启用RPC, 默认:false enable-rpc=true # 允许所有来源, 默认:false rpc-allow-origin-all=true # 允许外部访问, 默认:false rpc-listen-all=true # RPC端口, 仅当默认端口被占用时修改 rpc-listen-port=6800 # 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项 rpc-secret=000789456 # 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项 #rpc-user=&lt;USER&gt; # 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项 #rpc-passwd=&lt;PASSWD&gt; # 启动SSL # rpc-secure=true # 证书文件, 如果启用SSL则需要配置证书文件, 例如用https连接aria2 # rpc-certificate= # rpc-private-key= ##===================================## ## BT/PT下载相关 ## ##===================================## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999 listen-port=51413 # 单个种子最大连接数, 默认:55 #bt-max-peers=55 # 打开DHT功能, PT需要禁用, 默认:true enable-dht=true # 打开IPv6 DHT功能, PT需要禁用 enable-dht6=true # DHT网络监听端口, 默认:6881-6999 dht-listen-port=6881-6999 # 本地节点查找, PT需要禁用, 默认:false bt-enable-lpd=true # 种子交换, PT需要禁用, 默认:true enable-peer-exchange=true # 每个种子限速, 对少种的PT很有用, 默认:50K bt-request-peer-speed-limit=50K # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.77 # 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0 seed-ratio=0 # 强制保存会话, 即使任务已经完成, 默认:false # 较新的版本开启后会在任务完成后依然保留.aria2文件 force-save=true # BT校验相关, 默认:true #bt-hash-check-seed=true # 继续之前的BT任务时, 无需再次校验, 默认:false bt-seed-unverified=true # 保存磁力链接元数据为种子文件(.torrent文件), 默认:false bt-save-metadata=true # 单个种子最大连接数, 默认:55 0表示不限制 bt-max-peers=0 # 最小做种时间, 单位:分 # seed-time = 60 # 分离做种任务 bt-detach-seed-only=true #BT Tracker List ;下载地址：https://github.com/ngosang/trackerslist bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.internetwarriors.net:1337/announce,udp://tracker.opentrackr.org:1337/announce 我的配置文件max-concurrent-downloads=100 max-connection-per-server=16 split=16 min-split-size=10M enable-rpc=true rpc-listen-all=true rpc-allow-origin-all=true # 上面这行非常重要，默认为 false，如果不设置为 True 则只能从特定的 IP 或域名访问，一开始就是因为没有这句在 WebUI AriaNg 里面怎么设置都显示未连接。只有协议设置为websocket时才能连接，但是使用 WebUI 也无法下载到正确的文件。加上这句后 http 协议就可以连接并且进行 RPC 推送了。 rpc-secret=7ixxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrIZ WebUI(Aginx) QNAP 中开启网站服务控制台 =&gt; 应用程序 =&gt; Web 服务器 =&gt; 勾选”启用Web服务器”设置默认即可。开启了网站服务之后，QNAP 的共享文件夹中就会多出一个 “Web” 的文件夹。 配置网站服务的虚拟机虚拟主机 =&gt; 勾选”启用虚拟主机” =&gt; 点击”创建虚拟机”主机名称: 可以自定义，这里使用 Aria2根目录: 点击右部倒三角选择网页所在目录协议: 选择 HTTP 即可端口号: WebUI 的访问端口，注意与 Aria2 RPC 端口不同，要另外使用空闲端口，这里使用 6801。这里单独说一下”根目录”，在按上述方法安装了 QNAP 之后，Arial 会被建立一个软链接 /opt/AriaII，其真实路径为/share/CACHEDEV1_DATA/.qpkg/AriaII/，在这个目录里面有一个 “www” 的文件夹，这就是 AriaNg 的网站文件，我开始时将它移动到了 “Web” 文件夹里，配置好之后就不想去动了。其实完全可以在虚拟机的”根目录”里直接指定这里的路径，即/opt/AriaII/wwww，这样指定的话我估计就可以直接使用安装的 App 的”打开”按钮(其访问地址为:http://192.168.3.74/AriaII)来进行访问。可能还需要一些配置，因为对建站不是很熟所以不确定，也没有尝试。 配置 AriaNg配置完网站服务后就可以使用在浏览器中打开控制页面了。(访问地址:http://192.168.3.74:6801)但是现在打开后”Aria2 状态”会显示红色的”未连接”。要进行一些配置来连接 Aria2 服务。首先，点击 “AriaNg 设置” =&gt; 选择全局右边的 RPCAria2 RPC 别名: 可自定义，也可以空着自己会变成”地址:端口”Aria2 RPC 地址: 安装 Aria2 服务的主机地址或IPAria2 协议: 选择”Http”Aria2 RPC Http 请求方法: POSTAria2 RPC 请求头:这个不了解是什么，留空不影响使用Aria2 RPC 秘钥: 这个秘钥在 Aria2 配置文件 /opt/AriaII/aria2.conf 中的 rpc-secret= 行中，可自定义设置，然后点击”重新加载 AriaNg”即可。这里再重复一遍，要在配置文件/opt/AriaII/aria2.conf中加入rpc-allow-origin-all=true才可以在任何主机访问，我被这个地方卡了很长时间。 使用油猴脚本获取网盘资源直链 首先要安装一个浏览器的油猴脚本管理插件，篡改猴或者暴力猴什么的都可以。我使用的是篡改猴。在Edge插件商店中直接搜索”tampermonkey”，前三个应该都可以使用。 然后，到Greasyfork中下载脚本，我选择的是网盘直链下载助手 再打开网盘(这里以夸克网盘为例)的资源页就会开到多出一个”下载助手”的按钮。点击按钮或者查看脚本说明就会知道:API 下载: IDM 或浏览器自带下载。Aria 下载: 这个可以得到资源链接使用命令行或者 Aria2 工具进行下载。RPC 下载: 这个就是使用 RPC 远程推送下载链接进行下载，设置方法见”助手设置”。cURL 下载: 使用终端命令行工具curl下载时的链接，直链地址与 Aria 下载的是一样的，只是前面命令变成了curl，而不是aria2c。BC 下载: 这个使用比特彗星(BitCommet)下载的链接，没有用过。助手设置: 这里就是 RPC 推送的设置选项了，与 AriaNg 上的设置基本一致，格式略有差别。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"},{"name":"Aria2","slug":"Aria2","permalink":"http://shenguosai.github.io/tags/Aria2/"}]},{"title":"相片尺寸","slug":"相片尺寸","date":"2024-08-27T16:03:45.000Z","updated":"2024-08-27T17:13:45.150Z","comments":true,"path":"2024/08/28/相片尺寸/","link":"","permalink":"http://shenguosai.github.io/2024/08/28/%E7%9B%B8%E7%89%87%E5%B0%BA%E5%AF%B8/","excerpt":"最近想搞一个证件照片排版的小程序，上维基百科上查了相片尺寸。","text":"最近想搞一个证件照片排版的小程序，上维基百科上查了相片尺寸。 标准—————————————————————-Wiki—————————————————————-相片尺寸是相片冲印时用到的标准尺寸。这些尺寸会标示为 nR，n 是代表冲印出来相片较短一边的长度(以吋作单位)。相片的尺寸分为两类: 通常(Normal)和超级(Super)。通常类短边为十吋以内(即 10R 以内)的相片，长边会比短边长两吋。反之则会长三吋。而超级类的相片大小，则会呈大约 3:2 的比例，而尺寸会标示为 SnR。这些冲印尺寸在日本有着不同的称呼，就例如 3R 在日本成为 L，两倍大的 2L 则与 5R 相符。除此以外，在日本，相片还有一些特别的尺寸和相应的称呼，就例如 KG 指日本明信片常见的大小(102x152 毫米)。而 nP 则是参照一张书写用纸张的尺寸(457x560毫米)所制订的称呼。与 ISO 216 纸张尺寸不同，相片的长宽比并不标准。但是，相片的尺寸大小会有着对应，详见下表。 美国 日本 中国 大小(吋) 大小(毫米) 300ppi(像素/吋) 长宽比 备注 1寸 25x35 mm 大1寸/小2寸 33x48 mm 2寸 37x49mm(证件照)/37x53 mm(标准2寸) 2” x 2” 51x51 mm 1:1 E 3.25”x4.5” 82.5x120 mm 16:11(1.45) 约数 2R 2.5”x3.5” 63.5x89 mm 750x1050 px 3R L 5寸 3.5”x5” 89x127mm 1051x1500 px 10:7(1.43) 又称为”9x13 cm” 4R KG 6寸 4”x6” 102x152 mm 1205x1795 px 3:2(1.5) 标准 135 底片尺寸。美国，加拿大，澳洲及印度的标准相片尺寸。又称为”10x15 cm” 4D 4.5”x6” 114x152 mm 1350x1800 px 4:3(1.33) 为大部分大众化的数码相机及采用微4/3系统的相机的新尺寸 5R 2L 7寸 5”x7” 127x178 mm 1500x2102 px 7:5(1.4) 3R大小的两倍，又称为”13x18 cm” 6R 8P 8寸 6”x8” 152x203 mm 1795x2398 px 4:3(1.33) 4R大小的两倍 8R 6P 8”x10” 203x254 mm 2398x3000 px 5:4(1、/5) 又称为”20x25 cm” S8R 6PW 小12寸 8”x12” 203x254 mm 2398x3602 px 3:2(1.5) 最接近 A4 纸的大小。6R 大小的两倍，又称为”20x30 cm” 10R 4P 大12寸 10”x12” 254x305 mm 3000x3602 px 6:5(1.2) S10R 4PW 10”x15” 254x381 mm 3000x4500 px 3:2(1.5) 11R 11”x14” 279x356 mm 3295x4205 px 14:11(1.27) 又称为”28x36 cm” S11R 11”x17” 279x432 mm 3295x5102 px 17:11(1.54) 12R 12”x15” 305x381 mm 3602x4500 px 5:4(1.25) S12R 12”x18” 305x465 mm 3602x5492 px 3:2(1.5) —————————————————————-Wiki—————————————————————- 国内常用 名称 照片大小 像素大小 用途 小1寸 2.2x3.3 cm 身份证、体检表 1寸照 2.5x3.5 cm 413x295 - 大1寸 3.3x4.8 cm 学位证书 身份证大头照 3.3x2.2 cm 390x260 2.6x3.2 cm 二代身份证 小2寸 3.3x4.8 cm 567x390 中国护照、港澳通行证 2寸照 3.5x5.3 cm 626x413 - 3.5x4.5 cm 入台证、新加坡签证、英国签证 3.5x4.8 cm 马来西亚签证 5.1x5.1 cm 美国签证 4.5x4.5 cm 日本签证","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"科普","slug":"技术兴趣/科普","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%A7%91%E6%99%AE/"}],"tags":[]},{"title":"中国历史顺序表","slug":"中国历史顺序表","date":"2024-08-22T07:54:59.000Z","updated":"2024-08-27T17:18:34.734Z","comments":true,"path":"2024/08/22/中国历史顺序表/","link":"","permalink":"http://shenguosai.github.io/2024/08/22/%E4%B8%AD%E5%9B%BD%E5%8E%86%E5%8F%B2%E9%A1%BA%E5%BA%8F%E8%A1%A8/","excerpt":"中国历史顺序表原始社会(170万年前~公元前21世纪)旧石器时代(约170万年前~1万年前) 约 170 万年前，元谋人生活在云南元谋一带 约 80 万年前，蓝田人生活在山西蓝田一带 约 70~20 万年前，北京人生活在北京周口店一带 约 3 万年前，山顶洞人生活在北京周口店一带","text":"中国历史顺序表原始社会(170万年前~公元前21世纪)旧石器时代(约170万年前~1万年前) 约 170 万年前，元谋人生活在云南元谋一带 约 80 万年前，蓝田人生活在山西蓝田一带 约 70~20 万年前，北京人生活在北京周口店一带 约 3 万年前，山顶洞人生活在北京周口店一带 新石器时代(1万年前~4千年前) 约 7000~5000 年前，河姆渡、半坡母系氏族公社 约 5000~4000 年前，大汶口文化中晚期—父系氏族公社三皇五帝三皇五帝已不可考，众说纷纭。三皇:天皇、地皇、人皇 燧人、伏羲、神农 — 出自《尚书大传》伏羲、女娲、神农 — 出自《春秋运斗枢》伏羲、祝融、黄帝 — 出自《风俗通义》伏羲 神农、黄帝 — 出自《三字经》有巢氏、燧人氏 — 出自《庄子》、《纲鉴易知录》五帝:东方青帝灵威仰、南方赤帝赤熛怒、中央黄帝含枢纽、西方白帝白招拒、北方黑帝汁光纪太昊、炎帝、黄帝、少昊、颛顼 — 出自《吕氏春秋》黄帝、颛顼、帝喾、尧、舜 — 出自《史记》《大戴礼记》黄帝、少昊、颛顼、帝喾、尧 — 出自《资治通鉴外纪》 奴隶社会(公元前2070年~公元前476年) 夏: 公元前 2070 年 ~ 公元前 1600 年，禹之子启建夏，世袭取代禅让 商: 公元前 1601 年 ~ 公元前 1046 年，商汤灭夏，商朝建立 西周: 公元前 1046 年 ~ 公元前 771 年，周武王灭商，西周开始 东周: 公元前 770 年 ~ 公元前 476 年，俗称东周列国，分为前期和后期。 东周前期俗称春秋时期，公元前 770 年 ~ 公元前 476 年，春秋时期诸侯争相称霸； 东周后期俗称战国时期，公元前 475 年 ~ 公元前 221 年。中国社会有奴隶制进入封建社会，出现战国七雄。封建社会(公元前475年~公元1840年) 秦: 公元前 221 年 ~ 公元前 206 年，秦于战国七雄中崛起吞并六国，首建集权制帝国。 汉: 公元前 206 年 ~ 公元 220 年 西汉: 公元前 206 年 ~ 公元 8 年，刘邦垓下之战灭项羽，称帝与长安。 新莽: 公元 9 年 ~ 公元 25 年，公元 8 年底，王莽篡位称帝，改国号为”新”。 东汉: 公元 25 年 ~ 公元 220 年，刘秀灭王莽，夺回政权，建都洛阳。 三国: 公元 220 年 ~ 公元 280 年，东汉后期，曹操挟天子以令诸侯，出现三国鼎立。 西晋: 公元 266 年 ~ 公元 316年 东晋: 公元 317 年 ~ 公元 420 年 南北朝: 公元 420 年 ~ 公元 589 年 隋: 公元 581 年 ~ 公元 618 年 唐: 公元 618 年 ~ 公元 907 年 五代十国: 五代: 公元 907 年 ~ 公元 960 年 十国: 公元 902 年 ~ 公元 979 年 北宋: 公元 960 年 ~ 1127 年 南宋: 1127 年 ~ 1276 年 元: 1271 年 ~ 1368 年 明: 1368 年 ~ 1644 年 清: 1636 年 ~ 1911 年近代史近代史从 1840 年鸦片战争开始。 民国: 1912 年 ~ 1949 年，中华民国成立。现代史现代史从 1949 年中华人民共和国成立开始。 中华人民共和国: 1949 年 ~ 至今 ※※三皇五帝始，尧舜禹相传。夏商与西周，东周分两段。春秋和战国，一统秦两汉。三分魏蜀吴，二晋前后延。南北朝并立，隋唐五代传。宋元明清后，皇朝至此完。 中国历史大事纪","categories":[{"name":"杂学","slug":"杂学","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/"},{"name":"历史","slug":"杂学/历史","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E5%8E%86%E5%8F%B2/"}],"tags":[]},{"title":"使用PS软件进行一寸证件照片打印排版","slug":"使用PS软件进行一寸证件照片打印排版","date":"2024-08-16T16:13:02.000Z","updated":"2024-09-09T01:13:39.527Z","comments":true,"path":"2024/08/17/使用PS软件进行一寸证件照片打印排版/","link":"","permalink":"http://shenguosai.github.io/2024/08/17/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E8%BF%9B%E8%A1%8C%E4%B8%80%E5%AF%B8%E8%AF%81%E4%BB%B6%E7%85%A7%E7%89%87%E6%89%93%E5%8D%B0%E6%8E%92%E7%89%88/","excerpt":"环境系统: Windows 11软件: Adobe Photoshop 24.5.0 版","text":"环境系统: Windows 11软件: Adobe Photoshop 24.5.0 版 打开要排版的照片用 PS 软件打开要排版的照片。 制作一寸证件照图案设置画布给照片周围加上一圈白边图像 =&gt; 画布大小勾选相对，宽度和高度设置为 0.1 厘米，可根据实际情况调整，颜色选择白色，点击确定。 裁剪图片图像 =&gt; 图像大小勾选重新采样，一寸照片的宽度为 2.6 厘米，高度为 3.6 厘米，分辨率填写 300 像素/英寸。这样，照片就变为一寸大小了。 定义图案编辑 =&gt; 定义图案图案名称根据自己需要填写，点击确定。这样，图案就被定义并存在 PS 软件内备用了。 制作画布文件 =&gt; 新建(画布)主要填写图中框出的三个数值，即宽度、高度和分辨率。如果要排版 3x3 的画布: 宽度 = 2.6厘米 x 3 = 7.8厘米；高度 = 3.6厘米 x 3 = 10.8厘米；分辨率填 300 像素/英寸。如果要排版 4x2 的画布: 宽度 = 2.6厘米 x 4 = 10.4厘米；高度 = 3.6厘米 x 2 =7.2厘米；分辨率填 300 像素/英寸。点击创建，画布就创建好了，下图为 3x3 画布。 将照片嵌入画布如上图，点击右下角中间位置的圆圈图标”创建新的填充或调整图层”，然后点击”图案”。选择刚刚定义好的图案，一般会在最后一个。点击”确定”，这样排版就制作好了。 导出照片文件 =&gt; 导出 =&gt; 导出为这里基本上没有什么需要设置的，点击”导出”，选择希望保存的位置和文件名即可。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Adobe","slug":"Adobe","permalink":"http://shenguosai.github.io/tags/Adobe/"}]},{"title":"通过 ZeroTier 访问所在局域网的其它设备","slug":"通过-ZeroTier-访问所在局域网的其它设备","date":"2024-08-15T03:18:14.000Z","updated":"2024-08-27T17:18:01.357Z","comments":true,"path":"2024/08/15/通过-ZeroTier-访问所在局域网的其它设备/","link":"","permalink":"http://shenguosai.github.io/2024/08/15/%E9%80%9A%E8%BF%87-ZeroTier-%E8%AE%BF%E9%97%AE%E6%89%80%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E7%9A%84%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87/","excerpt":"环境硬件: QNAP TS-464C系统: iStore OS 虚拟机(Zerotier虚拟局域网网关)软件: ZerotierZerotier 网段: 10.147.18.0/24局域网网段: 192.168.3.0/24","text":"环境硬件: QNAP TS-464C系统: iStore OS 虚拟机(Zerotier虚拟局域网网关)软件: ZerotierZerotier 网段: 10.147.18.0/24局域网网段: 192.168.3.0/24 配置配置 Zerotier 设置 配置 Zerotier 网关 插件设置 配置网关开启内核转发先 ssh 登录到 iStore OS(Zerotier虚拟局域网网关，执行以下命令:echo &#39;net.ipv4.ip_forward=1&#39; &gt;&gt; /etc/sysctl.conf sysctl -p 访问方法 重启一下使用的外网设备的 Zerotier 服务； 跟在局域网内访问相同，使用局域网地址访问即可。后续 网上说需要开启 Zerotier 网关的地址伪装，即MASQUERADE；iptables -t nat -A POSTROUTING -s 10.10.10.0/24 -j MASQUERADE 配置静态路由表； 防火墙放行 9933 端口。上述三个步骤本次配置没有使用到，可能是 iStore OS 简化了配置，如果以后有需要使用 Linux 标准系统来使用的需求时再研究。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Zerotier","slug":"Zerotier","permalink":"http://shenguosai.github.io/tags/Zerotier/"}]},{"title":"Debian 12.6 - 安装TCP测试工具TCPing","slug":"Debian-12-6-安装TCP测试工具TCPing","date":"2024-08-14T05:00:46.000Z","updated":"2024-08-27T15:49:54.781Z","comments":true,"path":"2024/08/14/Debian-12-6-安装TCP测试工具TCPing/","link":"","permalink":"http://shenguosai.github.io/2024/08/14/Debian-12-6-%E5%AE%89%E8%A3%85TCP%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7TCPing/","excerpt":"TCPing是基于 TCP 协议的一种ping命令，用来测试数据包能否通过 TCP 协议到达目标主机。他的一大特点，就是可以在禁ping的时候检测网络连通率。","text":"TCPing是基于 TCP 协议的一种ping命令，用来测试数据包能否通过 TCP 协议到达目标主机。他的一大特点，就是可以在禁ping的时候检测网络连通率。 安装tcptracerouteTCPing本质上是一个 shell 脚本，依赖tcptraceroute运行。 sudo apt install tcptraceroute 下载 TCPingsudo wget http://www.vdberg.org/~richard/tcpping -O /usr/bin/tcping 配置权限sudo chmod +x /usr/bin/tcping 使用方法tcping 目标IP 目标端口","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://shenguosai.github.io/tags/Linux/"}]},{"title":"QNAP安装zerotier进行异地组网","slug":"QNAP安装zerotier进行异地组网","date":"2024-08-14T02:56:19.000Z","updated":"2024-08-27T15:55:30.859Z","comments":true,"path":"2024/08/14/QNAP安装zerotier进行异地组网/","link":"","permalink":"http://shenguosai.github.io/2024/08/14/QNAP%E5%AE%89%E8%A3%85zerotier%E8%BF%9B%E8%A1%8C%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/","excerpt":"准备工作 在 App Center 中安装 QVPN Service","text":"准备工作 在 App Center 中安装 QVPN Service 去 ZeroTier 官网 下载相关的安装包从本地安装 ZeroTier允许没有有效数字签名的程序安装安装 打开 App Center，右上角”手动安装”； 点击”浏览”，选中安装包； 点击”安装”。安装完成后，可以在所有应用中找到 Zerotier，但是和群晖不同，威联通上的 Zerotier 是无法点击打开的。(不明白为什么在”我的应用程序”中无法找到 Zerotier。) 加入网络Zerotier 的注册及申请方法不在此赘述，威联通安装好 Zerotier 软件后需要使用命令行来加入网络。且必须获取管理员权限才能安装。 [user@QNAP ~]$ zerotier-cli join xxxxxxxxxxxxxxxx zerotier-cli: authtoken.secret not found or readable in /share/CACHEDEV1_DATA/.qpkg/zerotier (try again as root) [user@QNAP ~]$ sudo zerotier-cli join xxxxxxxxxxxxxxxx We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things: #1) Respect the privacy of others. #2) Think before you type. #3) With great power comes great responsibility. Password: 200 join OK 看到200 join OK，即意味着这台 NAS 已经加入了 zerotier 网络，然后就可以返回 zerotier 的网页管理端对这台设备进行授权。 设置防火墙允许访问如果 QNAP 安装了防火墙QuFirewall，则需要添加一条规则允许 ZeroTier 虚拟局域网网段允许访问。 打开QuFirewall 点击”编辑”修改规则 点击”添加规则”； 输入虚拟局域网的网段地址，子网掩码选255.255.255.0/24即可。其它设置不用更改，点击”应用”，防火墙就允许虚拟局域网网段访问了。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"},{"name":"Zerotier","slug":"Zerotier","permalink":"http://shenguosai.github.io/tags/Zerotier/"}]},{"title":"QNAP虚拟机映像转换问题","slug":"QNAP虚拟机映像转换问题","date":"2024-08-12T01:05:48.000Z","updated":"2024-08-27T15:56:15.099Z","comments":true,"path":"2024/08/12/QNAP虚拟机映像转换问题/","link":"","permalink":"http://shenguosai.github.io/2024/08/12/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%98%A0%E5%83%8F%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/","excerpt":"QNAP 的虚拟机必须要使用自己转换出的.img，下面记录一下自己安装虚拟机的映像转换过程。","text":"QNAP 的虚拟机必须要使用自己转换出的.img，下面记录一下自己安装虚拟机的映像转换过程。 IMG文件QNAP 上安装了iStoreOS 系统的旁路由虚拟机，先使用 StarWind V2V Convertor 软件将IMG文件转换为 QNAP Virtual Station 中可以使用的 .vdi 或 .vdmk 文件，然后使用 QNAP Vistual Station 内置的转换工具进行转换，转换完就是其可以使用的 .img 文件了。 这个系统已安装成功！ ISO文件方法一.iso 文件网上的信息很少，唯一有点用处的如下将ISO镜像转换成VDI、VDH和VMDK格式: 首先，要先下载两个软件: VMWare 和 VirtualBox 在 VMWare 中使用.iso映像安装好虚拟机； 选中安装好的虚拟机，文件=&gt;导出为OVF，然后会生成 4 个文件； 打开 VirtualBox 软件， 上述方法由于还没有实践过，未验证成功，等验证成功后再补充完整步骤。方法二.iso的文件大概介绍如下：iso格式，ISO是一种光盘镜像文件，无法直接使用，需要利用一些工具进行解压后才能使用。ISO一般都是将光盘文件做成一个文件，而有一些光盘软件设定只能从光驱进行安装，那么直接解压后还是不能使用，需要用到虚拟光驱软件（虚拟光驱的软件很多，Daemon Tools是一款不错的虚拟光驱软件）.img文件大概介绍如下：img格式，IMG是一种文件压缩格式（archive format），.IMG这个文件格式可视为.ISO格式的一种超集合。由于.ISO只能压缩使用ISO9660和UDF这两种文件系统的存储媒介，意即.ISO只能拿来压缩CD或DVD，因此才发展出了.IMG，它是以.ISO格式为基础另外新增可压缩使用其它文件系统的存储媒介的能力，.IMG可向后兼容于.ISO，如果是拿来压缩CD或DVD，则使用.IMG和.ISO这两种格式所压缩出来的内容是一样的。从上面的介绍，可以看出.img是.iso的一种超集合，两者解压得到的东西是一样的，所以将一个.iso转化为.img，可以直接将.iso重命名为.img即可。重命名为.img之后确实可以通过 StarWind V2V Convertor 软件转化为 .vmdk 文件了，并且也能够通过 QNAP Virtual Station 的转换工具转换为其可以使用的 .img 文件，也能开始引导安装，但是安装(Debian 12.6 和 Ubuntu 18.04)到磁盘分区的时候出现错误无法识别到硬盘，可能是设置哪里有问题，后续尝试成功后补充。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"}]},{"title":"QNAP虚拟机安装ubuntu 18.04 无法登录远程桌面","slug":"QNAP虚拟机安装ubuntu-18-04-无法登录远程桌面","date":"2024-08-08T07:10:29.000Z","updated":"2024-08-27T15:55:54.657Z","comments":true,"path":"2024/08/08/QNAP虚拟机安装ubuntu-18-04-无法登录远程桌面/","link":"","permalink":"http://shenguosai.github.io/2024/08/08/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu-18-04-%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/","excerpt":"在 QNAP 上安装 Ubuntu Linux 工作站本来想在 QNAP 上使用 “Vitualization Station 虚拟化工作站”中安装一个 Linux 服务器版系统跑一些服务，但是尝试了 Debian 12.6 和 Ubuntu 18.04 都卡在了磁盘分区的设置上，感觉像是识别不到硬盘，无法安装文件系统。没有办法只有转战 QNAP 自带的 Ubuntu Linux 工作站了，通过跟客服咨询，这个 App 只有桌面版无法安装 Server 版。既然安装了桌面版，那当然要设置成能够远程登录了。","text":"在 QNAP 上安装 Ubuntu Linux 工作站本来想在 QNAP 上使用 “Vitualization Station 虚拟化工作站”中安装一个 Linux 服务器版系统跑一些服务，但是尝试了 Debian 12.6 和 Ubuntu 18.04 都卡在了磁盘分区的设置上，感觉像是识别不到硬盘，无法安装文件系统。没有办法只有转战 QNAP 自带的 Ubuntu Linux 工作站了，通过跟客服咨询，这个 App 只有桌面版无法安装 Server 版。既然安装了桌面版，那当然要设置成能够远程登录了。 安装 xrdp 服务器等软件由于一直登录不上，所以搞清楚原因之前杂七杂八装了很多，也不知道哪个是非必需的，总之目前安装上的软件如下:(安装命令从上到下为个人感觉必要性高低) sudo apt-get update sudo apt-get install xrdp sudo apt-get install xfce4 xfce4-goodies sudo apt-get install vnc4server tightvnc sudo apt-get install xorg 刚开始的时候只安装了 xrdp 和 xfce4，感觉只用这两个就可以了，但是由于后面一直登录不上不知道原因所以又装了一大堆。还有好像可以不用 xfce4，直接连接 GNOME 的远程桌面，那样的话我感觉才 xfce4 都不需要安装，没有详细研究先不讨论。 安装完之后打开服务，由于使用 zerotier 进行组网，所以没有进行端口映射和防火墙的设置。 sudo systemctl start xrdp 无法登录远程桌面及解决方法通过 Win11 连接远程桌面的时候发现输入完登录信息点击”OK”按钮之后就一直没有任何反应，通过查看服务状态systemctl status xdrp。发现错误信息:[ERROR] xrdp_wm_log_msg: Error connecting to sesman: 127.0.0.1 port: 3350 。通过搜索，在 Github 上找到了答案，虽然对原理不是很理解，但是觉得说的很有道理于是开始尝试。这是在设置的时候有点问题，本人设置步骤如下: sysctl -a | grep disable_ipv6 sysctl: reading key “net.ipv6.conf.all.stable_secret”net.ipv6.conf.all.disable_ipv6 = 1sysctl: reading key “net.ipv6.conf.default.stable_secret”net.ipv6.conf.default.disable_ipv6 = 1sysctl: reading key “net.ipv6.conf.eth0.stable_secret”net.ipv6.conf.eth0.disable_ipv6 = 0sysctl: reading key “net.ipv6.conf.eth1.stable_secret”net.ipv6.conf.eth1.disable_ipv6 = 0sysctl: reading key “net.ipv6.conf.eth2.stable_secret”net.ipv6.conf.eth2.disable_ipv6 = 0sysctl: reading key “net.ipv6.conf.lo.stable_secret”net.ipv6.conf.lo.disable_ipv6 = 1sysctl: reading key “net.ipv6.conf.ztjlhq7oim.stable_secret”net.ipv6.conf.ztjlhq7oim.disable_ipv6 = 1 于是根据上面的解答解答需要将net.ipv6.conf.eth0.disable_ipv6、net.ipv6.conf.eth1.disable_ipv6、net.ipv6.conf.eth2.disable_ipv6的值设为 1。 方法一sudo sysctl -w net.ipv6.conf.eth0.disable_ipv6=1 sudo sysctl -w net.ipv6.conf.eth1.disable_ipv6=1 sudo sysctl -w net.ipv6.conf.eth2.disable_ipv6=1 方法二设置/etc/sysctl.conf文件 sudo vi /etc/sysctl.conf 在文件末尾加入下面三行: net.ipv6.conf.all.disable_ipv6=0 net.ipv6.conf.default.disable_ipv6=0 net.ipv6.conf.lo.disable_ipv6=0 使配置修改生效 sudo sysctl -p 经实验，上述两种方法只能暂时禁用ipv6，重启之后就会失效。长期生效方法:如何在 Ubuntu Linux 上禁用 IPv6 然后就登录进去了，虽然是 xfce 桌面。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"}]},{"title":"部署私有KMS激活服务器激活Office","slug":"部署私有KMS激活服务器激活Office","date":"2024-06-14T11:17:19.000Z","updated":"2024-08-27T15:24:39.617Z","comments":true,"path":"2024/06/14/部署私有KMS激活服务器激活Office/","link":"","permalink":"http://shenguosai.github.io/2024/06/14/%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%89KMS%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BF%80%E6%B4%BBOffice/","excerpt":"创建 iStoreOS 虚拟机今年 618 入坑威联通，终于知道为什么大家都推荐群晖了，软件使用还好但是配置方法确实不太人性化。话归正传: 准备工作 QTS 中要安装有 Virtualization Station 虚拟化工作站； 下载 iStoreOS 映像文件，本次使用的是 istoreos-22.03.6-2024052410-x86-64-squashfs-combined.vmdk，可以到这里下载。我下载的 vmdk 文件，然后发现威联通不认 vmdk，又用威联通自带的工具转成了 img 映像。感觉应该是可以直接使用下载的 img 映像来安装。","text":"创建 iStoreOS 虚拟机今年 618 入坑威联通，终于知道为什么大家都推荐群晖了，软件使用还好但是配置方法确实不太人性化。话归正传: 准备工作 QTS 中要安装有 Virtualization Station 虚拟化工作站； 下载 iStoreOS 映像文件，本次使用的是 istoreos-22.03.6-2024052410-x86-64-squashfs-combined.vmdk，可以到这里下载。我下载的 vmdk 文件，然后发现威联通不认 vmdk，又用威联通自带的工具转成了 img 映像。感觉应该是可以直接使用下载的 img 映像来安装。 安装 iStoreOS 虚拟机系统打开 Virtualization Station，点击”建立”，弹出如下对话框；虚拟机名称自己起一个喜欢的名字就可以，文件位置是虚拟机要安装的位置。自定义设置里选择”使用现有映像”，然后指定转换好的的 img 映像存放路径。其它默认即可，最后会出来配置总览，确认无误后点击”建立”，iStoreOS 的虚拟机系统就建立成功了。配置 iSoreOS由于我是使用 iStoreOS 作为旁路网关，除了配置以下网络之外其它默认即可:首先在主路由中确认 iStoreOS 的 IP 地址，然后在浏览器中输入就可以进入到 iStaoreOS 的管理界面。点击”网络向导”根据个人需求选择上网方式即可，这里选择”配置为旁路由”。然后将 IP 地址、子网掩码、网关、DNS 依次输入即可。 IP 地址: 192.168.50.73 (设置 iStorOS 的访问地址)子网掩码: 255.255.255.0网关: 192.168.50.1 (主路由的 IP 地址)DNS: 192.168.50.1 (主路由的 IP 地址)也可 ssh 登录使用命令vi /etc/config/network编辑。编辑方法:找到带有lan字符的位置，添加如下文本: option ipaddr &#39;192.168.50.73&#39; option netmask &#39;255.255.255.0&#39; option gateway &#39;192.168.50.1&#39; 旁路网关其它设置默认即可。 安装 KMS 服务器插件点击”iStore”，找到”KMS服务器”插件，点击右下角的”安装”按钮。安装完成后就可以在”iStore”的已安装中看到，点击打开，看到绿色的”KMS 运行中”就说明已经可以了。 激活Office激活 Office 这里出了一点小问题，由于以前通过激活软件进行的激活，现在到期了，如果激活时出现0x80080005错误码需要设置一下把原来的配置清空。参照:[IDEA] 增加修复0x80080005错误的功能 #216问题描述:目前发现 服务器运行失败 (0x80080005) 是由于KMS工具劫持 SppExtComObj.exe 程序，而未能正确运行导致，因此可以在Office Tool 中增加对此劫持的检测，并进行修复。如运行 C:\\WINDOWS\\system32\\SppExtComObj.exe，正常情况应会无任何提示的返回，失效的KMS劫持会导致弹窗报错如下图解决方法: 检测注册表是否存在配置项 HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\SppExtComObj.exe如存在，则将其删除 运行 C:\\WINDOWS\\system32\\SppExtComObj.exe，如正常则会立刻返回，退出码应为0 提示用户尝试再次激活 上述操作完成之后，如为安装可以先使用 Office Tool Plus.exe 选择需要的版本进行部署。本文以 office 2021 举例:开始 =&gt; CMD =&gt; 使用管理员打开，分别输入以下命令进行激活: cd /d &quot;%ProgramFiles%\\Microsoft Office\\Office16&quot; #进入指定目录 cscript OSPP.VBS /sethst: 192.168.50.73:1688 #指定 kms 服务器地址和端口，默认端口 1688，如采用默认可不指定，如外网需要则要将端口映射出去 cscript OSPP.VBS /act #激活当前安装的Office。 cscript OSPP.VBS /dstatus #显示当前已安装产品密钥的许可证信息。可以查看到自已安裝的版本有多少个序列号。 输入上面命令后的输出分别如下: c:\\Windows\\System32&gt;cd /d &quot;%ProgramFiles%\\Microsoft Office\\Office16&quot; C:\\Program Files\\Microsoft Office\\Office16&gt;cscript OSPP.VBS /sethst:kms-server addr. Microsoft (R) Windows Script Host Version 5.812 版权所有(C) Microsoft Corporation。保留所有权利。 ---Processing-------------------------- --------------------------------------- Successfully applied setting. --------------------------------------- ---Exiting----------------------------- C:\\Program Files\\Microsoft Office\\Office16&gt;cscript OSPP.VBS /act Microsoft (R) Windows Script Host Version 5.812 版权所有(C) Microsoft Corporation。保留所有权利。 ---Processing-------------------------- --------------------------------------- Installed product key detected - attempting to activate the following product: SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx LICENSE NAME: Office 21, Office21VisioPro2021VL_KMS_Client_AE edition LICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channel Last 5 characters of installed product key: XXXXX &lt;Product activation successful&gt; --------------------------------------- Installed product key detected - attempting to activate the following product: SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx LICENSE NAME: Office 21, Office21ProPlus2021VL_KMS_Client_AE edition LICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channel Last 5 characters of installed product key: XXXXX &lt;Product activation successful&gt; --------------------------------------- --------------------------------------- ---Exiting----------------------------- C:\\Program Files\\Microsoft Office\\Office16&gt;cscript OSPP.VBS /dstatus Microsoft (R) Windows Script Host Version 5.812 版权所有(C) Microsoft Corporation。保留所有权利。 ---Processing-------------------------- --------------------------------------- PRODUCT ID: XXXXX-XXXXX-XXXXX-XXXXX SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx LICENSE NAME: Office 21, Office21VisioPro2021VL_KMS_Client_AE edition LICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channel BETA EXPIRATION: 1601/1/1 LICENSE STATUS: ---LICENSED--- REMAINING GRACE: 179 days (259172 minute(s) before expiring) Last 5 characters of installed product key: K2HT4 Activation Type Configuration: ALL DNS auto-discovery: KMS name not available KMS machine registry override defined: kms-server addr:1688 Activation Interval: 120 minutes Renewal Interval: 10080 minutes KMS host caching: Enabled --------------------------------------- PRODUCT ID: XXXXX-XXXXX-XXXXX-XXXXX SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx LICENSE NAME: Office 21, Office21ProPlus2021VL_KMS_Client_AE edition LICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channel BETA EXPIRATION: 1601/1/1 LICENSE STATUS: ---LICENSED--- REMAINING GRACE: 179 days (259172 minute(s) before expiring) Last 5 characters of installed product key: 6F7TH Activation Type Configuration: ALL DNS auto-discovery: KMS name not available KMS machine registry override defined: kms-server addr:1688 Activation Interval: 120 minutes Renewal Interval: 10080 minutes KMS host caching: Enabled --------------------------------------- --------------------------------------- ---Exiting-----------------------------","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"QNAP-海报墙可刮削IP","slug":"QNAP-海报墙可刮削IP","date":"2024-06-12T07:25:21.000Z","updated":"2024-08-27T15:54:42.600Z","comments":true,"path":"2024/06/12/QNAP-海报墙可刮削IP/","link":"","permalink":"http://shenguosai.github.io/2024/06/12/QNAP-%E6%B5%B7%E6%8A%A5%E5%A2%99%E5%8F%AF%E5%88%AE%E5%89%8AIP/","excerpt":"","text":"目前解决海报墙不可刮削问题的方法基本都是修改 hosts，因为墙屏蔽的是特殊 IP，而不是 themovie 等网站本身。 修改 QNAP 的 hosts 文件:这种方法比较简单方便，缺点就是每次威联通重启就会重置 hosts 文件。sudo vi /etc/hosts在 hosts 文件中指定域名的 IP 地址: 13.226.238.82 api.themoviedb.org 修改路由器的 hosts 文件:这种方法一劳永逸，但是需要能够 ssh 路由器并取得 root 权限。操作方法及添加内容与 1. 相同。 在网上看到一个刮削网站的 IP 清单，将测试通过的记录如下:(摘自:NAS干货分享 篇一：一招解决影片削挂问题，打造完美海报墙) 13.224.161.90 api.themoviedb.org 104.16.61.155 image.themoviedb.org 13.35.67.86 api.themoviedb.org 54.192.151.79 www.themoviedb.org 13.249.175.212 api.thetvdb.com 13.35.161.120 api.thetvdb.com 13.226.238.76 api.themoviedb.org 13.35.7.102 api.themoviedb.org 13.226.191.85 api.themoviedb.org 52.85.79.89 api.themoviedb.org 13.225.41.40 api.themoviedb.org 13.226.251.88 api.themoviedb.org","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"}]},{"title":"Debian Linux 使用 -- 远程桌面黑屏并闪退","slug":"Debian-Linux-使用-远程桌面黑屏并闪退","date":"2024-05-11T02:39:11.000Z","updated":"2024-08-27T15:50:44.982Z","comments":true,"path":"2024/05/11/Debian-Linux-使用-远程桌面黑屏并闪退/","link":"","permalink":"http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E9%BB%91%E5%B1%8F%E5%B9%B6%E9%97%AA%E9%80%80/","excerpt":"安装 Xrdp 使用 Xorg 进行远程登录网上有很多远程桌面的登录方法，如 VNC、X11 转发等等，由于不喜欢安装太多软件，想使用 Windoews 自带的远程桌面。 sudo apt install xrdp","text":"安装 Xrdp 使用 Xorg 进行远程登录网上有很多远程桌面的登录方法，如 VNC、X11 转发等等，由于不喜欢安装太多软件，想使用 Windoews 自带的远程桌面。 sudo apt install xrdp 安装完成后该服务将自动开启，可通过下面命令确认是否开启: sudo systemctl status xrdp 红框处显示 active(running) 则说明已开启。 解决远程桌面连接上之后黑屏并闪退问题这个经常会有人说更换 test 版本的 xrdp 来解决，但是通过以下办法可以正常登录。编辑/etc/xrdp/startwm.sh sudo vi /etc/xrdp/startwm.sh 加入下面三行内容: unset DBUS_SESSION_BUS_ADDRESS unset XDG_RUNTIME_DIR . $HOME/.profile 然后就可以通过 Xorg 登录看到桌面了。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://shenguosai.github.io/tags/Linux/"}]},{"title":"Debian Linux 使用 -- 系统安装","slug":"Debian-Linux-使用-系统安装","date":"2024-05-11T00:32:17.000Z","updated":"2024-08-27T15:50:34.298Z","comments":true,"path":"2024/05/11/Debian-Linux-使用-系统安装/","link":"","permalink":"http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/","excerpt":"机器配置这台机器比较老，是200x年在日本买的富士通的 FMV-DESKPOWER，型号是 FMVFB70T。配置如下: 配件名称 型号 规格 主板 FJNB023 CPU Core(TM)2 Duo P8400 2.26GHz 2核2线程 Chipset Intel GM45 Express 1066MHz 内存 型号不明，看实物为尔必达颗粒 DDR3-1066 PC3-8500 1G x2 硬盘 Seagate ST3500820AS 500G容量，7200转/s，5V 0.65A，12V 0.42A LAN Marvell 88E8055 1000BASE-T/100BASE-TX/10BASE-T,支持WOL WIFI Qualcomm Atheros AR928X IEEE802.11/a/b/g/n USB USB2.0(4pin x5) 显示器 19inch，1440 x 900","text":"机器配置这台机器比较老，是200x年在日本买的富士通的 FMV-DESKPOWER，型号是 FMVFB70T。配置如下: 配件名称 型号 规格 主板 FJNB023 CPU Core(TM)2 Duo P8400 2.26GHz 2核2线程 Chipset Intel GM45 Express 1066MHz 内存 型号不明，看实物为尔必达颗粒 DDR3-1066 PC3-8500 1G x2 硬盘 Seagate ST3500820AS 500G容量，7200转/s，5V 0.65A，12V 0.42A LAN Marvell 88E8055 1000BASE-T/100BASE-TX/10BASE-T,支持WOL WIFI Qualcomm Atheros AR928X IEEE802.11/a/b/g/n USB USB2.0(4pin x5) 显示器 19inch，1440 x 900 官网建议最大内存 4G(2G x2)，是因为当时预装的 Windows Vista Home 是 32 位系统，最大支持 4G 内存，而根据 GN45 Express 的 Chipset 规格最大可支持 8G(4G x2) 内存。 相关命令: lscpu #使用程序将 sysfs 和 /proc/cpuinfo 中的详细 CPU 信息输出到屏幕 sudo dmidecode -t 2 #主板信息 sudo dmidecode -t 16 #内存信息 lspci | grep Ethernet #有线网卡 lspci | greo Wireless #无线网卡 iwconfig #无线网卡 下载镜像Debian 有很多版本，由于机器比较老，我使用的是 32 位的 dvd 映像进行的安装。下载地址: debian-12.5.0-i386-DVD-1.iso.torrent 安装系统使用 Ventoy 正常安装即可。 配置软件安装由于使用的 DVD 映像进行的系统安装，在后续安装软件时会优先使用介质安装，需要在 /etc/apt/source.list 中关闭映像安装，如下在第一行中添加 # 进行注释(我在安装系统时选择的是华为的镜像源)。 # deb cdrom:[Debian GNU/Linux 12.5.0 _Bookworm_ - Official i386 DVD Binary-1 with firmware 20240210-11:28]/ bookworm contrib main non-free-firmware deb http://mirrors.huaweicloud.com/debian/ bookworm main non-free-firmware deb-src http://mirrors.huaweicloud.com/debian/ bookworm main non-free-firmware deb http://security.debian.org/debian-security bookworm-security main non-free-firmware deb-src http://security.debian.org/debian-security bookworm-security main non-free-firmware # bookworm-updates, to get updates before a point release is made; # see https://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_updates_and_backports deb http://mirrors.huaweicloud.com/debian/ bookworm-updates main non-free-firmware deb-src http://mirrors.huaweicloud.com/debian/ bookworm-updates main non-free-firmware 用户权限在安装系统时会设置两个用户，一个 root 用户，一个普通用户，而使用普通用户时默认无法使用sudo，所以需要安装sudo并添加权限。 安装sudo切换至 root 用户并安装sudo:su root apt install sudo 添加权限网上介绍了两种方法，但我使用方法一的时候没有成功，建议直接使用方法二。方法一: 切换至 root 用户并执行下面的命令。sudo usermod -aG sudo username 上面命令中的 username 换成自己的用户名。方法二: 切换至 root 用户，在 /etc/sudoer.d/ 目录下新建一个以自己用户名为文件名的文件。touch /etc/sudoer.d/username nano /etc/sudoer.d/username 添加以下内容:username ALL=(ALL)ALL 注意上面的 username 需要换成自己的用户名，然后 Ctrl+X 保存退出并切换回自己的用户就可以了。 配置语言在安装过程中如果选择系统语言为英语进行安装的话进入系统后还要设置语言为中文并安装中文输入法，折腾了一番成功了但是具体的步骤不知道是否合理。 安装语言包sudo apt update sudo apt install locales 配置 localesudo dpkg-reconfigure locales 在出现的对话框的表里一直下拉选择 zh_CN.UTF-8 。然后在下一个界面中选择 zh_CN.UTF-8 作为默认的 locale 。 安装中文字体(非必需)sudo apt install fonts-wqy-microhei fonts-wqy-zenhei xfonts-wqy 安装中文输入法(1) 如果原来有安装先卸载sudo apt purge fcitx* ibus* (2) 安装 fcitx5 中文拼音输入法sudo apt install fcitx5 fcitx5-chinese-addons (3) 然后重启系统打开 fcitx 配置根据自己的需要进行配置即可。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://shenguosai.github.io/tags/Linux/"}]},{"title":"Pura 70系列四款机型区别","slug":"Pura-70系列四款机型区别","date":"2024-04-28T05:49:31.000Z","updated":"2024-08-27T15:54:23.898Z","comments":true,"path":"2024/04/28/Pura-70系列四款机型区别/","link":"","permalink":"http://shenguosai.github.io/2024/04/28/Pura-70%E7%B3%BB%E5%88%97%E5%9B%9B%E6%AC%BE%E6%9C%BA%E5%9E%8B%E5%8C%BA%E5%88%AB/","excerpt":"","text":"机型 Pura 70 Pura 70 Pro Pura 70 Pro+ Pura 70 Ultra 颜色 羽纱黑/雪域白/樱玫红/冰晶蓝 羽纱黑/雪域白/罗兰紫 光织银/弦乐白/魅影黑 香颂绿/摩卡棕/星芒白/星芒黑 屏幕外观 直屏/6.6英寸/第二代昆仑玻璃 等深四曲设计/6.8英寸/第二代昆仑玻璃 等深四曲设计/6.8英寸/玄武钢化昆仑玻璃 等深四曲设计/6.8英寸/玄武钢化昆仑玻璃 屏幕规格 1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度 1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度 1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度 1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度 后置摄像头 5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/1200万5倍光学变焦潜望式长焦摄像头/1300万超广角摄像头 5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/4800万5倍光学变焦潜望式长焦摄像头/1250万超广角摄像头 5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/4800万5倍光学变焦潜望式长焦摄像头/1250万超广角摄像头 5000万新一代超聚光主摄(F1.6~F4.0可变光圈)/5000万5倍光学变焦潜望式长焦摄像头/4000万超广角摄像头 前置摄像头 1300万摄像头 1300万摄像头 支持自动对焦 1300万摄像头 支持自动对焦 1300万摄像头 支持自动对焦 内存 12G+256G、12G+512G、12G+1TB 12G+256G、12G+512G、12G+1TB 16G+512G、16G+1TB 16G+512G、16G+1TB 价格 5499元 5999元 6999元 6499元 6999元 7999元 7999元 8999元 9999元 10999元 电池容量 4900mAh(典型值) 5050mAh(典型值) 5050mAh(典型值) 5200mAh(典型值) 充电功率 有线66W、无线50W、无线反向7.5W 有线100W、无线80W、无线反向20W 有线100W、无线80W、无线反向20W 有线100W、无线80W、无线反向20W 防水等级 IP68 1.5m IP68 2m IP68 2m IP68 2m 卫星通信 / 北斗卫星通信 北斗卫星通信+天通卫星通信 北斗卫星通信+天通卫星通信","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"Pura 70","slug":"Pura-70","permalink":"http://shenguosai.github.io/tags/Pura-70/"}]},{"title":"使用越狱iPhone部署ddns服务","slug":"使用越狱iPhone部署ddns服务","date":"2024-04-15T12:21:42.000Z","updated":"2024-09-23T13:15:35.888Z","comments":true,"path":"2024/04/15/使用越狱iPhone部署ddns服务/","link":"","permalink":"http://shenguosai.github.io/2024/04/15/%E4%BD%BF%E7%94%A8%E8%B6%8A%E7%8B%B1iPhone%E9%83%A8%E7%BD%B2ddns%E6%9C%8D%E5%8A%A1/","excerpt":"iPhone 越狱并获取root权限此处略，可以使用爱思助手 8.0 通过 Chimera 进行的越狱，此越狱方式并不完美，每次iPhone重启后所有越狱安装的app都会闪退，需要重新越狱一次才行。 在 CloudFlare 上建立一个二级域名首先，在 Cloudflare 上申请一个域名或者在其他网站申请托管到 Cloudflare 上，并建立用来作为 DDNS 用的 A 记录和 AAAA 记录。假设是:A 记录: ddns.example.com 1.1.1.1AAAA 记录 ddns.example.com 2606:4700:4700::1111IP 地址先可以随便填。","text":"iPhone 越狱并获取root权限此处略，可以使用爱思助手 8.0 通过 Chimera 进行的越狱，此越狱方式并不完美，每次iPhone重启后所有越狱安装的app都会闪退，需要重新越狱一次才行。 在 CloudFlare 上建立一个二级域名首先，在 Cloudflare 上申请一个域名或者在其他网站申请托管到 Cloudflare 上，并建立用来作为 DDNS 用的 A 记录和 AAAA 记录。假设是:A 记录: ddns.example.com 1.1.1.1AAAA 记录 ddns.example.com 2606:4700:4700::1111IP 地址先可以随便填。 取得所需的 ZONE_ID、API_Token 和 RECORD_IDZONE_ID 就在域名概述页的右下侧，名字为区域 ID。然后在同一页面的下方点击获取 API 令牌。点击创建令牌，使用“编辑区域 DNS”的模板，选择相应的域名，点击显示摘要，并创建令牌。把生成的 API_Token 保存好。接着打开一个 Linux 终端，执行以下代码: ZONE_ID=&quot;你的 Zone ID&quot; API_TOKEN=&quot;你的API Token&quot; curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records?name=ddns.example.com&quot; \\ -H &quot;Authorization: Bearer $API_TOKEN&quot; \\ -H &quot;Content-Type: application/json&quot; 注意替换上述代码中的 ZONE_ID，API_Token，二级域名。在返回的结果中，找到“name”与相应二级域名相符的 RECORD_ID。 建立 Shell 脚本在你想运行的位置比如root目录建立一个脚本文件: mkdir cfddns &amp;&amp; cd cfddns touch ddns.sh 然后用编辑器打开: vim ddns.sh 复制一下代码并保存退出: #!/bin/sh NEW_IP=`curl -s http://ipv4.ddnspod.com` CURRENT_IP=`cat $(dirname &quot;$0&quot;)/current_ip.txt` CURRENT_TIME=$(date +&quot;%F %T&quot;) DDNS=&quot;home.starnest.eu.org&quot; ZONE_ID=&quot;1234567890abcdef1234567890abcdef&quot; API_TOKEN=&quot;1234567890abcdef1234567890abcdef&quot; RECORD_ID=&quot;1234567890abcdef1234567890abcdef&quot; if [ &quot;$NEW_IP&quot; = &quot;$CURRENT_IP&quot; ] then echo &quot;[$CURRENT_TIME] No Change in IP Adddress&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt else curl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \\ -H &quot;Authorization: Bearer $API_TOKEN&quot; \\ -H &quot;Content-Type: application/json&quot; \\ --data &#39;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IP&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/null echo $NEW_IP &gt; $(dirname &quot;$0&quot;)/current_ip.txt echo &quot;[$CURRENT_TIME] IP changed to $NEW_IP&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt fi 若想同时适用对 ipv6 有效则使用下面的脚本(未测试): #!/bin/sh # 简单的使用Clodflare API来实现DDNS的脚本 NEW_IPv4=$(curl -s http://ipv4.icanhazip.com) NEW_IPv6=$(curl -s http://ipv6.icanhazip.com) CURRENT_IPv4=$(cat $(dirname &quot;$0&quot;)/current_ipv4.txt) CURRENT_IPv6=$(cat $(dirname &quot;$0&quot;)/current_ipv6.txt) CURRENT_TIME=$(date +&quot;%F %T&quot;) # 填入DDNS域名 DDNS=&quot;ddns.example.com&quot; # ZONE_ID在Clouflare域名页面上获取 ZONE_ID=&quot;1234567890abcdef1234567890abcdef&quot; # API_TOKEN在Clouflare个人资料页面上创建 API_TOKEN=&quot;1234567890abcdef1234567890abcdef&quot; # RECORD_ID获取应执行以下代码： # ZONE_ID=&quot;你的 Zone ID&quot; # API_TOKEN=&quot;你的API Token&quot; # curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records?name=example.com&quot; \\ # -H &quot;Authorization: Bearer $API_TOKEN&quot; \\ # -H &quot;Content-Type: application/json&quot; RECORD_ID=&quot;1234567890abcdef1234567890abcdef&quot; if [ -z &quot;$NEW_IPv4&quot; ] &amp;&amp; [ -z &quot;$NEW_IPv6&quot; ]; then echo &quot;[$CURRENT_TIME] Failed to get IP address&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt exit 1 elif [ &quot;$NEW_IPv4&quot; = &quot;$CURRENT_IPv4&quot; ] &amp;&amp; [ &quot;$NEW_IPv6&quot; = &quot;$CURRENT_IPv6&quot; ]; then echo &quot;[$CURRENT_TIME] No change in IP address&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt else if [ -n &quot;$NEW_IPv4&quot; ] &amp;&amp; [ &quot;$NEW_IPv4&quot; != &quot;$CURRENT_IPv4&quot; ]; then curl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \\ -H &quot;Authorization: Bearer $API_TOKEN&quot; \\ -H &quot;Content-Type: application/json&quot; \\ --data &#39;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IPv4&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/null echo &quot;$NEW_IPv4&quot; &gt; $(dirname &quot;$0&quot;)/current_ipv4.txt echo &quot;[$CURRENT_TIME] IPv4 address changed to $NEW_IPv4&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt fi if [ -n &quot;$NEW_IPv6&quot; ] &amp;&amp; [ &quot;$NEW_IPv6&quot; != &quot;$CURRENT_IPv6&quot; ]; then curl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \\ -H &quot;Authorization: Bearer $API_TOKEN&quot; \\ -H &quot;Content-Type: application/json&quot; \\ --data &#39;&#123;&quot;type&quot;:&quot;AAAA&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IPv6&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/null echo &quot;$NEW_IPv6&quot; &gt; $(dirname &quot;$0&quot;)/current_ipv6.txt echo &quot;[$CURRENT_TIME] IPv6 address changed to $NEW_IPv6&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt fi fi 执行 Shell 脚本并设置定时任务手动执行确认先手动执行一次脚本，然后检查 Cloudflare 解析记录和同文件夹下生成的 crontab_log.txt，确认 IP 是否正确更新。 /bin/sh ddns.sh 设置定时任务若上述脚本执行无误，则使用 plist 设置定时任务。首先，要新增被管理项需要新增一个.plist放入苹果的管理文件夹下，然后使其被加载后执行。苹果根据用户的角色提供了不同的 Launtch 存放位置。 ~/Library/LaunchAgents # 当前用户定义的任务 /Library/LaunchAgents # 系统管理员定义的任务 /Library/LaunchDaemons # 管理员定义的系统守护进程任务 /System/Library/LaunchAgents # 苹果定义的任务 /System/Library/LaunchDaemons # 苹果定义的系统守护进程任务 很显然，我们最好不要使用下面两个位置的，我这里使用的是/Library/LaunchDaemons。 cd /Library/LaunchDaemons touch starnest.ddns.plist #前面的名字随便起，最后以`.plist`结尾 然后编辑starnest.ddns.plist文件: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE plist PUBLIC &quot;-//Apple Computer//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt; &lt;plist version=&quot;1.0&quot;&gt; &lt;dict&gt; &lt;key&gt;Label&lt;/key&gt; &lt;string&gt;starnest.ddns&lt;/string&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt; &lt;string&gt;/bin/sh&lt;/string&gt; &lt;string&gt;/var/root/script_service/ddns/ddns.sh&lt;/string&gt; &lt;/array&gt; &lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;StartInterval&lt;/key&gt; &lt;integer&gt;180&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; 上面的 StartInterval 中的时间不是很确定，使用date命令测试时 interger 设置为 1 会没 10 秒执行一次任务，但是 ddns 脚本中设置 180 应该是 30 分钟执行一次，但根据日志结果来看是 1 小时 3~4 次，时间不是太固定。但对 ddns 来说每小时 3~4 的频度足够了。 启动定时任务launchctl load /Library/LaunchDaemons/starnest.ddns.plist 确认是否启动成功 launchctl list | grep starnest - 0 starnest.ddns 第一列的 PID，第二列是 status，当 status 显示为 0 时表示任务正常进行。我刚开始 status 显示 127，这个可以用以下命令来初步确认问题。 launchctl error 127 127: The specified service did not ship with the operating system 最后发现是plist文件中脚本路径发生的错误。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"iPhone","slug":"iPhone","permalink":"http://shenguosai.github.io/tags/iPhone/"},{"name":"DDNS","slug":"DDNS","permalink":"http://shenguosai.github.io/tags/DDNS/"}]},{"title":"2024孩子电话手表更换方案","slug":"2024孩子电话手表更换方案","date":"2024-04-01T11:47:16.000Z","updated":"2024-08-27T15:24:58.549Z","comments":true,"path":"2024/04/01/2024孩子电话手表更换方案/","link":"","permalink":"http://shenguosai.github.io/2024/04/01/2024%E5%AD%A9%E5%AD%90%E7%94%B5%E8%AF%9D%E6%89%8B%E8%A1%A8%E6%9B%B4%E6%8D%A2%E6%96%B9%E6%A1%88/","excerpt":"","text":"配置项 Y3 Y3C Y3 pro 内存 1G 1G 1G 容量 8G 16G 8G 摄像头像素 200w 200w 500w 儿童手表版微信、支付 √ √ √ 防水等级 2ATM IPX8 2ATM 背单词 √ √ √ NFC公交和乘车码对儿童手表来说目前是个伪需求，因为无法使用学生卡。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"儿童手表","slug":"儿童手表","permalink":"http://shenguosai.github.io/tags/%E5%84%BF%E7%AB%A5%E6%89%8B%E8%A1%A8/"}]},{"title":"Nginx反向代理实现访问路由器控制界面","slug":"Nginx反向代理实现访问路由器控制界面","date":"2024-03-28T01:54:56.000Z","updated":"2024-09-24T02:15:17.957Z","comments":true,"path":"2024/03/28/Nginx反向代理实现访问路由器控制界面/","link":"","permalink":"http://shenguosai.github.io/2024/03/28/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E8%AE%BF%E9%97%AE%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8E%A7%E5%88%B6%E7%95%8C%E9%9D%A2/","excerpt":"前两天把家里空闲的手机翻出来想着干点什么，两个小米 Note，一个 iPhone4，两个 iPhone6，一个三星 Galaxy A9 Pro和一个三星 Galaxy A32。 iPhone4 被我手残升级 iOS 搞成了砖，现在只能看白苹果了。。。 两个小米 Note 折腾了半天也没法解锁 BootLoader, 先放置了 一台 iPhone6 安装了“掌上看家” APP 在家里做个监控用来看孩子有没有玩电子设备 另一台 iPhone6 越狱出来做了一些小处理，本文重点来讲这个 三星 Galaxy A9 Pro 已经解锁 BootLoader 成功还没想好干什么 三星 Galaxy A32 还没折腾","text":"前两天把家里空闲的手机翻出来想着干点什么，两个小米 Note，一个 iPhone4，两个 iPhone6，一个三星 Galaxy A9 Pro和一个三星 Galaxy A32。 iPhone4 被我手残升级 iOS 搞成了砖，现在只能看白苹果了。。。 两个小米 Note 折腾了半天也没法解锁 BootLoader, 先放置了 一台 iPhone6 安装了“掌上看家” APP 在家里做个监控用来看孩子有没有玩电子设备 另一台 iPhone6 越狱出来做了一些小处理，本文重点来讲这个 三星 Galaxy A9 Pro 已经解锁 BootLoader 成功还没想好干什么 三星 Galaxy A32 还没折腾 废话少说，今天来聊聊用越狱的 iPhone6 安装 nginx 实现反向代理访问华为路由器 AX3 Pro 的管理界面。 iPhone6 越狱这个没有记录，等后期越狱另外一台 iPhone6 的时候再详细描述。 配置一下越狱的 iPhone6这个跟本篇设置关联不大，主要是配置了 bash 和 Vim。越狱后的 iPhone 系统内核是 Drawin，使用 Linux 命令uname -a就可以查看: [root@iPhone ~]#uname -a Darwin iPhone 18.7.0 Darwin Kernel Version 18.7.0: Fri Aug 19 23:28:26 PDT 2022; root:xnu-4903.272.5~1/RELEASE_ARM64_T7000 iPhone7,1 arm Darwin bash设置iPhone 越狱后默认的 shell 是 zsh，由于一直习惯于使用 bash，就换成了 bash。 使用命令cat /etc/shells查看系统支持的 shell:[root@iPhone ~]#cat /etc/shells # /etc/shells: valid login shells /bin/sh /usr/bin/sh /bin/zsh /usr/bin/zsh /bin/bash /usr/bin/bash /usr/bin/dash 将默认 shell 更改为 bash:chsh -s /bin/bash 查看当前用户 shell[root@iPhone ~]#echo $SHELL /bin/bash 更改命令行提示符 PS1 及 常用命令```conf export PATH=&#39;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11:/usr/games&#39; # export PS1=&#39;\\h:\\w \\u\\$ &#39; export PS1=&#39;[\\u@\\h \\W]\\$&#39; umask 022 export EDITOR=/usr/bin/editor export PAGER=/usr/bin/pager for i in /etc/profile.d/*.sh ; do if [ -r &quot;$i&quot; ]; then . $i fi done export LS_COLORS=&#39;no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;35:*.exe=01;35:*.com=01;35:*.btm=01;35:*.bat=01;35:*.sh=01;35:*.csh=01;35:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:&#39; alias la=&#39;ls -al&#39; alias ll=&#39;ls -l&#39; ``` 将第3行注释掉；添加第3行；添加15、16、17行；其它都是默认的。注:不知道原因，但是在这个系统里只能修改这个文件(/etc/profile)来配置 bash，在用户目录下使用.bashrc修改没有效果，应该是默认不 load .bashrc文件。 配置 VIM这个就在用户目录下使用touch .vimrc和mkdir .vim创建相关的配置文件和目录即可。.vimrc 配置如下: set nu set backspace=indent,eol,start &quot;set cursorline &quot;hi cursorline ctermbg=lightgray guibg=lightblue set nobackup set noswapfile set nowritebackup set noundofile set nocompatible set wrap set laststatus=2 set statusline=%f%m%r%h%w\\ [FORMAT=%&#123;&amp;ff&#125;]\\ [TYPE=%Y]\\ [POS=%l,%v][%p%%]\\ [LEN=%L] set ruler set mouse=a set showcmd set cmdheight=2 set history=1000 set completeopt=preview,menu set clipboard+=unnamed set autoindent set tabstop=2 set softtabstop=2 set shiftwidth=2 set noexpandtab syntax on filetype on filetype plugin on if version &gt;= 603 set helplang=cn set encoding=utf-8 endif inoremap ( ()&lt;ESC&gt;i inoremap [ []&lt;ESC&gt;i inoremap &#123; &#123;&#125;&lt;ESC&gt;i inoremap &lt; &lt;&gt;&lt;ESC&gt;i inoremap &#39; &#39;&#39;&lt;ESC&gt;i inoremap &quot; &quot;&quot;&lt;ESC&gt;i 在越狱的 iPhone6 上安装 OpenSSH这个属于常规操作，在越狱的市场里下载就行。(略) 在越狱的 iPhone6 上安装 Nginx使用命令: apt-get install nginx 就会下载软件和相应的依赖包，当时没有记录，应该是下载了nginx，nginx-common，nginx-core等文件。 配置 Nginx 使其访问当前设备时指向路由器管理界面修改 Nginx 配置文件安装完成后在/etc/nginx目录中会有nginx.conf和nginx.conf.defaut两个文件，其中nginx.conf是 Nginx 实际运行时使用的配置文件，nginx.conf.default应该是个模板示例。 cp nginx.conf.default nginx.conf使用模板覆盖原来的nginx.conf； 在 http 模块的 server 里加入语句: proxy_pass http://192.168.3.1/; #即反向代理要访问的地址。示例如下:/etc/nginx/nginx.conf 文件设置如下: server &#123; listen 80; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; proxy_pass http://192.168.3.1/; root html; index index.html index.htm; &#125; 其实其它都是 nginx.conf.default 中的内容，只要在location里面加入proxy_pass http://192.168.3.1/;这一句就可以，这样当访问此台设备的80端口时就会直接指向到路由器管理台的192.168.3.1了。 Nginx 常用命令因为没有找到 Nginx 的 plist 文件来启停服务，所以需要使用软件命令来进行操作。首先可以使用nginx -h来查询命令使用方法。常用命令: nginx # 启动 Nginx nginx -s reopen # 重新启动 Nginx nginx -s reload # 在不关闭 Nginx 的情况下重新加载 /etc/nginx/nginx.conf 配置文件 nginx -s stop # 关闭 Nginx nginx -t # 测试配置文件 /etc/nginx/nginx.conf nginx -T # 测试 配置文件 /etc/nginx/nginx.conf 并将其输出到屏幕 nginx -v # 输出版本信息 外网访问路由器管理台将设置了 nginx 的设备端口80映射到外网即可，比如当前设备的局域网 ip 为192.168.3.111，映射外网端口为11111。这样在外网访问时只要输入网址: http://domain或者IP:1111 就可以实现外网直接访问路由器管理后台了。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"http://shenguosai.github.io/tags/Nginx/"},{"name":"iPhone","slug":"iPhone","permalink":"http://shenguosai.github.io/tags/iPhone/"}]},{"title":"<转>【Darwin】越狱后玩耍IPhone系统","slug":"转-【Darwin】越狱后玩耍IPhone系统","date":"2024-03-27T09:21:46.000Z","updated":"2024-08-27T15:47:38.719Z","comments":true,"path":"2024/03/27/转-【Darwin】越狱后玩耍IPhone系统/","link":"","permalink":"http://shenguosai.github.io/2024/03/27/%E8%BD%AC-%E3%80%90Darwin%E3%80%91%E8%B6%8A%E7%8B%B1%E5%90%8E%E7%8E%A9%E8%80%8DIPhone%E7%B3%BB%E7%BB%9F/","excerpt":"无意中找到一个介绍越狱后iOS的说明， 受益匪浅， 转一下:【Darwin】 越狱后玩耍IPhone系统","text":"无意中找到一个介绍越狱后iOS的说明， 受益匪浅， 转一下:【Darwin】 越狱后玩耍IPhone系统大家都知道 iOS 是自 Mac OS 修改而来的。而 Mac OS 和 iOS 的共同核心是 Darwin, 其基于 FreeBSD 发展而来, 整体而言也是个类Unix系统。之前把自己的手机越狱之后正好开始接触 Linux 这类 OS， 然后觉得很有意思就去网上找了些资料来自己玩自己的手机， 也做了一些笔记。说来惭愧， 当时手机系统版本还是 8.3。而后来也因为没什么时间加上这部分笔记维护在另外一个笔记本上， 导致一直没有时间记录下来【捂脸】。本来想等 10.3 的越狱出来， 把Pad越狱之后再来详细研究的， 无奈 10.3 越狱也迟迟不出， 不得已， 只好现在来记录一下了。。没有什么干货的技术知识， 全部都是一点个人的爱折腾手机的小兴趣， 系统版本又老。。嗯就这样吧。 第一步IPhone 越狱后， 第一标志当然就是在桌面上看到了 Cydia。作为折腾手机的第一步， 当然是要让手机有本地命令行来装逼了。如果没记错的话， 几年前越狱的时候还是会附带一个命令行工具的， 现在好像必须得自己下载安装了。进入 Cydia， 搜索安装 MTerminal 这个命令行工具。其他也有一些命令行工具比如 mobileTerminal 什么的， 不过那些好像都已经过时了， 新系统们都打不开。打开 MTerminal 默认用户是 mobile， 退出时自动也会退出这个用户， 不用担心用户进程会留存在机器上。还有一点比较有意思的是 MTerminal 的非键盘区域， 点击靠上下左右的边部区域就像是键盘上按上下左右方向键， 所以可以进行退格和重复上条命令等操作。至于 Tab 键自动补全命令什么的操作至今还未发现。。有了命令行， 但是在手机上敲命令太蛋疼了， 我们最好能通过电脑连入手机， 这样方便多了。第一个想到的当然是通过 SSH。在 Cydia 安装 openSSH， 之后就可以通过 22 端口远程连接手机了。一般可以直接用 root 用户连入手机， 进入之后的第一件事千万要记得改root账户的密码， 所有越狱后的IPhone手机root用户的默认密码都是一样的！！！都是 alpine ！不马上改掉， 那随便什么人都可以直接连入你的 IPhone， 你就没有任何安全可言了。改完密码之后， 就可以对字符界面的 iOS 做一些改造让它看起来更像是一台服务器了。 适当改造首先可以在/etc/profile中加上对环境变量 PS1 的定义， 这个变量决定的是字符提示行的样式。这个文件是什么作用在 Linux 笔记中说过了， 就不说了， 样式可以选择[\\u@\\h \\W]\\$这款。在文件中加上export PS1=&#39;[\\u@\\h \\W]\\$&#39;即可。默认的ls命令出来的文件没有任何颜色特效， 看起来很累。可以加上LS_COLORS这个环境变量， 至于具体的值怎么写可以参见已经配置好的 CentOS 系统等等， 我这里给出一个参考: export LS_COLORS=&#39;no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;35:*.exe=01;35:*.com=01;35:*.btm=01;35:*.bat=01;35:*.sh=01;35:*.csh=01;35:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:&#39; 在设置好了配置文件之后source之以生效， 至于ls的颜色， 如果还是没有效果记得看一下ls有没有默认alias ls=&#39;ls --color&#39;， 必须带上color参数ls才会显色。忘记了系统是否自带了 vim 程序， 应该是没有， 那就需要安装。vim 的样式文件 vimrc 不放在/etc/vimrc， 而是放到/usr/share/vim/目录下面去。 常用工具安装在 CentOS 上习惯了用yum安装包， 但是这里没有yum， 只有apt-get。用法是类似的: apt-get install &lt;PackageName&gt; # 安装某个包 apt-get update # 更新 apt 源（是不是有点眼熟， 其实估计 Cydi 里面的更新源就是运行了下这个命令） apt-get remove &lt;PackageName&gt; # 卸载某个包 在update过后， apt会把所有更新到的包信息放到缓存里面， 如果想要从最新的包信息中搜寻某个特定的包可以执行: apt-cache search &lt;PackageName&gt; 这条命令用的还是模糊搜索， 可以帮助你寻找想要装的包名到底叫什么。由于一般人记的肯定是命令名而不是包名， 所以下面给出的是一些命令和它们所在包的名字。如果想用这些命令就apt-get install安装这些包吧: Tools Name Package Name ifconfig, netstat, route network-cmds curl curl top top wget wget finger,last,ps adv-cmds vim vim locate mlocate lrz,lsz (命令名和 linux上 略有出入， linux 上是直接 rz， sz， 这里多个 l ) org.thebigboss.lrzsz gcc iphon-gcc less less 这里稍微提醒一句， 如果通过SSH经电脑连入手机操作， 虽然是在电脑上打命令， 不过网络走的还是手机的路， 所以要注意手机别开 4G 跑流量了。。。另外装了一个新包之后不知道有什么用或者怎么用时可以到手机端 Cydia—已安装—&lt;包名&gt; 里面， 划到最下面的文件系统内容中， 看这个包具体安装了的哪些文件， 有什么文件被安装到了/usr/bin这种目录下， 那个文件自然就是一个命令了。 一些酷酷的事情上面装的一些东西都是管理机器必须的， 实用的工具。还有一些比较花哨， 适合用于装逼的工具。比如下面: 远程打开程序bigboss源上有个叫做 open(com.conadkramer.open) 的插件， 装上之后可以在 SSH 里输入open &lt;APPID&gt;命令来远程让手机打开一个 APP。APPID 是每个 APP 目录下的 plist.xml 文件中记录的CFBundleIdent.fier的值， 比如 safari 的话就是 com.Apple.mobilesafari ， 系统自带的音乐的话就是 com.Apple.Music。 netstatnetstat -ntlp在这个系统里不管用， 要用只能用netstat -an。而-p在这里的 netstat 是 protocol 的意思。所以你可以netstat -ntlp TCP来显示所有 TCP 连接的情况。 安装pythonCydia 中搜索一下 Python， 似乎可以找到一个 python2.5.1 版本的包， 虽然老了点， 但是勉强凑合可以用。至于用源码进行安装我没有试过， 估计也可以吧。装上 python 之后就可以更加剧烈地折腾手机了。比方说为了安全性考虑， 我的手机平时都是关闭 22 端口的， 想要开启的时候再开。于是就写了一个 python 脚本， 做成命令来手动开关 22 端口的访问。 启停服务其实上面说的那个 python 脚本就是调用了启停服务的命令。在/System/Library/LaunchDaemons和/System/Library/LaunchAgents下面有很多跟服务相关的 plist 文件。LaunchDaemons指系统启动时自动启动的程序， 而LaunchAgents中存放的是针对某个用户登录时自动启动的程序的配置。想要启动或停止一个服务， 可以这么操作: launchctl load/unload -w &lt;plist的路径&gt; 因为指定了 plist 文件的路径， 所以 plist 文件未必一定要在那两个指定目录下， 完全可以拷贝出来然后自己手动指定它的路径以启动。 查看服务状态launchctl list | grep ssh # 查看ssh的服务开启状态 媒体和 APP 文件的位置(系统版本比较老， 估计新版本系统已经有变化了)自带播放器的音乐和视频文件都放在/private/var/mobile/Media/ITunes_Control里面， 但是文件名是被点窜过的， 要用一定的手段来定位寻找特定的文件。（比如看大小， 看修改日期， MP3 文件的话还可以解析其标签来判断是什么歌等等）用户的 APP 的文件基本上都放在/private/var/mobile/Container/Data/Application/&lt;一个被点窜过的目录名&gt;。因为目录名是一串没有规律的， 很难定位哪个目录对应哪个 APP。办法还是有的， 比如可以通过脚本把每个目录的大小算出来， 然后比较一下手机里的信息。还有定位特定的文件等等， 方法就靠灵活自己想了 。 如何通过 usb 直接连系统后台上面连接进 iOS 系统都是通过了 WIFI 这个媒介。虽然方便一些， 但是存在速度稍慢， 安全性有疑问等问题。其实我们可以通过一些手段通过 USB 来模拟 SSH 连接， 这样通过一条数据线， 即使没有WIFI也可以做到连接系统了。做法是首先确保系统中有合适的驱动。Mac 之类的机器就不用说了肯定是有的， 像没有装 itunes 的 windows 机器的话可以下载安装AppleApplicationSupport和AppleMobileDeviceSupport这两个驱动程序， 只要有这两个就行， 也不用安装整个庞大的 itunes了。然后， 我们下载一个名叫usbmxud的工具。这个百度一下就能下载到了， 然后在命令行运行一下这个工具中的一个脚本: python &lt;usbmuxd目录&gt;/python-client/tcprelay.py -t 22:10022 然后这个程序就会在 PC 端开启本地的 10022 端口， 并把这个端口映射到 iOS 端的 22 端口。只要 iOS 开了 22 端口， 就可以在本地通过工具 ssh 连接 10022 端口就可以了。同理， 不仅限于 22 端口， 其他任何 iOS 上的端口都可以进行映射。非常好用。 iOS上一些重要文件的位置等这位大神的博客还挺有参考价值的。http://www.cnblogs.com/ygm900/category/538781.html 短信数据库的存放位置在ios的: //private/var/mobile/Library/SMS/sms.db联系人数据库存放的位置在ios的: //private/var/mobile/Library/AddressBook/AddressBook.sqlitedb联系人的头像估计存放在这里: //private/var/mobile/Library/AddressBook/AddressBookImages.sqlitedb通话记录数据库的存放路径是: //private/var/wireless/Library/CallHistory/call_history.db备忘录数据库的存放路径是: //private/var/mobile/Library/Notes/notes.sqlitesafira 浏览器的收藏夹数据库存放路径是: //private/var/mobile/Library/Safari/Bookmarks.db日历数据库的存放路径是: //private/var/mobile/Library/Calendar/Calendar.sqlitedb","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"iPhone","slug":"iPhone","permalink":"http://shenguosai.github.io/tags/iPhone/"}]},{"title":"删除docker容器和镜像","slug":"删除docker容器和镜像","date":"2024-03-26T14:10:34.000Z","updated":"2024-08-27T15:41:48.792Z","comments":true,"path":"2024/03/26/删除docker容器和镜像/","link":"","permalink":"http://shenguosai.github.io/2024/03/26/%E5%88%A0%E9%99%A4docker%E5%AE%B9%E5%99%A8%E5%92%8C%E9%95%9C%E5%83%8F/","excerpt":"什么是 Docker?Docker是基于Go语言实现的在 2013 年发布的云开源项目，它利用了围绕容器这个现有的计算概念，特别是在Linux世界中，这些原始概念被称为cgroups和命名空间。Docker的技术之所以独特是因为它专注于开发人员和系统操作员的需求，以将应用程序依赖项与基础架构分开。Docker的主要目标是 “Build，Ship and Run Any App,Anywhere”，也就是通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的 APP (可以是一个WEB应用或数据库应用等等) 及其运行环境能够做到“一次封装，到处运行”。一句话概括，Docker的出现解决了运行环境和配置环境不一致的情况，从而更方便的做持续集成并有助于应用的整体发布。","text":"什么是 Docker?Docker是基于Go语言实现的在 2013 年发布的云开源项目，它利用了围绕容器这个现有的计算概念，特别是在Linux世界中，这些原始概念被称为cgroups和命名空间。Docker的技术之所以独特是因为它专注于开发人员和系统操作员的需求，以将应用程序依赖项与基础架构分开。Docker的主要目标是 “Build，Ship and Run Any App,Anywhere”，也就是通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的 APP (可以是一个WEB应用或数据库应用等等) 及其运行环境能够做到“一次封装，到处运行”。一句话概括，Docker的出现解决了运行环境和配置环境不一致的情况，从而更方便的做持续集成并有助于应用的整体发布。 Docker 三要素: 镜像、容器和仓库镜像在了解镜像这个概念之前，我们需要先大致了解一下联合文件系统:UnionFS，它是Docker镜像的基础，联合文件系统是一种分层，轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层一层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下，镜像可以通过分层来进行集成，我们可以基于一个基础的镜像，然后制作出各种各样满足我们需求的应用镜像。同时，对于一个精简的OS，rootfs可以很小，有常见的命令就行，同时，底层又是直接使用的操作系统的内核，所以往往Docker中一个镜像的体积相对来说可以很小，比如一个完整版的centos可能要几个 G，但是Docker中的centos大概只有 300M.对于docker镜像，官方的定义如下: An image is a read-only template with instructions for creating a Docker container. Often, an image is based on another image, with some additional customization. For example, you may build an image which is based on the ubuntu image, but installs the Apache web server and your application, as well as the configuration details needed to make your application run.‘映像是一个只读模板，带有创建Docker容器的指令。通常，一个映像是基于另一个映像的，还需要进行一些额外的定制。例如，您可以构建一个基于ubuntu映像的映像，但是安装Apache web服务器和您的应用程序，以及使您的应用程序运行所需的配置细节。 PS: 一个镜像可以创建多个容器。 容器容器是用镜像创建的运行实例。每个容器都可以被启动，开始，停止，删除，同时容器之间相互隔离，保证应用运行期间的安全。我们可以把容器理解为一个精简版的linux操作系统，包括root用户权限，进程空间，用户空间和网络空间等等这些，然后加上再它之上运行的应用程序。比如我们现在基于mysql镜像创建了一个容器，那么，这个容器其实并不是只有一个mysql程序，而是mysql同样也是安装运行在我们容器内的linux环境中的。 容器和镜像的关系再说这个问题之前，我们不妨先来看一下下面这段java代码: Person p = new Person(); Person p1 = new Person(); Person p2 = new Person(); 镜像在这里就是我们的Person，容器就是一个个Person类的实例。一个Person可以创建多个实例，一个镜像也可以创建多个容器。 仓库仓库相对来说就比较容易理解了，仓库(Repository)是集中存放镜像文件的场所。仓库分为公开仓库和私有仓库，目前的话，全世界最大的仓库是Docker官方的 Docker Hub由于一些不可抗拒的因素，导致我们如果从 Docker Hub 上下载公开的镜像是非常蛋疼的，这点大家可以参考你用百度网盘官方下载时的感觉。所以，国内我们一般使用阿里云或者网易云的镜像仓库。镜像 容器 仓库 他们三者之间的关系图如下: Docker 容器的创建、启动docker 容器的启动有三种方式: 交互方式: 基于镜像新建容器并启动例如我们可以启动一个容器，打印出当前的日历表: docker run my/python:v1 cal ## my/python:v1 为镜像名和标签 我们还可以通过制定参数，启动一个 bash 交互终端: docker run -it my/python:v1 /bin/bash 参数-t让 Docker 分配一个伪终端并绑定在容器的标准输入上，-i让容器的标准输入保持打开。 使用docker run命令来启动容器，docker 在后台运行的标准操作包括1.检查本地是否存在指定的镜像，不存在则从公有仓库下载;2.使用镜像创建并启动容器;3.分配一个文件系统，并在只读的镜像层外面挂载一层可读可写层;4.从宿主主机配置的网桥接口中桥接一个虚拟接口道容器中去;5.从地址池分配一个ip地址给容器;6.执行用户指定的应用程序;7.执行完毕之后容器被终止。my/sinatra:v2基于training/sinatra镜像进行修改后的镜像，training/sinatra为公有仓库上的镜像。 短暂方式: 直接将一个已经终止的容器启动运行起来可以使用docker start命令，直接将一个已经终止的容器启动运行起来。 [root@rocketmq-nameserver4 ~]# docker run my/python:v1 /bin/echo hello test hello test 命令执行完，控制台会打印hello test，container 就终止了，不过并没有消失，可以用docker ps -n 5看一下最新前 5 个的 container，第一个就是刚刚执行过的 container，可以再次执行一遍：docker start container_id不过这次控制台看不到hello test了，只能看到 ID，用logs命令才能看得到：docker logs container_id。可以看到两个hello test了，因为这个 container 运行了两次。 Daemen 方式(守护态运行)即让软件作为长时间服务运行，这就是 SAAS 啊！例如我们启动 centos 后台容器，每隔一秒打印当天的日历。 $ docker run -d centos /bin/sh -c &quot;while true;do echo hello docker;sleep 1;done&quot; 启动之后，我们使用docker ps -n 5查看容器的信息 要查看启动的centos容器中的输出，可以使用如下方式： $ docker logs $CONTAINER_ID ##在container外面查看它的输出 $ docker attach $CONTAINER_ID ##连接上容器实时查看 Docker 容器的终止使用以下命令来终止一个运行中的容器。并且可以使用docker ps -a来看终止状态的容器。 docker stop $CONTAINER_ID 终止状态的容器，可以使用docker start来重新启动。使用docker restart命令来重启一个容器。 删除 Docker 容器如果容器还在运行，将无法删除镜像，所以从删除容器开始。 查看 Docker 所有容器状态docker ps -a 停止容器运行docker stop $CONTAINER_ID 删除容器docker rm $CONTAINER_ID 删除 Docker 镜像 查看 docker 要删除的镜像docker images 由于刚才已终止此镜像的容器，所以直接删除docker rmi $IMAGE_ID","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"http://shenguosai.github.io/tags/Docker/"}]},{"title":"Windows命令行在cmd中能执行但是在PowerShell中报错","slug":"Windows命令行在cmd中能执行但是在PowerShell中报错","date":"2024-03-26T00:50:58.000Z","updated":"2024-08-27T16:00:28.346Z","comments":true,"path":"2024/03/26/Windows命令行在cmd中能执行但是在PowerShell中报错/","link":"","permalink":"http://shenguosai.github.io/2024/03/26/Windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9C%A8cmd%E4%B8%AD%E8%83%BD%E6%89%A7%E8%A1%8C%E4%BD%86%E6%98%AF%E5%9C%A8PowerShell%E4%B8%AD%E6%8A%A5%E9%94%99/","excerpt":"使用ssh远程windows端的时候默认使用cmd，而用powershell可以使用很多linux的命令，像ls，ps，cd什么的(实际上只是映射了一下)。使用管理员权限在PowerShell执行以下命令，使SSH连接Windows时默认使用Powershell。 New-ItemProperty -Path &quot;HKLM:\\SOFTWARE\\OpenSSH&quot; -Name DefaultShell -Value &quot;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot; -PropertyType String -Force","text":"使用ssh远程windows端的时候默认使用cmd，而用powershell可以使用很多linux的命令，像ls，ps，cd什么的(实际上只是映射了一下)。使用管理员权限在PowerShell执行以下命令，使SSH连接Windows时默认使用Powershell。 New-ItemProperty -Path &quot;HKLM:\\SOFTWARE\\OpenSSH&quot; -Name DefaultShell -Value &quot;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot; -PropertyType String -Force 但是今天远程Windows下开启http-server服务时却遇到一个奇怪的问题。 这个问题也可以描述为: powershell中无法执行命令/脚本 尝试了一下发现一部分命令是可以执行的，就考虑是不是权限相关的问题，通过多方查证，总结了以下解决办法: 运行命令行查看系统权限:Get-ExecutionPolicy -List 通过这个命令发现CurrentUser的权限是Undefined，那么就是权限的问题，尝试以下命令通过增加权限解决Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser 修改后再次执行Get-ExecutionPolicy -List查看权限再次开启http-server:成功！","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"CentOS 7 安装docker和docker-compose","slug":"CentOS-7-安装docker和docker-compose","date":"2024-03-25T07:06:45.000Z","updated":"2024-08-27T15:49:11.289Z","comments":true,"path":"2024/03/25/CentOS-7-安装docker和docker-compose/","link":"","permalink":"http://shenguosai.github.io/2024/03/25/CentOS-7-%E5%AE%89%E8%A3%85docker%E5%92%8Cdocker-compose/","excerpt":"安装 Docker更新 yum yum update 安装配置时的依赖包 yum install -y yum-utils device-mapper-persistent-data lvm2","text":"安装 Docker更新 yum yum update 安装配置时的依赖包 yum install -y yum-utils device-mapper-persistent-data lvm2 配置阿里云的yum源 yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 查看仓库中所有的docker版本 yum list docker-ce --showduplicates | sort -r 默认使用yum install docker-ce安装最新版的docker，当然也可以指定安装特定的版本 yum install docker-ce-24.0* -y 验证是否安装成功 docker --version 或者 docker -v 安装 Docker-compose国外源安装: curl -SL https://github.com/docker/compose/releases/download/v2.26.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose 国内源安装: curl -SL https://get.daocloud.io/docker/compose/releases/download/v2.26.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose 赋予可执行权限: chmod +x /usr/local/bin/docker-compose 验证是否安装成功: docker compose version","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://shenguosai.github.io/tags/docker/"}]},{"title":"使用端口映射实现局域网内打印机远程打印","slug":"使用端口映射实现局域网内打印机远程打印","date":"2024-03-12T07:42:56.000Z","updated":"2024-08-27T15:42:15.640Z","comments":true,"path":"2024/03/12/使用端口映射实现局域网内打印机远程打印/","link":"","permalink":"http://shenguosai.github.io/2024/03/12/%E4%BD%BF%E7%94%A8%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%AE%9E%E7%8E%B0%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E6%89%93%E5%8D%B0%E6%9C%BA%E8%BF%9C%E7%A8%8B%E6%89%93%E5%8D%B0/","excerpt":"打印机是现在办公设备必不可少的工具，我们常常需要使用打印机复印或打印各种文件资料，尤其对一些正在加班且不能在家陪伴孩子写作业的父母来说，学会远程打印的方法十分必要。打印机种类: 激光打印机打印机型号: DCP-B7520DW目前这款打印机不支持远程打印，所以需要将打印端口映射到外网才能实现远程打印。局域网内电脑系统: Windows 10远程打印电脑系统: Windows 11","text":"打印机是现在办公设备必不可少的工具，我们常常需要使用打印机复印或打印各种文件资料，尤其对一些正在加班且不能在家陪伴孩子写作业的父母来说，学会远程打印的方法十分必要。打印机种类: 激光打印机打印机型号: DCP-B7520DW目前这款打印机不支持远程打印，所以需要将打印端口映射到外网才能实现远程打印。局域网内电脑系统: Windows 10远程打印电脑系统: Windows 11电脑进行远程打印可以用一下两种方法: 使用zerotier将主路由加入到虚拟局域网中，这样家中所有设备都可以通过虚拟局域网进行访问，此种方式如能将手机也加入到zerotier的虚拟局域网中亦可以实现手机端的远程打印。 将打印机数据传输端口通过路由器进行端口映射来实现，此种方法目前还未能实现手机端的远程打印。下面详细讲述第2中方法的实现步骤:一、设置映射首先保证局域网内能正常打印，进入控制面板——设备和打印机；找到对应的打印机，右键打印机属性；选择端口，找到对应的打印机，点击配置端口；查看打印机的IP地址和端口号；这个地方有一个问题，我的打印机原来默认是LPR协议，端口应该是515；现在我将它改成的Raw协议，Raw协议默认使用9100，9101，9102端口，这里选择默认的9100端口。然后将你所使用的端口，这里是9100通过路由器的设置映射到外网，我家里使用的是华为的AX3 Pro路由器，设置界面如下，外部端口填写你想设置的端口即可(1~65535):点击保存即设置成功。二、远程打印电脑的设置点击开始——设置——选择蓝牙和其他设备——点击打印机和扫描仪点击打印机和扫描仪——点击添加设备点击手动添加——选择通过手动设置添加本地打印机或网络打印机，下一步；选择创建新端口，端口类型选择Standard TCP/IP Port，下一步；主机名或IP地址和端口名称，填写自己的公网IP或域名地址。(由于现在供应商提供的公网IP是会变的，所以建议使用DDNS在此处填写自己的DDNS域名。)设置类型选择自定义，点击设置，原始设置里的端口号填入上面映射到外网的外部端口号，确定然后下一步；然后就是安装驱动程序，点击从磁盘安装，制造商文件复制来源选择对应打印机驱动的安装目录里，这里要求选择.inf文件。我这边驱动目录下的路径是D:\\51_Installer\\DCP-B7520DW\\Y17C_C1_ULWL_PP-inst-H1\\xmlpaper\\BRXM17A.INF根据我的打印机型号，选择Brother DCP-B7520DW XML Paper1。选择替换当前的驱动程序，下一步，给打印机自定义一个名字，下一步；选择不共享这台打印机，下一步；点击完成。也可以打印测试页看是否成功。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"远程打印","slug":"远程打印","permalink":"http://shenguosai.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%89%93%E5%8D%B0/"}]},{"title":"ZeroTier Documention","slug":"ZeroTier-Documention","date":"2024-03-06T02:09:35.000Z","updated":"2024-08-27T16:02:48.955Z","comments":true,"path":"2024/03/06/ZeroTier-Documention/","link":"","permalink":"http://shenguosai.github.io/2024/03/06/ZeroTier-Documention/","excerpt":"ZeroTier Documentation","text":"ZeroTier Documentation Getting Started with ZeroTierZeroTier securely connects all your devices and services with each other, anywhere. What is ZeroTier?ZeroTier is a way to connect devices over your own private network anywhere in the world. You do this by creating a network and then joining two or more devices to that network. You can use ZeroTier to play games, connect to remote business resources or even as a cloud backplane for your enterprise.Create your network. ADVANCEDZeroTier uses a set of globally distributed root servers and network controllers to automatically negotiate P2P connections for your devices and provision your networks. You use Central to manage your networks. Here’s a technical deep dive of the protocol. Ceate a NetworkA ZeroTier network is essentially a secure Local Area Network(LAN) that you can use anywhere in the world. Let’s make one and connect two devices over ZeroTier.We’ll use ping to test the connection. Any two devices that can run ZeroTier will do: laptop, phone, virtual machine, etc…Both devices can be at the same location, on the same physical network. If you move one to a cafe or to your office, it should still just work.The rough outline is: Cerate a ZeroTier network Join the network from two devices ping one device from the other over the ZeroTier networkThis should take about 5 minutes. Results PreviewHere is a summary of the results of this tutorial, if you’re a networking person.If this doesn’t mean anything to you, that’s OK. We’ll get there.Each zerotier network you join creates a network interface on your devices. It’s like adding another Ethernet port to your computer. node1# ip -o a 1: lo inet 127.0.0.1/8 scope host lo\\ valid_lft forever preferred_lft forever 2: eth0 inet 192.168.182.201/24 brd 192.168.182.255 scope global dynamic noprefixroute eth0\\ valid_lft 3277sec preferred_lft 2827sec 9: zt3jn2z57r inet 10.2.0.11/23 brd 10.2.1.255 scope global zt3jn2z57r\\ valid_lft forever preferred_lft forever node2# ip -o a 1: lo inet 127.0.0.1/8 scope host lo\\ valid_lft forever preferred_lft forever 2: eth0 inet 192.168.182.202/24 brd 192.168.182.255 scope global dynamic noprefixroute eth0\\ valid_lft 3277sec preferred_lft 2827sec 9: zt3jn2z57r inet 10.2.0.12/23 brd 10.2.1.255 scope global zt3jn2z57r\\ valid_lft forever preferred_lft forever ```node1# ping -c 3 10.2.0.12PING 10.2.0.2 (10.2.0.12) 56(84) bytes of data.64 bytes from 10.2.0.12: icmp_seq=1 ttl=64 time=5.66 ms64 bytes from 10.2.0.12: icmp_seq=2 ttl=64 time=6.62 ms64 bytes from 10.2.0.12: icmp_seq=3 ttl=64 time=8.50 ms —- 10.2.0.12 ping statistics —-3 packets transmitted, 3 received, 0% packet loss, time 2004ms ``` Create your first ZeroTier networkCreate an account NOTEIt’s free, no credit card is required. Go to my.zerotier.com and create an account.Create a network Make sure you’re on the “Networks” tab of my.zerotier.com Click the Create A Network button.This creates a virtual network with a random ID and a random name. We got “fervent_smathers” and d5e04297a16fa690 here. Click anywhere on the network to go to the details page for this network.See the Network Settings panel:We don’t need to change any settings, but we can change the name of the network to personalize it. Change “fervent_smathers” to “my cool network” or whatever you like. Collapse the Settings panel. Click on the word “Settings” at the top of the panel.You don’t need to change any other settings. See the Network Members panel:It should say “No devices have joined this network”. Leave this brower tab open. We’ll look at it again later. Setup the ZeroTier appDownload and install ZeroTierFor mobile devices, use the app store. Go to zerotier.com/download Run the installerThe ZeroTier client should now running on your devices.Join your first ZeroTier networkWe need to tell the client to “join” the virtual network we just created. Copy the Network ID of the network from my.zerotier.com. This is the long number that looks like: d5e04297a16fa690 Paste the Network ID into the “join” command on your deviceOn macOS and Windows, there is a menubar/tray app. Select “join” from the menu. NOTEEvery running instance of ZeroTier has a unique address. It’s the 10 digit “Address” in the app, or zerotier-cli info command.ZeroTier addresses are a very secure method of unique identification. Authorize your device on your networkAt this point, your client should say “Access Denied.” A device can’t talk on your network unless you allow it, even if someone discovers the network’s ID. Authorize your device Go to the Members panel that we left open on my.zerotier.com Your node that just “joined” should appear here. The “Address” should match the address in your client. Click the “Auth?” check box for it. Give it a name. Type something like “laptop” or “bob” into the (short name) input. Confirm authorizationBack on your computer, your client should now say “OK” instead of “ACCESS DENIED” and it should show your custom “my cool network” name.Now you have 1 member on your network. A network with 1 member can’t do much. Repeat with another deviceWe need to have 2 devices connected to the same ZeroTier network. Repeat the join and authorize steps with your second device. Test connectivityNow you have two authorized nodes on your network. They should be able to talk over ZeroTier.Your Network Members section should look something like this:The “Managed IPs” will be different on your network.We’re going to test with ping. It’s the only program that we can think of that exists by default on every operating system.This is a command line program, but don’t worry: You can do it. Gotcha: Windows blocks pingWindows by default doesn’t respond to pings. If you try to ping a Windows computer from a different computer, it won’t work. You can enable ping.ZeroTier automatically enables ping on your ZeroTier network adapter now. You can probably skip this step! How to enable ping on Windows Search for Windows Firewall in the Start Menu, and click to open it. Click Advanced Settings on the left. From the left pane of the resulting window, click Inbound Rules. In the right pane, find the rules titled File and Printer Sharing(Echo Request - ICMPv4-In). Right-click each rule and choose Enable Rule.Here is a tutorial by MicrosoftOpen the command line Open the command line on your computerFind the ZeroTier IP Address of your devicesTry the ping commandBack in the Command Line / Terminal that you just opened: type ping -c 5 $ZEROTIER_IP_ADDRESS &lt;enter&gt; into your command line.A successful ping```% ping -c 5 172.22.217.93PING 172.22.217.93 (172.22.217.93): 56 data bytes64 bytes from 172.22.217.93: icmp_seq=0 ttl=64 time=22.362 ms64 bytes from 172.22.217.93: icmp_seq=1 ttl=64 time=10.157 ms64 bytes from 172.22.217.93: icmp_seq=2 ttl=64 time=9.414 ms64 bytes from 172.22.217.93: icmp_seq=3 ttl=64 time=9.019 ms64 bytes from 172.22.217.93: icmp_seq=4 ttl=64 time=9.180 ms —- 172.22.217.93 ping statistics —-5 packets transmitted, 5 packets received, 0.0% packet lossround-trip min/avg/max/stddev = 9.019/12.026/22.362/5.182 ms Try it with both ZeroTier Managed addresses on your network. One of them is the same device you&#39;re on, so you&#39;re pinging yourself. Pinging the other device might be a little more interesting. &gt; **INFO** &gt; If something goes wrong you might see something like: &gt; % ping -c 5 172.22.217.92PING 172.22.217.92 (172.22.217.92): 56 data bytesRequest timeout for icmp_seq 0Request timeout for icmp_seq 1Request timeout for icmp_seq 2Request timeout for icmp_seq 3 —- 172.22.217.92 ping statistics —-5 packets transmitted, 0 packets received, 100.0% packet loss or ping -c 5 192.168.123.234PING 192.168.123.234 (192.168.123.234): 56 data bytes92 bytes from 192.168.82.1: Destination Port UnreachableVr HL TOS Len ID Flg off TTL Pro cks Src Dst 4 5 00 5400 56e7 0 0000 3f 01 d4ad 192.168.82.217 192.168.123.234```There may just be a typo in the IP address. Double check that your device is authorized at my.zerotier.comContact us on the discussion forum and see the troubling section if you get stuck. Conclusionping doesn’t accomplish anything, but it does tell us ZeroTier is working. It’s useful to know about for troubleshooting networks, not just ZeroTier networks.Visit the discussion forum to talk about your use-cases or if you get stuck. Now, use ZeroTier to do something you want to doSome popular uses Windows Remote Desktop ssh(try mosh) Private Gaming LAN Access the web interfaces of your home lab Build your own VPN Route to a remote subnet Route to a Docker network Add dns to your networkJoin multiple networksA node can join many networks at once. Make sure they don’t use the same subnet!You can have a home network, a friends network, and a work network, for example.They don’t all need to be networks that you’ve created. You can join other people’s network.Check out the WhitepaperFor more info on the cryptography and protocol, see the: Design Whitepaper FAQMinimum System RequirementsZeroTier is lightweight, portable, and compatible across all major platforms and architectures. It typically consumes less than 16 MB of memory, only about 1 MB of storage, and even has a low-bandwidth mode for IoT applications. It supports 32-bit ARM(arm32), 64-bit ARM(arm64), 32-bit Intel(x86), 64-bit Intel(x64/amd64), MIPS, and s390x. You can run it on Linux, macOS, Windows, iOS/iPadOS, Android, and FreeBSD. You can run it on Routers, Network Attached Storage, and we have solutions for when you can’t install ZeroTier on a small IoT sensor.Our most recent client can still be run on tiny single-board computers like the original Raspberry Pi made over a decade ago and all versions of ZeroTier are backwards compatible.ZeroTier is currently single-threaded so devices with more than two cores typically will not offer significant performance gains. Future versions of ZeroTier will introduce multithreading. While ZeroTier will operate on very low-power hardware(e.g. a single core 32-Bit ARM running at 600Mhz without AES hardware acceleration(AES-NI)), its performance will suffer.We recommend the following for a happy ZeroTier experience: &gt;=1GHz CPU with at least 2 cores, and AES-NI. ARMIf you’re planning on embedding ZeroTier in a product such as a router, network attached storage or some other IoT application we see that our partners have a better experence with 64-bit ARM as opposed to 32-bit ARM since the core speeds are typically higher and the chips are more likely to have AES-NI. What happens if a ZeroTier, Inc root goes down?Out roots are globally distributed and redundant, if one fails requests will seamlessly fail-over to other roots.If you are running your own roots the effect would be that no new connections can be established between nodes but existing connections would still work. Can ZeroTier, Inc. See my traffic?No. Your traffic is end-to-end encrypted and your device’s private identity keys are never transmitted off of your device. Learn more about our cryptograph protocol. Metrics and MonitoringZeroTier Inc doesn’t have access to your traffic. We don’t current supply a monitoring “dashboard” for your networks and nodes. You can build your own. Prometheus Metrics for the zerotier-one agent are available. Pipe these into the common prometheus/grafana setup. Use your preferred monitoring tool over your ZeroTier networks. Some examples: Prometheus Blackbox exporter, SmokePing, UptimeKuma Traffic Observation and InterceptionWhy does my peers list have nodes I don’t recognize?The nodes are usually our infrastructure that your node needs to talk to in order to function. This includes thing like: Root servers and Controllers. Or possibly nodes from a previously joined network. The command zerotier-cli peers shows a list of nodes that your node knows about. Nodes can not talk to each other unless they are joined and authorized on the same network. Our root servers and controllers do not have access to you nodes’ encryption keys and thus cannot decrypt your traffic. HOW TO IDENTIFY A CONTROLLERA controller is a ZeroTier node. The first 10 digits of a Network ID is the controller’s address. What is error NOT_FOUND?When your ZeroTier Client is showing NOT_FOUND as your network status, this usually means that you’ve entered your network ID incorrectly and are trying to join a non-existent network. Please check your network ID and try again. High Latency &amp; RelayingIf you’re experiencing high latency(or high ping times), it’s possible the connection between two nodes is being Relayed. The command zerotier-cli peers (available in 1.4.x and above) will give you infomation on what if any connections are being relayed. The output will look something like this: [root@host] # zerotier-cli peers &lt;ztaddr&gt; &lt;ver&gt; &lt;role&gt; &lt;lat&gt; &lt;link&gt; &lt;lastTX&gt; &lt;lastRX&gt; &lt;path&gt; 61d294b9cb - PLANET 43 DIRECT 1617 6580 50.7.73.34/9993 62f865ae71 - PLANET 193 DIRECT 1617 1424 2001:49f0:d0db:2::2/9993 6xxxxxxxx1 1.6.4 LEAF 730 DIRECT 8714 8714 35.222.83.92/62191 778cde7190 - PLANET 76 DIRECT 1617 11607 103.195.103.66/9993 992fcf1db7 - PLANET 163 DIRECT 6623 1454 2a02:6ea0:c024::/9993 deadbeef01 1.6.4 LEAF -1 RELAY If you see the peer you’re trying to contact in the RELAY state, that means packets are bouncing through our root servers because a direct connection between peers cannot be established. Side effects of RELAYING are increased latency and possible packet loss. See Router Configuration Tips for how to resolve this.TIPIf you experience high latency or packet jitter for more than four hours please contact your network admin as this may be a sign of a serious network condition. Bandwidth considerationsIn the best case scenario, and in most cases, ZeroTier connects peer-to-peer and none of your network traffic travels through our servers. This means transfers go as fast as your CPU &amp; network can compress, encrypt and send packets, and how fast the remote end can receive them.There are some cases, such as hostile NATs &amp; firewalls in which your encrypted packets do indeed get relayed through our root servers. Relaying through our root adds latency. The packets must travel farther physically than they would for a direct, peer to peer connection.We do not throttle any of these packets, nor can we read the contents of the packets due to encryption. We also, however, cannot guarantee connection reliability when this happens. We do our best effort to get your packets where they need to go, but this is not always possible.Considerations: CPU speed. The current version of zerotier-one is single threaded. Raw CPU speed is important in high bandwidth use cases. Physical Internet connection. ZeroTier can only go as fast as the physical connection it’s running over. Hardware Encryption. ZerTier uses hardware AES acceleration when available. Most current ARM and x86_64 platforms have AES acceleration. Geographic distance. If your remote peer is on a different continent, there will be latency. We can’t improve the speed of light. TIPIf you are experiencing slow network speeds or difficulty making direct connections see Router Configuration Tips or Corporate Firewalls Will transfers go faster on paid accounts?ZeroTier performance is not at all related to your account or subscription level. You may be able to change things on your end to enable faster connections between peers. Error: Cannot connect to ZeroTier serviceThis error means that the ZeroTier background service on your computer is either not running, or your local firewall is preventing the UI or CLI from talking to it. Windows 10Open Task Manager and go to the “Services” tab. Scroll down until you see ZeroTierOneService. The status column should say Running. If it does not, right click on the line and click Start macOSOpen Terminal.app and excute the following commands sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist sudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist LinuxIf your Linux distribution uses systemd, execute sudo service zerotier-one startIf not, execute sudo /etc/init.d/zerotier-one start Still doesn’t work?Your system firewall is likely blocking communication with the ZeroTier service. Look up instructions for how to unblock an application from the firewall for your OS. ZeroTier will need to be accessible via TCP port 9993 fro the UI and CLI to interact with it. Where can I find old version of ZeroTier?See Release What is Earth?Earth or 8056c2e21c000001 was a test network operated by ZeroTier, Inc., it was decommissioned in 2023. How do I Update Zerotier?When you update ZeroTier, your configuration stays. You don’t need to re-join your networks. macOS and WindowsGrab the latest version from the download page and run the installer LinuxUse your OS’s package manager. eg apt on Debian based distributions, or yum or dnf on RedHat based distributions. iOS and AndroidUse the respective app stores. How to clear or reset your ZeroTier addressIf you would like to clear or reset ZeroTier’s address on a device (the 10-digit address node ID) or you have cloned a device and you want to prevent it from using the same address, follow these steps in order: Step 1. Stop the serviceOn WindowsOn Windows this is done with the service manager.(Open the Start Menu and start typing “service”) On macOSOn macOS you can open a terminal and use sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist On LinuxThis is usually sudo systemctl stop zerotier-one or sudo service zerotier-one stop Step 2. Delete the file identity.public and identity.secret from ZeroTier’s working directory On Windows this is usually \\ProgramData\\ZeroTier\\One On Mac this is /Library/Application Support/ZeroTier/One in your terminal, type opne /Library/Application Support/ZeroTier/One to open the folder in Finder On Linux this is usually /var/lib/zerotier-oneStep 3. Restart the serviceOn WindowsStarting via the service manager on WindowsOn Macsudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist On Linuxsudo systemctl start zerotier-one orsudo service zerotier-one start When started without identities ZeroTier will generate new ones. You will need to authorize this new identity on any networks. CAN’T FIND AN ANSWER?Ask our community for help NEXT STEPSClick here to create your network and start adding devices. Troubleshooting CAN’T FIND AN ANSWER?Ask out community for help Ping is not workingFirst, make sure your device is authorized on the network and you’re using the ZeroTier assigned Managed IP address. Aside from that, some OSes block pings in their local firewall by default. Windows FirewallZeroTier versions 1.10.3 and greater automatically enable ping on ZeroTier adapters. macOS FirewallThe firewall is not enabled by default on macOS, and thus pings will not be blocked by default. If your firewall is enabled on macOS, go into System Preferences -&gt; Security &amp; Privacy. Under Firewall Options, ensure “Enable stealth mode”, is disabled. Stealth mode blocks pings. Linux FirewallsThere are far too many Linux distributions out there to list instructions for all of them here. Please refer to your distribution’s documentation for how to unblock ICMP packets.GET STARTEDClick here to create your network and start adding devices. Error: Cannot connect to ZeroTier service(or Node ID “Unknown” in the GUI apps)This error means that the ZeroTier background service on your computer is either not running, or your local firewall is preventing the UI or CLI from talking to it. Windows ServiceOpen Task Manager and go to the “Services” tab. Scroll down until you see “SeroTierOneService”. The status column should say “Running”. If it does not, right click on the line and click “Start”. macOS ServiceOpen Terminal.app and excute the following commands sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist sudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist Linux ServiceIf your Linux distribution uses systemd, excute: sudo service zerotier-one start If not, excute: /etc/init.d/zerotier-one start Still doesn’t work?Your system firewall is likely blocking communication with the ZeroTier service. Look up instructions for how to unblock an application from the firewall for your OS. ZeroTier will need to be accessible via TCP port 9993 for the UI and CLI to interact with it. Emergency Instructions“It was working, but now it’s not and I’m not sure why. And I need to get up and running quick.”First, check with your friendly firewall admin that no configuration in the physical network connection has changed.See the CLI article for help with the CLI.We’re not aware of any bugs that require these steps, or we’d fix them, but sometimes poeple try the below.Listed in order of severity: Restart the servicemacOSOpen Terminal.app, paste the below, and press enter: sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist sudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist It will ask you for your password. It’s the password you use to log in to your mac. Windows Type “Services” into the Start Menu to open the Windows Services Manager Start and Stop the zerotier-one service in the Windows Services Manage.Linuxsystemctl restart zerotier-one Leave all networks and rejoin themUse the UI, orzerotier-cli leave &lt;network-id&gt; and zerotier-cli join &lt;network-id&gt;Stop service, Delete peers.d, Start servicFind peers.d in the zerotier system directoryReset Node IDThe new node ID will have be re-authorized on any networks, and the node’s managed IP address manually re-assigned if needed. Stop the service Move or delete indentity.secret and identity.public files in the zerotier system directory Delete peers.d too Start the service What can I do with ZeroTier?A List of Awesome ZeroTier ThingsThis repository contains a list of all things ZeroTier that can be found on The Internet. Feel free to add yours!Pull Request accepted! Contents ZeroTier Self-Hosting ZeroTier Training ZeroTier Networking ZeroTier Linux ZeroTier Remote Access ZeroTier SD-WAN ZeroTier IoT ZeroTier Drone/UAV ZeroTier Robotics ZeroTier Automotive ZeroTier Blockchain/Crypto ZeroTier Infosec ZeroTier IBM ZeroTier Terraform ZeroTier Kubernetes ZeroTier Docker ZeroTier Bridging ZeroTier MikroTik ZeroTier Ubiquiti ZeroTier Teltonika ZeroTier OpenWrt ZeroTier OPNsense ZeroTier pfSense ZeroTier Synology ZeroTier Raspberry Pi ZeroTier 3-D Printing ZeroTier Homelab ZeroTier Home Automation ZeroTier Video/Camera/CCTV ZeroTier EVE-NG ZeroTier Blender ZeroTier Oculus ZeroTier Gaming ZeroTier Everything Else ZeroTier Reddit ZeroTier YouTube NEXT STEPSClick here to create your network and start adding devices. ZeroTier Self-HostingSelf-Hosting Network Controller Interfaces key-networks / ztncui - GUI for self-hosted ZeroTier. key-networks / ztncui-aio - ZeroTier network controller user interface in a Docker container. thedunston / bash_cli_zt - Command Line interface for self-hosted ZeroTier. dec0dOS / zero-ui - GUI for self-hosted ZeroTier. mdplusplus/zerotier-network-controller-ui - Docker image for self-hosted ZeroTier.Self-Hosting article zero - The Dorknet rises - Self-hosted ZeroTier on OPNsense. From zero to Zerotier in k3s way - Self-hosted ZeroTier on a Raspberry Pi, using k3s.Self-Hosting videos DB Tech - ZeroTier Network Controller in Docker - Self-hosted ZeroTier on Docker.ZeroTier TrainingZeroTier Training courses CBT Nuggets - Securely Connect Local Network Devices to AWS VPC with ZeroTierZeroTier NetworkingNetworking articles Abusing Public DNS for Zerotier Routing Building a Private Backplane Network for your VPSs with ZeroTier | Pete Keen Creating Secure Private Networks With ZeroTier VPN Creating a Site-to-Site VPN with ZeroTier and BGP How To Connect Everything From Everywhere with ZeroTier Multi-Cloud K3s, and also I got (temporarily) kicked off Google Cloud Network Modeling: Segmented Lab access with Containerlab and ZeroTier Routing traffic to ZeroTier’s subnet from all devices on the LANNetworking articles global 比frp更好用的内网穿透工具-ZeroTier One zerotier 基礎使用步驟教學 ZeroTier | Δικτύωση απομακρυσμένων Linux, Windows, macOS, BSD, Android, iOS συσκευώνNetworking videos Considered Normal? - Creating a Local LAN with ZeroTier Duane Dunston - Private ZeroTier Network on the Public Internet Duane Dunston - ZeroTier Hub and Spoke Eric Sloof - ZeroTier - The ethernet switch for planet earth infoTK - Finally ! work from home using VPN free and without Public IP MRP - Local Network everywhere - Zero Tier : Global Area Networking Network Collective - How Does ZeroTier Actually Work? Lawrence Systems - Open Source Mesh VPN Solutions Lawrence Systems - ZeroTier Tutorial: Delivering the Capabilities of VPN, SDN, and SD-WAN via an Open Source System LearnLinuxTV - Networking with ZeroTier: Creating software-defined networks with Ease Sheridan Computers - ZeroTier | Virtual Networking | Remote Desktop | Remote Working | VPNNetworking videos global ADINATA - ZeroTier Solusi Remote Perangkat Aman Dan Nyaman Untuk Pengguna Internet Broadband Dan Dedicated Usando ZeroTier One y NextDNS para acceder a tus datos por VPN NASeros - Incorporación de un ordenador a ZeroTier Servicios Virtuales Administrados SVA - Multi Usuario RDP/VPN ZeroTier — CURSO GRATUITO Software Defined Networks with ZeroTier | Urdu [VPN multisitio con ZeroTier]() Zerotier: la Terra è il tuo ufficio (sicuro e privato)ZeroTier Linux Duoslow / zerotierIndicatorLinux articles Curl and jq to Manage ZeroTier networks Install Zerotier CLI LinuxLinux videos Roel Van de Paar - Install ZeroTier on Ubuntu with armhf hardwareZeroTier Remote AccessRemote Access articles Remote Access Without Port Forwarding Setting up Remote Access During a Crisis Stratospherix FileBrowser - How to access your files from anywhereRemote Access articles global Télétravail, RDP &amp; VPN zerotier 팀뷰어만 되는 환경에서 사용하니 정말 좋군요.Remote Access videos Lawrence Systems - How To Work Remotely Using ZeroTier &amp; Windows Remote Desktop (RDP) Odly Otter - Setting up ZeroTier to securely connect to your home server while roaming Remote Access: Securely connect your devices over the internet with ZeroTier The Cyber Mentor - Hack From Anywhere! - ZeroTier Remote AccessZeroTier SD-WANSD-WAN articles A consumer-grade SD-WAN solution to improve mobile internet How do I create a VPN/SD-WAN with Zerotier and Teltonika? ZeroTier on OpenWrt (VPN + SD-WAN)SD-WAN videos Profitap HQ B.V - How to Connect IOTA to ZeroTier SD-WAN environment SecurityGuy - Hands-on with ZeroTier SD-WAN for Cloud ConnectivitySD-WAN videos global LACNIC RIR - ZeroTier - Usando una solución Open Source para integrar VPNs e iniciar operaciones SD-WANZeroTier IoT Source CodeGithubgithub.com/zerotier/zerotierone NEXT STEPSClick here to create your network and start adding devices. Releases BEFORE DOWNLOADINGClick here to create your network and then start adding devices. Downloads Pagehttp://www.zerotier.com/download Past versions of ZeroTierdownload.zerotier.com/RELEASES/ Release Notesgithub.com/zerotier/zerotierone How ZeroTier WorksOur installable client service. The ProtocolZeroTier is a smart programmable Ethernet switch for planet Earth. It allows all networked devices, VMs, containers, and applications to communicate as if they all reside in the same physical data center or cloud region. OverviewZeroTier is a distributed network hypervisor built atop a cryptographically secure global peer to peer network. It provides advanced network virtualization and management capabilities on par with an enterprise SDN switch, but across both local and wide area networks and connecting almost any kind of app or device.This is accomplished by combining a cryptographically addressed and secure peer to peer network (termed VL1) with an Ethernet emulation layer somewhat similar to VXLAN (termed VL2). Our VL2 Ethernet virtualization layer includes advanced enterprise SDN features like fine grained access control rules for network micro-segmentation and securty monitoring.All ZeroTier traffic is encrypted end-to-end using secret keys that only you control. Most traffic flows peer to peer, though we offer free (but slow) relaying for users who cannot establish peer to peer connections.Everything in the ZeroTier world is controlled by two types of identifier: 40-bit/10-digit ZeroTier address and 64-bit/16-digit network IDs. These identifiers are easily distinguished by their length. A ZeroTier address identifies a node or “device”(laptop, phone, server, VM, app, etc.) while a network ID identifies a virtual Ethernet network that can be joined by devices.ZeroTier addresses can be thought of as port numbers on an enormous planet-wide enterprise Ethernet smart switch supporting VLANs. Network IDs are VLAN IDs to which these ports may be assigned. A single port can be assigned to more than one VLAN.A ZeroTier address looks like 8056c2e21c and a network ID looks like 8056c2e21c000001. Network IDs are composed of the ZeroTier address of that network’s primary controller and an arbitrary 24-bit ID that identifies the network on this controller. Network controllers are roughly analogous to SDN controllers in SDN protocols like OpenFlow, though as with the analogy between VXLAN and VL2 this should not be read to imply that the protocols or design are the same. You can use our convenient and inexpensive SaaS hosted controllers at my.zerotier.com or run your own controller if you don’t mind messing around with JSON configuration files or writing scripts to do so. INFOVisit ZeroTier’s site for more information and pre-built binary packages. Apps for Android and iOS are available for free in the Google Play and Apple app stores. Origin and Design PhilosophyThe goals and design principles of ZeroTier are inspired by among other things the original Google BeyondCorp paper and the Jericho Forum with its notion of “deperimeterizationg.” Network HypervisorThe ZeroTier network hypervisor (currently found in the node/ subfolder of the ZeroTierOne git repository) is a self-contained network virtualization engine that implements an Ethernet virtualization layer similar to VXLAN on top of a global encrypted peer to peer network.The ZeroTier protocol is original, though aspects of it are similar to VXLAN and IPSec. It has two conceptually separate but closely coupled layer in the OSI model sense: VL1 and VL2. VL1 is the underlying peer to peer transport layer, the “virtual wire,” while VL2 is an emulated Ethernet layer that provides operating systems and apps with a familiar communication medium. The ZeroTier Peer to Peer Network (VL1)A global data center requires a global wire closet.In conventional networks L1 (OSI layer 1) refers to the actual CAT5/CAT6 cables or wireless radio channels over which data is carried and the physical transceiver chips that modulate and demodulate it. VL1 is a peer to peer network that does the same thing by using encryption, authentication, and a lot of networking tricks to create virtual wires on a dynamic as-needed basis. Network Topology and Peer DiscoveryVL1 is designed to be zero-configuration. A user can start a new ZeroTier node without having to write configuration files or provide the IP addresses of other nodes. It’s also designed to be fast. Any two devices in the world should be able to locate each other and communicate almost instantly.To achieve this VL1 is organized like DNS. At the base of the network is a collection of always-present root servers whose role is similar to that of DNS root name servers. Roots run the same software as regular endpoints but reside at fast stable locations on the network and are designated as such by a world definition. World definitions come in two forms: the planet and one or more moons. The protocol includes a secure mechanism allowing world definitions to be updated in-band if root servers’ IP addresses or ZeroTier addresses change.There is only one planet. Earth’s root servers are operated by ZeroTier, Inc. as a free service. There are currently four root servers distributed across the globe and multiple network providers. Almost everyone in the wrold has one within less than 100ms network latency from their location.A node can “orbit” any number of moons. A moon is just a convenient way to add user-defined root servers to the pool. Users can create moons to reduce dependency on ZeroTier, Inc. infrastructure or to locate root servers closer for better performance. For on-premise SDN use a cluster of root servers can be located inside a building or data center so that ZeroTier can continue to operate normally if Internet connectivity is lost.Nodes start with no direct links to one another, only upstream to roots (planet and moons). Every peer on VL1 possesses a globally unique 40-bit (10 hex digit) ZeroTier address, but unlike IP addresses these are opaque cryptographic identifiers that encode no routing information. To communicate peers first send packets “up” the tree, and as these packets traverse the network they trigger the opportunistic creation of direct links along the way. The tree is constantly trying to “collapse itself” to optimize itself to the pattern of traffic it is carrying.Peer to peer connection setup goes like this: A wants to send a packet to B, but since it has no direct path it sends it upstream to R (a root). If R has a direct link to B, it forwards the packet there. Otherwise it sends the packet upstream until planetary roots are reached. Planetary roots know about all nodes, so eventually the packet will reach B if B is online. R also sends a message called rendezvous to A containing hints about how it might reach A. A and B get their rendezous messages and attempt to send test messages to each other, possibly accomplishing hole punching of any NATs or stateful firewalls that happen to be in the way. If this works a direct link is established and packets no longer need to take the scenic route. Since roots forward packets, A and B can reach each other instantly. A and B then begin attempting to make a direct peer to peer connection. If this succeeds it results in a faster lower latency like. We call this transport triggered link provisioning since it’s the forwarding of the packet itself that triggers the peer to peer network to attempt direct connection.VL1 never gives up. If a direct path can’t be established, communication can continue through (slower) relaying. Direct connection attempts continue forever on a periodic basis. VL1 also has other features for establishing direct connectivity including LAN peer discovery, port prediction for traversal of symmetric IPv4 NATs, and explicit port mapping using uPnP and/or NAT-PMP if these are available on the local physical LAN.A blog post from 2014 by ZeroTier’s original author explains some of the reasoning behind VL1’s design. AddressingEvery node is uniquely identified on VL1 by a 40-bit (10 hex digit) ZeroTier address. This address is computed from the public portion of public/provate key pair. A node’s address, public key, and private key together form its identity.On devices running ZeroTier One the node identity is stored in identity.public and identity.secret in the service’s home directory.When ZeroTier starts for the first time it generates a new identity. It then attempts to advertise it upstream to the network. In the very unlikely event that the identity’s 40-bit unique address is taken, it discards it and generates another.Identities are claimed on a first come first serve basis and currently expire from planetary roots after 60 days of inactivity. If a long-dormant device returns it may re-claim its identity unless its address has been taken in the meantime (again, highly unlikely).The address derivation algorithm used to compute addresses from public keys imposes a computational cost barrier against the intentional generation of a collision. Currently it would take approximately 10,000 CPU-years to do so (assuming e.g. a 3ghz intel core). This is expensive but not impossible, but it’s only the first line of defense. After generating a collision an attacker would then have to compromise all upstream nodes, network controllers, and anything else that has recently communicated with the target node and replace their cached identities.ZeroTier addresses are, once advertised and claimed, a very secure method of unique identification.When a node attempts to send a message to another node whose identity is not cached, it sends a whois query upstream to a root. Roots provide an authoritative identity cache. CryptographyIf you don’t know much about cryptography you can safely skip this section. TL;DR: packets are end-to-end encrypted and can’t be read by roots or anyone else, and we use modern 256-bit crypto in ways recommended by the professional cryptographers that created it.Asymmetric public key encryption is Curve25519/Ed25519, a 256-bit elliptic curve variant.Every VL1 packet is encrypted end to end using (as of the current version) 256-bit Salsa20 and authenticated using the Poly1305 message authentication (MAC) algorithm. MAC is computed after encryption (encrypt-then-MAC) and the cipher/MAC composition used is identical to the NaCI reference implementation.As of today we do not implement forward secrecy or other stateful cryptographic features in VL1. We don’t do this for the sake of simplicity, reliability, and code footprint, and because frequently changing state makes features like clustering and fail-over much harder to implement. See our discussion on GitHub.We may implement forward secrecy in the future. For those who want this level of security today, we recommend using other cryptographic protocols such as SSL or SSH over ZeroTier. These protocols typically implement forward secrecy, but using them over ZeroTier also provides the secondary benefit of defense in depth. Most cryptography is compromised not by a flaw in encryption bu through bugs in the implementation. If you’re using two secure transports, the odds of a critical bug being discovered in both at the same time is very low. The CPU overhead of double-encryption is not significant for most work loads. SECURITYMore information on ZeroTier’s security practices Trusted Paths for Fast Local SDNTo support the use of ZeroTier as a high performance SDN/NFV protocol over physically secure network the protocol supports a feature called trusted paths. It is possible to configure all ZeroTier devices on a given network to skip encryption and authentication for traffic over a designated physical path. This can cut CPU use noticeably in high traffic scenarios but at the cost of losing virtually all transport security.Trusted paths do not prevent communication with devices elsewhere, since traffic over other paths will be encrypted and authenticated normally.We don’t recommend the use of this feature unless you really need the performance and you know what you’re doing. We also recommend thinking carefully before disabling transport security on a cloud private network. Larger cloud providers such as Amazon and Azure tend to provide good network segregation but many less costly providers offer private networks that are “party lines” and are not much more secure than the open Internet. MultipathMultipath allows the simultaneous (or conditional) aggregation of multiple physical links into a bond for increased total throughput, load balancing, redundancy, and fault tolerance. There is a set of standard bonding policies available that can be used right out of the box with no configuration. These policies are inspired by the policies offered by the Linux kernel. A bonding policy can be used easily without specifying any additional parameters. MULTIPATH GUIDE See here for more info and examples. Ethernet Virtualization Layer (VL2)VL2 is a VXLAN-like network virtualization protocol with SDN management features. It implements secure VLAN boundaries, multicast, rules, capability based security, and certificate based access control.VL2 is built atop and carried by VL1, and in so doing it inherits VL1’s encryption and endpoint authentication and can use VL1 asymmetric keys to sign and verify credentials. VL1 also allows us to implement VL2 entirely free of concern for underlying physical network topology. Connectivity and routing efficiency issues are VL1 concerns. It’s important to understand that there is no relationship between VL2 virtual networks and VL1 paths. Much like VLAN multiplexing on a wired LAN, two nodes that share multiple network memberships in common will still only have one VL1 path (virtual wire) between them. Network Identifiers and ControllersEach VL2 network (VLAN) is identified by a 64-bit (16 hex digit) ZeroTier network ID that contains the 40-bit ZeroTier address of the network’s controller and a 24-bit number identifying the network on the controller. Network ID: 8056c2e21c123456 | | | Network number on controller | ZeroTier address of controller When a node joins a network or requests a network configuration update, it sends a network config query message (via VL1) to the network’s controller. The controller can then use the node’s VL1 address to look it up on the network and send it the appropriate certificates, credentials, and configuration information. From the perspective of VL2 virtual networks, VL1 ZeroTier addresses can be thought of as port numbers on an enormous global-scale virtual switch.A common misunderstanding is to conflate network controllers with root servers (planet and moons). Root servers are connection facilitators that operate at the VL1 level. Network controllers are configuration managers and certificate authorities that belong to VL2. Generally root servers don’t join or control virtual networks and network controllers are not root servers, though it is possible to have a node do both. Controller Security ConsiderationsNetwork controllers serve as certificate authorities for ZeroTier virtual networks. As such, their identity.secret files should be guarded closely and backed up securely. Compromise of a controller’s secret key would allow an attacker to issue fraudulent network configurations or admit unauthorized members, while loss of the secret key results in loss of ability to control the network in any way or issue configuration updates and effectively renders the network unusable.It is important that controllers’ system clocks remain relatively accurate (to within 30-60 seconds) and that they are secure against against remote tampering. Many cloud providers provide secure time sources either directly via the hypervisor or via NTP servers within their networks. Certificates and Other CredentialsAll credentials issued by network controllers to member nodes in a given network are signed by the controller’s secret key to allow all network members to verify them. Credentials have timestamp fields populated by the controller, allowing relative comparison without the need to trust the node’s local system clock.Credentials are issued only to their owners and are then pushed peer to peer by nodes that wish to communicate with other nodes on the network. This allows networks to grow to enormous sizes without requiring nodes to cache large numbers of credentials or to constantly consult the controller. Credential Types Certificates of Membership: a certificate that a node presents to obtain the riht to communicate on a given network. Certificates of membership are accepted if they agree, meaning that the submitting member’s certificate’s timestamp differs from the recipient’s certificate’s timestamp by no more than the recipient certificate’s maximum timestamp delta value. This creates a decentralized moving-window scheme for certificate expiration without requiring node clock synchronization or constant checking with the controller. Revocations: a revocation instantaneously revokes a given credential by setting a hard timestamp limit before which it will not be accepted. Revocations are rapidly propagated peer to peer among members of a network using a rumor mill algorithm, allowing a controller to revoke a member credential across the entire network even if its connection to some members is unreliable. Capabilities: a capability is a bundle of network rules that is signed by the controller and can be presented to other members of a network to grant the presenter elevated privileges within the framwork of the network’s base rule set. More on this in the section on rules. Tags: a tag is a key/value pair signed by the controller that is automatically presented by members to one another and can be matched on in base or capability network rules. Tags can be used to categorize members by role, department, classification, ect. Certificates of Ownership: these certify that a given netwrok member owns something, such as an IP address. These are currently only used to lock down netwroks against IP address spoofing but could be used in the future to certify ownership of other network-level entities that can be matched in a filter. Multicast, ARP, NDP, and Special Addressing ModesZeroTier netwroks support multicast via a simple publish/subscribe system.When a node wishes to receive multicasts for a given multicast group, it advertises membership in this group to other members of the network with which it is communicating and to the network controller. When a node wishes to send a multicast it both consults its cache of recent advertisements and periodically solicits additional advertisements.Broadcast (Ethernet ff:ff:ff:ff:ff:ff) is treated as a multicast group to which all members subscribe. It can be disabled at the network level to reduce traffic if it is not needed. IPv4 ARP receives special handling (see below) and will still work if normal broadcast is disabled.Multicasts are propagated using simple sender-side replication. This places the full outbound bandwidth load for multicast on the sender and minimizes multicast latency. Network configurations contain a network-wide multicast limit configurable at the network controller. This specifies the maximum number of other nodes to which any node will send a multicast. If the number of known recipients in a given multicast group exceeds the multicast limit, the sender chooses a random subset.There is no global limit on multicast recipients, but setting the multicast limit very high on very large networks could result in significant bandwidth overhead. Special Handling of IPv4 ARP BroadcastsIPv4 ARP is built on simple Ethernet broadcast and scales poorly on large or distributed networks. To improve ARP’s scalability ZeroTier generates a unique multicast group for each IPv4 address detected on its system and then transparently intercepts ARP queries and sends them only to the correct group. This converts ARP into effectively a unicast or narrow multicast protocol (like IPv6 NDP) and allows IPv4 ARP to work reliably across wide area networks without excess bandwidth consumption. A similar strategy is implemented under the hood by a number of enterprise switches and WiFi routers designed for deployment on extremely large LANs. This ARP emulation mode is transparent to the OS and application layers, but it does mean that packet sniffers will not see all ARP queries on a virtual network the way they typically can on smaller wired LANs. Multicast-Free IPv6 Addressing ModesIPv6 uses a protocol called NDP in place of ARP. It is similar in role and design but uses narrow multicast in place of broadcast for superior scalability on large networks. This protocol nevertheless still imposes the latency of an additional multicast lookup whenever a new address is contacted. This can add hundreds of milliseconds over a wide area network, or more if latencies associated with pub/sub recipient lookup are significant.IPv6 addresses are large enough to easily encode ZeroTier addresses. For faster operation and better scaling we’ve implemented several special IPv6 addressing modes that allow the local node to emulate NDP. These are ZeroTier’s rfc4193 and 6plane IPv6 address assignment schemes. If these addressing schemes are enabled on a network, nodes locally intercept outbound NDP queries for matching addresses and then locally generate spoofed NDP replies.Both modes dramatically reduce initial connection latency between network members. 6plane additionally exploits NDP emulation to transparently assign an entire IPv6 /80 prefix to every node without requiring any node to possess additional routing table entries. This is designed for virtual machine and container hosts that wish to auto-assign IPv6 addresses to guests and is very useful on microservice architecture backplane networks.Finally there is a security benefit to NDP emulation. ZeroTier addresses are cryptographically authenticated, and since Ethernet MAC addresses on networks are computed from ZeroTier addresses these are also secure. NDP emulated IPv6 addressing modes are therefore not vulnerable to NDP reply spoofing.Normal non-NDP-emulated IPv6 addresses (including link-local addresses) can coexist with NDP-emulated addressing schemes. Any NDP queries that do not match NDP-emulated addresses are sent via normal multicast. Ethernet BridgingZeroTier emulates a true Ethernet switch. This includes the ability to L2 bridge other Ethernet networks (wired LAN, WiFi, virtual backplanes, etc.) to virtual networks using conventional Ethernet bridging.To act as a bridge a network member must be designated as such by the controller. This is for security reasons as normal network members are not permitted to send traffic from any origin other than their MAC address. Designated bridges also receive special treatment from the multicast algorithm, which more aggressively and directly queries them for group subscriptions and replicates all broadcast traffic and ARP requests to them. As a result bridge nodes experience a slightly higher amount of multicast bandwidth overhead.Bridging has been tested extensively on Linux using the Linux kernel native bridge, which cleanly handles network MTU mismatch. There are third party reports of bridging working on other platforms. The details of setting up bridging, including how to selectively block traffic like DHCP that may not be wanted across the bridge, are beyond the scope of this manual. GUIDESee our bridging tutorial Public NetworksIt is possible to disable access control on a ZeroTier network. A public network’s members do not check certificates of membership, and new members to a public network are automatically marked as authorized by their host controller. It is not possible to de-authorize a member from a public network.Rules on the other hand are enforced, so it’s possible to implement a special purpose public network that only allows access to a few things or that only allows a restricted subset of traffic.Public networks are useful for testing and for peer to peer “party lines” for gaming, chat, and other applications. Participants in public networks are warned to pay special attention to security. If joining a public network be careful not to expose vulnerable services or accidentally share private files via open network shares or HTTP servers. Make sure your operating system, applications, and services are fully up to date. Ad-Hoc NetworksA special kind of public network called an ad-hoc network may be accessed by joining a network ID with the format: ffSSSSEEEE000000 | | | | | | | Reserved for future use, must be 0 | | End of port range (hex) | Start of port range (hex) Reserved ZeroTier address prefix indicating a controller-less network Ad-hoc networks are public (no access control) networks that have no network controller. Instead their configuration and other credentials are generated locally. Ad-hoc networks permit only IPv6 UDP and TCP unicast traffic (no multicast or broadcast) using 6plane format NDP-emulated IPv6 addresses. In addition an ad-hoc network ID encodes an IP port range. UDP packets and TCP SYN (connection open) packets are only allowed to destination ports within the encoded range.For example ff00160016000000 is an ad-hoc network allowing only SSH, while ff0000ffff000000 is an ad-hoc network allowing any UDP or TCP port.Keep in mind that these networks are public and anyone in the entire world can join them. Care must be taken to avoid exposing vulnerable services or sharing unwanted files or other resources. GETTING STARTEDClick here to create your network and start adding devices. SecurityCryptographyZeroTier uses state of the art cryptographic methods to encrypt your traffic end-to-end. Read more here Report a vulnerabilityIf you believe you’ve found a vulnerability please follow the instructions here to report it to our team AuditIn March 2020 we worked with @trailofbits to audit our protocol and cryptographic designs for ZeroTier 2.0. As one of its subjects is in our just-released beta, we are ready to make our first preliminary audit public here. A full code audit is coming after 2.0. Rules EngineTraffic on ZeroTier networks can be observed and controlled with a system of globally applied network rules. These are enforced in a distributed fashion by both the senders and the receivers of packets. To escape the rules engine a malicious attacker would need to fully compromise both sides of any conversation.The ZeroTier VL2 rules engine differs from most other firewalls and SDN rules engines in several ways. The most immediately relevant of these is that the ZeroTier rules engine is stateless, meaning it lacks connection tracking. This means that bidirectional whitelisting can’t be accomplished by simply whitelisting reply packets to established connections. Instead some thought must be put into how to allow both sides of a desired flow. Rule patterns to achieve the most common desired objectives are included in this manual.The decision to make our rules engine stateless was a design trade-off driven by several concerns. First we wanted to keep complexity, code footprint, and memory use very low to support small embedded devices. The second and more fundamental reason is that distributed stateful filtering requires distributed state synchronization. This would have added a large volume of additional sync traffic as well as introducing inescapable new sources of instability and failure and a lot of surface area for security vulnerabilities.While ZeroTier lacks state tracking, its rules engine includes something not found anywhere else in the enterprise networking space: capability-based security and device tagging. Capabilities and tags allow extremely complex micro-segmented network rule schemes to be implemented in a sane, conceptual way that is both easier for human beings to understand and more efficient for machines to handle.This section assumes some level of familiarity with network rules as they’re commonly used on firewalls and routers, etc. While the rules engine is part of VL2, it’s been given its own section in this manual due to the depth and cross-cutting nature of the topic. Rule Sets and Rule EvaluationRule sets are ordered lists of one or more rules, with each rule consisting of one or more match conditions followed by one action. As a rule set is evaluated, each match is tested in order and is then ANDed or ORed with the previous match result state. When an action is encountered it is taken if the result of the preceding matches is true. An action with no preceding matches is always taken. If no permissive actions are taken by any rule set the packet is discarded.Here is a simple rule set that constrains Ethernet traffic on a network to only IPv4, ARP, or IPv6 as it would appear in the raw JSON format used by ZeroTier One’s built-in network controller implementation. (Don’t worry if this seems verbose and difficult. We have a more human-friendly way of writing rule sets, but before we introduce it it’s important to understand what is really happening.) [ &#123; &quot;etherType&quot;: 2048, &quot;not&quot;: true, &quot;or&quot;: false, &quot;type&quot;: &quot;MATCH_ETHERTYPE&quot; &#125;, &#123; &quot;etherType&quot;: 2054, &quot;not&quot;: true, &quot;or&quot;: false, &quot;type&quot;: &quot;MATCH_ETHERTYPE&quot; &#125;, &#123; &quot;etherType&quot;: 34525, &quot;not&quot;: true, &quot;or&quot;: false, &quot;type&quot;: &quot;MATCH_ETHERTYPE&quot; &#125;, &#123; &quot;type&quot;: &quot;ACTION_DROP&quot; &#125;, &#123; &quot;type&quot;: &quot;ACTION_ACCEPT&quot; &#125; ] This checks whether an Ethernet level packet is not IPv4 (ethertype 2048) and not IPv4 ARP (ethertype 2054) and not IPv6 (ethertype 34525). If all three matches evaluate to true (meaning the ethertype is none of these) then the drop action is taken. Otherwise the accept action is taken.Networks have one base rule set that is applied to all traffic. Its size is constrained to 1024 entries (each match or action is an entry). It should be used to set the overall policies for all members of the network, and for most common use cases it’s all you’ll need. For more complex scenarios, both capabilities and tags provide methods of both managing complexity and scaling the overall size of a network’s rule system. Actions and Match ConditionsThese are the available matches and actions in raw form. The rule definition language outlined in Rule Definition Language provides a friendlier way for human beings to specify rules. Action Argument(s) Description ACTION_DROP Drop packet and terminate all rule evaluation, including capabilities. ACTION_BREAK Terminate evaluation of this rule set but continue evaluating capabilities. ACTION_ACCEPT Accept packet and terminate further evaluation. ACTION_TEE length, address Send a copy of up to the first length bytes (-1 for all) to a ZeroTier address. ACTION_REDIRECT address Transparently redirect this packet to a ZeroTier address without changing its headers. Match Condition Argument(s) Description MATCH_SOURCE_ZEROTIER_ADDRESS zt VL1 source address. MATCH_DEST_ZEROTIER_ADDRESS zt VL1 destination address. MATCH_MAC_SOURCE mac Ethernet source address. MATCH_MAC_DEST mac Ethernet destination address. MATCH_IPV4_SOURCE ip IPv4 source address. MATCH_IPV4_DEST ip IPv4 destination address. MATCH_IPV6_SOURCE ip IPv6 source address. MATCH_IPV6_DEST ip IPv6 destination address. MATCH_IP_TOS mask,start,end IP TOS field bitwise-ANDed with mask is within range. MATCH_IP_PROTOCOL ipProtocol IP protocol number. MATCH_ETHERTYPE etherType Ethernet frame type. MATCH_ICMP icmpType,icmpCode ICMP type and code, if applicable. (V4 or V6) MATCH_IP_SOURCE_PORT_RANGE start,end IP (V4 or V6) source port range (inclusive). MATCH_IP_DEST_PORT_RANGE start,end IP (V4 or V6) destination port range (inclusive). MATCH_CHARACTERISTICS mask Bitwise AND characteristic bits with mask, true if result is nonzero. MATCH_FRAME_SIZE_RANGE start,end Ethernet frame size range (inclusive). MATCH_RANDOM probability Match if a random 32-bit number is less than or equal to the probability. MATCH_TAGS_DIFFERENCE id,value Difference between tags with this ID is less than or equal to the value. MATCH_TAGS_BITWISE_AND id,value Tags ANDed together equal value. MATCH_TAGS_BITWISE_OR id,value Tags ORed together equal value. MATCH_TAGS_BITWISE_XOR id,value Tags XORed together equal value. MATCH_TAGS_EQUAL id,value Both tags equal the same value. MATCH_TAG_SENDER id,value Sending side’s tag equals this value. MATCH_TAG_RECEIVER id,value Receiving side’s tag equals this value. CapabilitiesA capability is a small rule set that is bundled into a credential object, signed by the network controller, and issued to only those member(s) permitted to exercise it. When a member detects that outgoing traffic does not match the base rule set but is allowed by one of its capabilities, it periodically pushes the matching capability credential to the recipient ahead of the packet(s) in question. Peer to peer capability distribution is automatic and is triggered by capability match.When the recipient receives the capability it authenticates it by checking its signature and timestamp and, provided the capability is valid, adds it to the set of capabilities to apply to incoming traffic from the capability’s owner. The sender has effectively told the recipient “I can too send this packet! Teacher says so!”Capabilities allow large systems of rules to be broken down into functional aspects and then distributed intelligently only to those members with a need to know. This avoids the bandwidth and storage overhead of distributing huge monolithic rule sets and organizes rules conceptually to make them easier for administrators to understand.There are three terminating actions that can be taken in a rule set: accept, break, and drop. The accept action terminates rule evaluation and accepts the packet. The break action terminates the evaluation of the current rule set but permits the further evaluation of capabilities. The drop action terminates rule evaluation and drops the packet without checking capabilities in the base rule set, but is equivalent to break in capability rule sets. In most cases break should be used unless certain traffic must be absolutely prohibited under any circumstance.In the simple base rule set example in section 3.1 the drop action is taken in the unapproved case. This means that Ethernet whitelisting cannot be overridden by a capability. If we change ACTION_DROP in our example to ACTION_BREAK, then it becomes possible to issue the following capability: [ &#123; &quot;etherType&quot;: 2114, &quot;not&quot;: false, &quot;or&quot;: false, &quot;type&quot;: &quot;MATCH_ETHERTYPE&quot; &#125;, &#123; &quot;type&quot;: &quot;ACTION_ACCEPT&quot; &#125; ] Ethertype 2114 is wake-on-LAN, a special packet that can cause some systems to wake from sleep mode. If we place the above tiny rule set into a capability and issue it to a device, this device but no others will now be permitted to send wake-on-LAN magic packets. (Wake-on-LAN requires hardware support so it would only work to target devices plugged into a physical network bridged to a ZeroTier network, but don’t worry about that here. It’s just an example of special traffic.)Capability rule sets are limited to only 64 entries. The idea is to keep them small and simple. A capability should grant one thing or one small set of conceptually related things. TagsZeroTier provides a second mechanism to control rule set complexity. Tags are 32-bit numeric key-value pair credentials that are issued to network members and signed by the controller. They are then distributed peer to peer on a need to know basis in a similar manner to capabilities.Tags provide a way to conditionally drop or allow traffic between members by member classification. They allow very detailed network micro-segmentation by member role, permission, function, etc. without resulting in a combinatorial explosion in rules table size.Let’s say we want to permit traffic on TCP ports 139 and 445 (netbios/CIFS file sharing) only between systems that belong to the same department. Our company has 12,000 devices and 10 departments. Without tags this would require 144,000,000 rules, but with tags it can be accomplished by only a few.First a tag is created to represent the department. Let’s give it tag ID 100. Each member system receives the tag with a value from 1 to 10 indicating which department it belongs to. We can then add the following rules to our network’s base rule set (or to a capability if so desired): [ &#123; &quot;type&quot;: &quot;MATCH_IP_DEST_PORT_RANGE&quot;, &quot;not&quot;: false, &quot;or&quot;: false, &quot;start&quot;: 139, &quot;end&quot;: 139 &#125;, &#123; &quot;type&quot;: &quot;MATCH_IP_DEST_PORT_RANGE&quot;, &quot;not&quot;: false, &quot;or&quot;: true, &quot;start&quot;: 445, &quot;end&quot;: 445 &#125;, &#123; &quot;type&quot;: &quot;MATCH_IP_PROTOCOL&quot;, &quot;not&quot;: false, &quot;or&quot;: false, &quot;ipProtocol&quot;: 6 &#125;, &#123; &quot;type&quot;: &quot;MATCH_TAGS_DIFFERENCE&quot;, &quot;not&quot;: false, &quot;or&quot;: false, &quot;id&quot;: 100, &quot;value&quot;: 0 &#125;, &#123; &quot;type&quot;: &quot;ACTION_ACCEPT&quot; &#125; ] This tells members in our network to accept TCP packets on ports 139 or 445 if the difference between tags with tag ID 10 is zero, meaning they match. (If a member does not have a value for this tag, it does not match.) Now all members of the same department can access CIFS file shares, but CIFS sharing between departments could still be prohibited. (TCP whitelisting requires some additional rules due to the stateless nature of our rules engine. See the section below on rule design patterns.)Tags can be compared on numeric value or as bit fields via several different bit mask operations allowing many different systems of member classification to be implemented.Tags without a default value may behave confusingly. As a best practice, use default 0 in your tag definitions. Rule Definition LanguageRaw rule sets are verbose and difficult to write, so we created a minimal rule definition language that’s easier for human beings.The parser for this language can be found in the rule-compiler subfolder of the ZeroTierOne project and as zerotier-rule-compiler on NPM. It’s written in JavaScript and is the same code that powers the in-browser editor in ZeroTier Central. An Introductory Example# Whitelist only IPv4 (/ARP) and IPv6 traffic and allow only ZeroTier-assigned IP addresses drop # drop cannot be overridden by capabilities not ethertype ipv4 # frame is not ipv4 and not ethertype arp # AND is not ARP and not ethertype ipv6 # AND is not ipv6 or not chr ipauth # OR IP addresses are not authenticated (1.2.0+ only!) ; # Allow SSH, HTTP, and HTTPS by allowing all TCP packets (including SYN/!ACK) to these ports accept dport 22 or dport 80 or dport 443 and ipprotocol tcp ; # Create a tag for which department someone is in tag department id 1000 # arbitrary, but must be unique enum 100 sales # has no meaning to filter, but used in UI to offer a selection enum 200 engineering enum 300 support enum 400 manufacturing default 0 ; # Allow Windows CIFS and netbios between computers in the same department using a tag accept dport 139 or dport 445 and ipprotocol tcp and tdiff department 0 # difference between department tags is 0, meaning they match ; # Drop TCP SYN,!ACK packets (new connections) not explicitly whitelisted above break # break can be overridden by a capability chr tcp_syn # TCP SYN (TCP flags will never match non-TCP packets) and not chr tcp_ack # AND not TCP ACK ; # Create a capability called &quot;superuser&quot; that lets its holders override all but the initial &quot;drop&quot; cap superuser id 1000 # arbitrary, but must be unique accept; # allow with no match conditions means allow anything and everything ; # Accept other packets accept; This creates a network that can pass IPv4 (and ARP) and IPv6 traffic but no other Ethernet frame types. In addition the not chr ipauth condition drops traffic between IP addresses that have not been assigned by ZeroTier to their respective sources or destinations, blocking all IP spoofing. These are enforced with a hard drop, preventing them from being overridden by any capability.All UDP is allowed, but all non-whitelisted new TCP connections (SYN/!ACK packets) are blocked. This is done with a soft break, allowing it to be overridden by capabilities. New TCP connections are allowed on ports 22, 80, and 443 for everyone. Windows file sharing is allowed only between computers in the same department by way of a tag. A super-user capability that can be assigned to administrative nodes allows the sender to initiate any kind of connection.See TCP Whitelisting for a discussion of how we accomplish TCP whitelisting here. Rule Definition Language Syntax# The remainder of this line is a comment. action [ ... args ... ] [and|or] [not] match [... args ...] [ ... additional matches ... ] ; tag &lt;name&gt; id &lt;id&gt; # arbitrary unique 32-bit ID [default &lt;value&gt;] # default tag value to assign to members [enum &lt;value&gt; &lt;name&gt;] # value can be any 32-bit unsigned integer [flag &lt;bit&gt; &lt;name&gt;] # bit can be 0 to 31 [ ... additional enums or flags ... ] ; cap &lt;name&gt; id &lt;id&gt; # arbitrary unique 32-bit ID action [ ... args ... ] [ ... ] ; [ ... additional action blocks ... ] ; macro &lt;name[($var1,...)]&gt; action [ ... args ... ] [ ... ] ; ; include &lt;name(value,...)&gt; Each action, tag, capability, or macro block ends with a semicolon. White space separates things. Indentation is not significant. Hash symbols indicate that the remainder of a line is a comment.As described in sections Rule Sets and Rule Evaluation through Tags, a rule set is composed of one or more sequences of match,[match],…,action in which the action is taken if the chain of matches evaluates to true. Capabilities are small bundles of rules that can be assigned to nodes to give them special abilities, and tags are key/value pairs that can be assigned to nodes to allow rules to be selectively applied.Macros are just a convenient way of defining more complex actions that can then be applied in multiple places. An example of a macro might be: macro allowtcp($port) accept ipprotocol tcp and dport $port ; ; You could then allow TCP ports in a standard TCP whitelisting scheme by just saying: include allowtcp(80) include allowtcp(443) include allowtcp(8080) Tag enum and flag directives have no meaning to the actual ZeroTier rules engine, but they can be used by user interfaces like ZeroTier Central to make it easier to assign and search tags. Actions, Matches, Operators, and Constants Action Argument(s) Description drop Drop packet and terminate all rule evaluation, including capabilities. break erminate evaluation of this rule set but continue evaluating capabilities. accept Accept packet and terminate further evaluation. tee &lt;length&gt; &lt;address&gt; Send a copy of up to the first length bytes (-1 for all) to a ZeroTier address. redirect &lt;address&gt; Transparently redirect this packet to a ZeroTier address without changing its headers. Match Condition Argument(s) Description ztsrc &lt;address&gt; VL1 source address. ztdest &lt;address&gt; VL1 destination address. macsrc &lt;address&gt; Ethernet source address. macdest &lt;address&gt; Ethernet destination address. ipsrc &lt;address/prefix&gt; Source IP address or network (V4 or V6 auto-detected). ipdest &lt;address/prefix&gt; Destination IP address or network (V4 or V6 auto-detected). iptos &lt;mask&gt; &lt;start[-end]&gt; IP TOS field bitwise-ANDed with mask is within range. ipprotocol &lt;protocol&gt; IP protocol number. ethertype &lt;type&gt; Ethernet frame type. icmp &lt;type&gt; &lt;code&gt; ICMP type (V4 or V6) and code. Use -1 for code if not applicable. sport &lt;start[-end]&gt; IP (V4 or V6) source port range (inclusive). dport &lt;start[-end]&gt; IP (V4 or V6) destination port range (inclusive). chr &lt;mask/name&gt; Bitwise AND characteristic bits with mask, true if result is nonzero. framesize &lt;start[-end]&gt; Ethernet frame size range (inclusive). random &lt;probability&gt; Match randomly with probability 0.0 (0%) to 1.0 (100%). tdiff &lt;id&gt; &lt;value&gt; Difference between tags (absolute value) with this ID is less than or equal to the value. tand &lt;id&gt; &lt;value&gt; Tags ANDed together equal value. tor &lt;id&gt; &lt;value&gt; Tags ORed together equal value. txor &lt;id&gt; &lt;value&gt; Tags XORed together equal value. teq &lt;id&gt; &lt;value&gt; Both tags equal the same value. tseq &lt;id&gt; &lt;value&gt; Sending side’s tag equals this value. treq &lt;id&gt; &lt;value&gt; Receiving side’s tag equals this value. Match conditions may be joined by and (default if none specified) or or and may be modified by not.Match conditions are evaluated from left to right; a and b or c is a different rule than b or c and a. The rules language doesn’t support parentheses, but for example purposes the above would evaluate as: (a and b) or c vs (b or c) and aTraffic won’t be teed if it is blocked by a break or drop.For convenience the following symbols can be used when matching on certain packet attributes: IP protocols (ipprotocol): icmp (for IPv4), igmp, ipip, tcp, egp, igp, udp, rdp, esp, ah, icmp6 (for IPv6), l2tp, sctp, and udplite. Ethernet frame types (ethertype): ipv4, arp, ipv6, wol (wake on LAN), rarp, atalk, aarp, ipx_a, ipx_b. Packet characteristics (bit masks for chr): inbound: packet is being filtered on the receiving side (use not inbound for sending side) multicast: destination is a multicast or broadcast MAC broadcast: destination is the broadcast MAC ipauth: sender IP is assigned by ZeroTier to the sending node tcp_fin: packet is TCP with FIN flag set tcp_syn: packet is TCP with SYN flag set tcp_rst: packet is TCP with RST flag set tcp_psh: packet is TCP with PSH flag set tcp_ack: packet is TCP with ACK flag set tcp_urg: packet is TCP with URG flag set tcp_ece: packet is TCP with ECE flag set tcp_cwr: packet is TCP with CWR flag set tcp_ns: packet is TCP with NS flag set tcp_rs2: packet is TCP with RS2 (reserved bit 2) flag set tcp_rs1: packet is TCP with RS1 (reserved bit 1) flag set tcp_rs0: packet is TCP with RS0 (reserved bit 0) flag set Usefull Design PatternsTCP WhitelistingFirst, add this at or near the bottom of your rules: # Block TCP SYN,!ACK to prevent new non-whitelisted TCP connections from being initiated # unless previously whitelisted or allowed by a capability. break chr tcp_syn and not chr tcp_ack; Then above the SYN,!ACK break (or in a capability) add rules to allow TCP packets with permitted destination ports: # Allow TCP port 80 (HTTP) accept ipprotocol tcp and dport 80; ZeroTier’s filter is stateless. If we block all TCP packets except those with the correct destination port, this will prevent reply packets from returning to their senders.Allowing reply packets with the correct (inverse) source port seems like a simple fix, but this is insecure as it allows anyone to initiate any TCP connection if they bind to whitelisted source ports.The best solution is to block all non-whitelisted TCP packets with flags SYN,!ACK (SYN and not ACK) and and then whitelist desired destination ports. This way TCP replies and control traffic are allowed, but new connections cannot be opened unless they are permitted. Locking Down UDPUDP is tougher to deal with in a stateless paradigm. It’s connectionless so there is no way to specifically select a new session vs. an existing session. The best way to lock down UDP on a network is to use tags to allow it to and from things like DNS servers that need to speak it. tag udpserver id 1000 default 0 ; accept ipprotocol udp and tor udpserver 1 or chr multicast ; break ipprotocol udp; First we define a tag called udpserver with a default value of 0. We don’t set any enums or flags for this tag since it will be used as a boolean. For servers that need to respond to DNS queries, set the udpserver to 1.Then we accept UDP traffic if the value of the udpserver tag is 1 when both sender and receiver tags are ORed together, or if UDP traffic is multicast. This allows multicast mDNS and Netbios announcements and allows UDP traffic to and from UDP servers, but prohibits other horizontal UDP traffic. Traffic Observation and InterceptionHere’s a simple rule to monitor everything: # Send a copy of EVERY packet on both sender and receiver side to ZeroTier address &quot;deadbeef11&quot;. tee -1 deadbeef11; That’s going to flood deadbeef11 with two full copies of every single packet, since it will match on both the sender and the recipient side. A less bandwidth-intensive security monitor setup might look like this: tee 128 deadbeef11 chr inbound and chr tcp_syn or chr tcp_rst or chr tcp_fin or random 0.1 ; tee 128 deadbeef22 not chr inbound and chr tcp_syn or chr tcp_rst or chr tcp_fin or random 0.1 ; This is a bit more clever. It sends the first 128 bytes of every TCP SYN, RST, or FIN packet (TCP connection open and close) to one observer on the inbound side and another observer on the outbound side. It also sends the first 128 bytes of other packets with a probability of one in ten. The first 128 bytes of a packet will be enough to see the Ethernet and IP headers as well as layer 4+ information about many protocols.This would allow observers to watch every new TCP connection on the network and also passively monitor other traffic in a “fuzzy” probabilistic fashion without using very much bandwidth. We split sending and receiving observers to prevent duplicate packets and also to allow us to detect cases where one side is failing to tee traffic more frequently than would be easily explained by packet loss.There are many, many variations on the above that are possible but hopefully these will be enough to get you started.Passive out-of-line monitoring with tee is not perfect. If bandwidth between two parties exceeds the bandwidth of one or both parties to the observer, packets will get dropped. It also provides no mechanism to filter traffic in depth since the observer cannot directly intervene (though it could de-authorize a member via the controller API).Active in-line monitoring can be achieved with redirect: redirect deadbeef11 dport 80 or sport 80 and ipprotocol tcp ; This will pipe all HTTP traffic through deadbeef11. The target node will receive each Ethernet frame intact including its original Ethernet source and destination MAC address. To forward the packet on to its final destination, simply re-send it unmodified via the same interface on which it was received. The intermediate node could scan, modify, and interrupt HTTP traffic across the network. To regular network participants this is completely invisible as it occurs at layer 2 (Ethernet), though some performance degradation may be noticed especially if the link is running across WAN. The Classified System PatternOne useful pattern for access control resembles the way military organizations classify data. Information is deemed classified, and only those who have the required level of classification are allowed to access it.A model resembling this can be implemented in ZeroTier network rules as follows: # Is this member classified? tag classified id 2 enum 0 no enum 1 secret enum 2 top default no ; # Clearance flags (a bit like groups) tag clearance id 1 default 0 flag 0 staging flag 1 production flag 2 financial flag 3 security flag 4 executive ; # If one party is classified, require at least one overlapping clearance bit break not tor classified 0 and tand clearance 0 ; Initially members will be assigned a default classification of 0 (“no”). These can freely communicate since the bitwise OR of their classified tags will be zero. Neither member possesses a classification requirement.To restrict access to a member, set its classified tag to secret or top. (In this example there is no difference, but two levels are included in case you want to implement some kind of more detailed segmentation based on these.) Now the first match (not tor classified 0) will be true and the packet will be dropped unless the two communicating members have at least one clearance bit in common (tand clearance 0). Client ConfigurationZeroTier One is a service that can run on laptops, desktops, servers, virtual machines, and containers to provide virtual network connectivity through a virtual network port much like a VPN client. It can also act as a network controller and as a federated root server.Binary packages are available on the ZeroTier site and source code is found on GitHub.After the service is installed and started, networks can be joined using their 16-digit network IDs. Each network appears as a virtual “tap” network port on your system that behaves just like an ordinary Ethernet port. ZeroTier runs as AdminThere are two separate ZeroTier apps on PCs.There is a ZeroTier system service. It runs as Admin. It does all the networking. There is a user interface tray app. It does not run as Admin. It talks to the service to join and leave networks.For the app to talk to the service, it needs access to the secret token. If the user running the UI app can’t access the token, it can’t talk the service, so they can’t leave or join networks or change other settings.During install, the token is copied to a location that the installing user can access. Configuration FilesSystemThe ZeroTier One service keeps its configuration and state information in its working directory. The working directory location is: Windows: C:\\ProgramData\\ZeroTier\\One macOS: /Library/Application Support/ZeroTier/One Linux: /var/lib/zerotier-one FreeBSD/OpenBSD: /var/db/zerotier-one Network Specific ConfigurationSee $WORKING/networks.d in the working directory &amp;lt;network-id&amp;gt;.conf is a binary file. You can’t edit it by handIf you place an empty file named &amp;lt;network-id&amp;gt;.conf in networks.d, ZeroTier will join that network when it starts. &amp;lt;network-id&amp;gt;.local.conf text file with the netwrok’s settingThe contents look like this: allowManaged=1 allowGlobal=0 allowDefault=0 allowDNS=0 These settings apply to the specific ZeroTier network.Here is a summary of their meanings: Allow Managed. Default Yes. Allow ZeroTier to set IP Addresses and Routes ( local/private ranges only) Allow Global. Default No. Allow ZeroTier to set Global/Public/Not-Private range IPs and Routes. Allow Default. Default No. Allow ZeroTier to set the Default Route on the system. See Full Tunnel Mode. Allow DNS. Default No. Allow ZeroTier to set DNS servers. ZeroTier will use these settings when it starts. If you change these settings from the UI or zerotier-cli, the file will update. If you edit the file directly, you need to restart the service. UserSome user specific settings may be stored in the user’s path: C:\\Users\\&lt;User&gt;\\AppData\\Local\\ZeroTier (Windows) ~/Library/Application\\ Support/ZeroTier (macOS)Local Configuration OPtionsA file called local.conf in the ZeroTier home folder contains configuration options that apply to the local node. It can be used to set up trusted paths, blacklist physical paths, set up physical path hints for certain nodes, and define trusted upstream devices (federated roots). Most of the time, you don’t need to change any of these settings.In a large deployment it can be deployed using a tool like Puppet, Chef, SaltStack, etc. to set a uniform configuration across systems.local.conf is a JSON format file that can also be edited and rewritten by ZeroTier One itself, so ensure that proper JSON formatting is used. Paste your JSON into a JSON tool before saving your configuration file.Settings available in local.conf (this is not valid JSON, and JSON does not allow comments):&#123; &quot;physical&quot;: &#123; /* Settings that apply to physical L2/L3 network paths. */ &quot;NETWORK/bits&quot;: &#123; /* Network e.g. 10.0.0.0/24 or fd00::/32 */ &quot;blacklist&quot;: true|false, /* If true, blacklist this path for all ZeroTier traffic */ &quot;trustedPathId&quot;: 0|!0 /* If present and nonzero, define this as a trusted path (see below) */ &#125; /* ,... additional networks */ &#125;, &quot;virtual&quot;: &#123; /* Settings applied to ZeroTier virtual network devices (VL1) */ &quot;##########&quot;: &#123; /* 10-digit ZeroTier address */ &quot;try&quot;: [ &quot;IP/port&quot;/*,...*/ ], /* Hints on where to reach this peer if no upstream/roots are online */ &quot;blacklist&quot;: [ &quot;NETWORK/bits&quot;/*,...*/ ] /* Blacklist a physical path for only this peer. */ &#125; &#125;, &quot;settings&quot;: &#123; /* Other global settings */ &quot;primaryPort&quot;: 0-65535, /* If set, override default port of 9993 and any command line port */ &quot;portMappingEnabled&quot;: true|false, /* If true (the default), try to use uPnP or NAT-PMP to map ports */ &quot;softwareUpdate&quot;: &quot;apply&quot;|&quot;download&quot;|&quot;disable&quot;, /* Automatically apply updates, just download, or disable built-in software updates */ &quot;softwareUpdateChannel&quot;: &quot;release&quot;|&quot;beta&quot;, /* Software update channel */ &quot;softwareUpdateDist&quot;: true|false, /* If true, distribute software updates (only really useful to ZeroTier, Inc. itself, default is false) */ &quot;interfacePrefixBlacklist&quot;: [ &quot;XXX&quot;,... ], /* Array of interface name prefixes (e.g. eth for eth#) to blacklist for ZT traffic */ &quot;allowManagementFrom&quot;: [ &quot;NETWORK/bits&quot; ]|null, /* If non-NULL, allow JSON/HTTP management from this IP network. Default is 127.0.0.1 only. */ &quot;allowTcpFallbackRelay&quot;: true|false /* Allow or disallow establishment of TCP relay connections (true by default) */ &#125; &#125; trustedPathld:A trusted path is a physical network over which encryption and authentication are not required. This provides a performance boost but sacrifices all ZeroTier’s security features when communicating over this path. Only use this feature if you know what you are doing and really need the performance! To set up a trusted path, all devices on the same trusted physical network must have the same trusted path ID. Trusted path IDs are arbitrary unsigned 64-bit integers. These are not secrets. The security of a trusted path depends on its physical configuration. Take special care that any firewalls at its boundaries do not allow traffic in our out with IPs overlapping the trusted network range. An example local.conf: &#123; &quot;physical&quot;: &#123; &quot;10.0.0.0/24&quot;: &#123; &quot;blacklist&quot;: true &#125;, &quot;10.10.10.0/24&quot;: &#123; &quot;trustedPathId&quot;: 101010024 &#125;, &#125;, &quot;virtual&quot;: &#123; &quot;feedbeef12&quot;: &#123; &quot;role&quot;: &quot;UPSTREAM&quot;, &quot;try&quot;: [ &quot;10.10.20.1/9993&quot; ], &quot;blacklist&quot;: [ &quot;192.168.0.0/24&quot; ] &#125; &#125;, &quot;settings&quot;: &#123; &quot;softwareUpdate&quot;: &quot;apply&quot;, &quot;softwareUpdateChannel&quot;: &quot;release&quot; &#125; &#125; authtoken locationThe installer copies authtoken.secret to the installing user’s path.To control the ZeroTier system service, you need the token. If you don’t have the token, you can’t leave or join networks, for example. The UI app uses the token to control the system service. The cli, zerotier-cli, uses it also.The token is called authtoken.secret and it is stored in the ZeroTier working directory. You need to be Admin to access the working directory.The user’s copy of authtoken.secret is in: C:\\Users\\\\AppData\\Local\\ZeroTier (Windows) ~/Library/Application\\ Support/ZeroTier (macOS) If you don’t want a user to control ZeroTier, don’t give them this file and don’t give them access to the working directory. What is a Network Controller? INFOSet up your own Controller Every ZeroTier virtual network has a network controller responsible for admitting members to the network, issuing certificates, and issuing default configuration information.This is our reference controller implementation and is almost the same as the one we use to power our own hosted services at my.zerotier.com. The only difference is the database backend used.Controller data is stored in JSON format under controller.d in the ZeroTier working directory. It can be copied, rsync’d, placed in git, etc. The files under controller.d should not be modified in place while the controller is running or data loss may result, and if they are edited directly take care not to save corrupt JSON since that can also lead to data loss when the controller is restarted. Going through the API is strongly preferred to directly modifying these files.See the API section below for information about controlling the controller. Scalability and ReliabilityControllers can in theory host up to 2^24 networks and serve many millions of devices (or more), but we recommend spreading large numbers of networks across many controllers for load balancing and fault tolerance reasons. Since the controller uses the filesystem as its data store we recommend fast filesystems and fast SSD drives for heavily loaded controllers.Since ZeroTier nodes are mobile and do not need static IPs, implementing high availability fail-over for controllers is easy. Just replicate their working directories from master to backup and have something automatically fire up the backup if the master goes down. Modern orchestration tools like Nomad and Kubernetes can be of help here. Dockerizing ControllersZeroTier network controllers can easily be run in Docker or other container systems. Since containers do not need to actually join networks, extra privilege options like “—device=/dev/net/tun —privileged” are not needed. You’ll just need to map the local JSON API port of the running controller and allow it to access the Internet (over UDP/9993 at a minimum) so things can reach and query it. Upgrading from Older (1.1.14 or earlier) VersionOlder versions of this code used a SQLite database instead of in-filesystem JSON. A migration utility called migrate-sqlite is included here and must be used to migrate this data to the new format. If the controller is started with an old controller.db in its working directory it will terminate after printing an error to stderr. This is done to prevent “surprises” for those running DIY controllers using the old code.The migration tool is written in nodeJS and can be used like this: cd migrate-sqlite npm install node migrate.js &lt;/path/to/controller.db&gt; &lt;/path/to/controller.d&gt; Network Controller APIThe controller API is hosted via the same JSON API endpoint that ZeroTier One uses for local control (usually at 127.0.0.1 port 9993). All controller options are routed under the /controller base path.The controller microservice itself does not implement any fine-grained access control. Access control is via the ZeroTier control interface itself and authtoken.secret. This can be sent as the X-ZT1-Auth HTTP header field or appended to the URL as ?auth=&lt;token&gt;. Take care when doing the latter that request URLs are not being logged.While networks with any valid ID can be added to the controller’s database, it will only actually work to control networks whose first 10 hex digits correspond with the network controller’s ZeroTier ID. See Network Identifiers and Controllers.The controller JSON API is very sensitive about types. Integers must be integers and strings strings, etc. Incorrect types may be ignored, set to default values, or set to undefined values.Full documentation of the Controller API can be found on our documentation site Prometheus MetricsController specific metrics are available from the /metrics endpoint.Metric Name|Type|Description——|——|——controller_network_count|Gauge|number of networks the controller is servingcontroller_member_count|Gauge|number of network members the controller is servingcontroller_network_change_count|Counter|number of times a network configuration is changedcontroller_member_change_count|Counter|number of times a network member configuration is changedcontroller_member_auth_count|Counter|number of network member authscontroller_member_deauth_count|Counter|number of network member deauths CentralCreate a NetworkA ZeroTier network is essentially a secure Local Area Network (LAN) that you can use anywhere in the world. Let’s make one and connect two devices over ZeroTier.We’ll use ping to test the connection. Any two devices that can run ZeroTier will do: laptop, phone, virtual machine, etc…Both devices can be at the same location, on the same physical network. If you move one to a cafe or to your office, it should still just work.The rough outline is: Create a ZeroTier network Join the network from two devices ping one device from the other over the ZeroTier network This should take about 5 minutes. Results PreviewHere is a summary of the results of this tutorial, if you’re a networking person.If this doesn’t mean anything to you, that’s OK. We’ll get there.Each zerotier network you join creates a network interface on your device. It’s like adding another Ethernet port to your computer. node1# ip -o a 1: lo inet 127.0.0.1/8 scope host lo\\ valid_lft forever preferred_lft forever 2: eth0 inet 192.168.182.201/24 brd 192.168.182.255 scope global dynamic noprefixroute eth0\\ valid_lft 3277sec preferred_lft 2827sec 9: zt3jn2z57r inet 10.2.0.11/23 brd 10.2.1.255 scope global zt3jn2z57r\\ valid_lft forever preferred_lft forever node2# ip -o a 1: lo inet 127.0.0.1/8 scope host lo\\ valid_lft forever preferred_lft forever 2: eth0 inet 192.168.182.202/24 brd 192.168.182.255 scope global dynamic noprefixroute eth0\\ valid_lft 3277sec preferred_lft 2827sec 9: zt3jn2z57r inet 10.2.0.12/23 brd 10.2.1.255 scope global zt3jn2z57r\\ valid_lft forever preferred_lft forever node1# ping -c 3 10.2.0.12 PING 10.2.0.2 (10.2.0.12) 56(84) bytes of data. 64 bytes from 10.2.0.12: icmp_seq=1 ttl=64 time=5.66 ms 64 bytes from 10.2.0.12: icmp_seq=2 ttl=64 time=6.62 ms 64 bytes from 10.2.0.12: icmp_seq=3 ttl=64 time=8.50 ms --- 10.2.0.12 ping statistics --- 3 packets transmitted, 3 received, 0% packet loss, time 2004ms Create your first ZeroTier networkCreate an account NOTEIt’s free, no credit card is required. Go to my.zerotier.com and create an account.Create a network Make sure you’re on the “Networks” tab of my.zerotier.com Click the Create A Network button. This creates a virtual network with a random ID and a random name. We got “fervent_smathers” and d5e04297a16fa690 here. Click anywhere on the network to go to the details page for this network. See the Network Settings panel:We don’t need to change any settings, but we can change the name of the network to personalize it. Change “fervent_smathers” to “my cool network” or whatever you like. Collapse the Settings panel. Click on the word “Settings” at the top of the panel. You don’t need to change any other settings. See the Network Members panel:It should say “No devices have joined this network”. Leave this browser tab open. We’ll look at it again later. Setup the ZeroTier appDownload and install ZeroTierFor mobile devices, use the app store. Go to zerotier.com/download in a different tab of your browser. Run the installer The ZeroTier client should now running on your device. Join your first ZeroTier netwrokWe need to tell the client to “join” the virtual network we just created. Copy the Network ID of the network from my.zerotier.com This is the long number that looks like like: d5e04297a16fa690 Paste the Network ID into the “join” command on your deviceOn macOS and Windows, there is a menubar/tray app. Select “join” from the menu. NOTEEvery running instance of ZeroTier has a unique address. It’s the 10 digit “Address” in the app, or zerotier-cli info command.ZeroTier addresses are a very secure method of unique identification. Authorize your device on your networkAt this point, your client should say “Access Denied.” A device can’t talk on your network unless you allow it, even if someone discovers the network’s ID. Authorize your device Go to the Members panel that we left open on my.zerotier.com Your node that just “joined” should appear here. The “Address” should match the address in your client. Click the “Auth?” check box for it. Give it a name. Type something like “laptop” or “bob” into the (short name) input. Confirm authorizationBack on your computer, your client should now say “OK” instead of “ACCESS DENIED” and it should show your custom “my cool network” name.Now you have 1 member on your network. A network with 1 member can’t do much. Repeat with another deviceWe need to have 2 devices connected to the same ZeroTier network. Repeat the join and authorize steps with your second device. Test connectivityNow you have two authorized nodes on your network. They should be able to talk over ZeroTier.Your Network Members section should look something like this:The “Managed IPs” will be different on your network.We’re going to test with ping. It’s the only program that we can think of that exists by default on every operating system.This is a command line program, but don’t worry: You can do it. Gotcha: Windows blocks pingWindows by default doesn’t respond to pings. If you try to ping a Windows computer from a different computer, it won’t work. You can enable ping.ZeroTier automatically enables ping on your ZeroTier network adapter now. You can probably skip this step! How to enable ping on Windows Search for Windows Firewall in the Start Menu, and click to open it. Click Advanced Settings on the left. From the left pane of the resulting window, click Inbound Rules. In the right pane, find the rules titled File and Printer Sharing (Echo Request - ICMPv4-In). Right-click each rule and choose Enable Rule.Here is a tutorial by Microsoft Open the command line Open the command line on your computer macOS Use Spotlight (cmd-space) to search for Terminal Apple’s Instructions Windows Search for “powershell” and open it Microsoft’s Instructions Linux It’s different on every flavor of Linux. You’ll have to search duckduckgo for “open terminal ubuntu” or similar. MobileMobile operating systems don’t have a command line. You can download a “ping” app from your app store if you want.Or ping your phone from your desktop computer.Try switching your phone from wifi to cell and back. It may take about a minute, but ZeroTier should automatically keep the connection working. Find the ZeroTier IP Addresses of your devices Try the ping commandBack in the Command Line / Terminal that you just opened:type ping -c 5 $ZEROTIER_IP_ADDRESS &lt;enter&gt; into your command line.A successful ping: % ping -c 5 172.22.217.93 PING 172.22.217.93 (172.22.217.93): 56 data bytes 64 bytes from 172.22.217.93: icmp_seq=0 ttl=64 time=22.362 ms 64 bytes from 172.22.217.93: icmp_seq=1 ttl=64 time=10.157 ms 64 bytes from 172.22.217.93: icmp_seq=2 ttl=64 time=9.414 ms 64 bytes from 172.22.217.93: icmp_seq=3 ttl=64 time=9.019 ms 64 bytes from 172.22.217.93: icmp_seq=4 ttl=64 time=9.180 ms --- 172.22.217.93 ping statistics --- 5 packets transmitted, 5 packets received, 0.0% packet loss round-trip min/avg/max/stddev = 9.019/12.026/22.362/5.182 ms Try it with both ZeroTier Managed addresses on your network.One of them is the same device you’re on, so you’re pinging yourself. Pinging the other device might be a little more interesting. INFOIf something goes wrong you might see something like: % ping -c 5 172.22.217.92 PING 172.22.217.92 (172.22.217.92): 56 data bytes Request timeout for icmp_seq 0 Request timeout for icmp_seq 1 Request timeout for icmp_seq 2 Request timeout for icmp_seq 3 --- 172.22.217.92 ping statistics --- 5 packets transmitted, 0 packets received, 100.0% packet loss or ping -c 5 192.168.123.234 PING 192.168.123.234 (192.168.123.234): 56 data bytes 92 bytes from 192.168.82.1: Destination Port Unreachable Vr HL TOS Len ID Flg off TTL Pro cks Src Dst 4 5 00 5400 56e7 0 0000 3f 01 d4ad 192.168.82.217 192.168.123.234 There may just be a typo in the IP address. Double check that your device is authorized at my.zerotier.comContact us on the discussion forum and see the troubleshooting section if you get stuck. Conclusionping doesn’t accomplish anything, but it does tell us ZeroTier is working. It’s useful to know about for troubleshooting networks, not just ZeroTier networks.Visit the discussion forum to talk about your use-cases or if you get stuck. Now, use ZeroTier to do something you want to doSome popular uses Windows Remote Desktop ssh (try mosh) Private Gaming LAN Access the web interfaces of your home lab Build your own VPN Route to a remote subnet Route to a Docker network Add dns to your network Join multiple networksA node can join many networks at once. Make sure they don’t use the same subnet!You can have a home network, a friends network, and a work network, for example.They don’t all need to be networks that you’ve created. You can join other people’s networks. Check out the WhitepaperFor more info on the cryptography and protocol, see the: Design Whitepaper Central FAQCan I move or transfer my network(s) to another user?When you join an Organization, all of your networks are transferred to the Organization.Other than that, there is no way to transfer individual networks between accounts. To change your Organization OwnerWhat you can do is change the email address of your account to a different address. From the account page, select “Manage Account” then “Personal Info”. From there you can change the email address. After changing, please log out and log back in.Note: This email address must not already have a ZeroTier Central account.Many users prefer to use something like “billing” or “admin” @example.com for their organization owner email account and then invite alice@example.com and bob@example.com as network admins. TIPYou can avoid this process by using a shared email address or distribution list (example: zerotier@example.com) instead of a personal address for the account that manages your organization. Can I make my subnet bigger?Yes. Your network’s existing members will keep their existing IPs. Create a new, larger Managed Route. Delete the old, smaller Managed Route. Change IPv4 Auto-Assign from Easy to Advanced Delete the existing range Add the new, bigger range For example, if your network was on the Easy Mode 192.168.195.* (/24) Change the managed route to 192.168.194.0/23 Change the auto assign range to: 192.168.194.1 to 192.168.195.254 If you change to a completely different, non-overlapping subnet, your network’s members will get new IPs in the new range, and keep their old IPs. You will have to delete the old IPs from each member if you don’t like to see them in the list.For example, if you change from 192.168.195.* to 10.244.*.*, then the member nodes will have IPs in both ranges, like: 192.16.195.1 and 10.244.1.1IPs don’t actually get applied on the operating system unless the network has a matching managed route. How are nodes counted against my subscription?If the same node is a member of multiple networks, it is counted only once.Only authorized nodes are counted. You don’t need to hide or delete nodes for billing purposes. De-authorized nodes aren’t counted. SSO/OIDCZeroTier Central configuration NOTESSO is currently only supported on desktop operating systems such as macOS and Windows. Support for iOS and Android, and better support for authenticating via the command line is still to come. Update clients Download and install ZeroTier 1.10.3 or greater on clients that will use SSO.https://www.zerotier.com/download/ Configure SSO in ZeroTier CentralVisit https://my.zerotier.com/account and complete the SSO configuration toward the bottom of the page. You will need your sso provider’s Issuer URL as well as a Client ID.You can configure multiple OIDC clients for your organization, but only one may be used at a time on an individual network. Configure SSO on individual networksIf you enable this on an existing network, you may accidentally block existing users. Please practice on a test network.There are three login modes for SSO enabled networks: Standard - If the user can successfully authenticate to your OIDC provider, they will be allowed access to the ZeroTier network Email Based Access - The user is allowed to access the network if and only if their email address is in the email list provided by the network administrator. Group/Role Based Access - The user is allowed to access the network if and only if they are assigned one of the proper roles by the OIDC server.Exclude specific devices from SSO requirementsThis is useful for routers, servers, embedded devices, etc… You can do this from the wrench icon in the Members list.SSO provider configuration SSO Provider must support PKCE Requires the following scopes: openid profile email offline_access Configure the callback URL to http://localhost:9993/sso Provider Specific Configuration NotesAuth0Please ensure the following fields are set on your Auth0 application config: Application Type: Native Token Endpoint Authentication Method: None Allowed Callback URL: http://localhost:9993/sso Under Advanced Settings -&gt; Grant Types, ensure Authorization Code, and Refresh Token are selected. NOTEThe OIDC spec is picky about the Issuer URL you enter. It must match what the server configuration metadata endpoint returns.In the case of Auth0 specifically, Your Issuer URL MUST end with a /. For example, in Auth0’s application configuration, show’s just the fully qualified domain name. What must be entered in the Issuer field in ZeroTier Central is: https://your-domain-id.auth0.com/ AutheliaAuthelia is a self hosted SSO solution. ZeroTier uses PKCE, so the field secret must be an empty string and public must be true. NOTEUse of Authelia requires ZeroTierOne version 1.10.1 or greater. There is an incompatibility between the two in the 1.10.0 release. Example client configuration: clients: ## The ID is the OpenID Connect ClientID which is used to link an application to a configuration. - id: authelia-sso-client ## The description to show to users when they end up on the consent screen. Defaults to the ID above. description: zerotier ## The client secret is a shared secret between Authelia and the consumer of this client. secret: &quot;&quot; ## Sector Identifiers are occasionally used to generate pairwise subject identifiers. In most cases this is not ## necessary. Read the documentation for more information. ## The subject identifier must be the host component of a URL, which is a domain name with an optional port. # sector_identifier: example.com ## Sets the client to public. This should typically not be set, please see the documentation for usage. public: true ## The policy to require for this client; one_factor or two_factor. authorization_policy: one_factor ## By default users cannot remember pre-configured consents. Setting this value to a period of time using a ## duration notation will enable users to remember consent for this client. The time configured is the amount ## of time the pre-configured consent is valid for granting new authorizations to the user. # pre_configured_consent_duration: ## Audience this client is allowed to request. audience: [ &quot;authelia-test-client&quot; ] ## Scopes this client is allowed to request. scopes: - openid - groups - email - profile - offline_access ## Redirect URI&#39;s specifies a list of valid case-sensitive callbacks for this client. redirect_uris: - http://localhost:9993/sso ## Grant Types configures which grants this client can obtain. ## It&#39;s not recommended to define this unless you know what you&#39;re doing. grant_types: - refresh_token - authorization_code ## Response Types configures which responses this client can be sent. ## It&#39;s not recommended to define this unless you know what you&#39;re doing. response_types: - code - id_token ## Response Modes configures which response modes this client supports. response_modes: - form_post - query - fragment ## The algorithm used to sign userinfo endpoint responses for this client, either none or RS256. userinfo_signing_algorithm: none Azure ADNavigate to your directory in the Azure portal, and select “App Registrations” in the Manage column.Click “New Registration”Set the Name of the application. e.g. “ZeroTier Central SSO”Under Redirect URI:Platform: Public client/native (mobile &amp; desktop)Set the Redirect URI to http://localhost:9993/ssoDo not use a trailing / when you enter the “issuer” url in Central. Google WorkspaceGoogle OAuth2/OIDC is not supported as Google does not support PKCE clients at this time. You can, however, use Keycloak as a SAML Identity Broker with Google Workspace. KeycloakLog into your Keycloak administration console, go to the Client configuration and create a new client. Configuration is fairly straightforward, with the following requirements: Client Protocol: openid-connect Access Type: public Standard Flow Enabled: ON Root URL: https://my.zerotier.com Valid Redirect URLS https://my.zerotier.com/* http://localhost/sso Admin URL: https://my.zerotier.com Web Origins: *See here for full documentation for configuring OpenID Connect clients with Keycloak.Keycloak as a SAML Identity BrokerIf you have a SAML provider, but not an OpenID Connect provider, Keycloak can also be used to bridge the gap. On your keycloak Admin page, go to Identity Providers. From the dropdown, select SAML v2.0 and create the connection to your SAML provider. Combined with the general Keycloak OIDC client settings above, you now have an OIDC server that authenticates against your SAML provider.Okta Application Type: Native Token Endpoint Authentication Method: None Allowed Callback URL: http://localhost:9993/sso Under Advanced Settings -&gt; Grant Types, ensure Implicit, Authorization Code, and Refresh Token are selected. OneLogin NOTEOneLogin requires ZeroTier One v1.10.3+ Log in to your OneLogin admin console. Select “Custom Connectors” from the “Applications” menu. Hit the “New Connector” button. Name your connector, set Sign on method to OpenID Connect, and set the Redirect URI to https://localhost:9993/sso. Finally, back on the on Custom Connectors page, hit the “Add App to Connector” link. Adjust the description &amp; logo settings as you see fit, and then save.Once the above steps are complete, go to the SSO tab for your new OneLogin Application. Set “Application Type” to “Native”, and “Token Endpoint” to “None (PKCE)”. You’ll also find the required Client ID and Issuer URLs to enter into https://my.zerotier.com/account. Customizing the Final SSO Flow PageIf you wish, you can customize the final view of the sso login process. Create the file $ZEROTIER_HOME/sso-auth.template.html.Note: Any CSS or images must be hosted externally, or placed within the single HTML page itself.You may customize the page to look however you wish. At this time there are only two template values set by zerotier: networkId messageTextTemplates must be valid HTML, and the template values must be placed inside &#123;&#123; ... &#125;&#125; blocks like so:&#123;&#123; networkId &#125;&#125; &#123;&#123; messageText &#125;&#125; You may react to errors via the isError variable:&#123;% if isError %&#125; &#123;&#123; messageText &#125;&#125; &#123;% else %&#125; &#123;&#123; messageText &#125;&#125; &#123;% endif %&#125; Email Based Network AccessWith Email based network access, a network administrator can limit access to the network to only users whose email addresses are present in the list specified by the network administrator.Role Based Network AccessConfiguring Role Based Access controls is different across all of the different OIDC providers available. We’ll give examples for many of the large ones.Role/group names are up to the network administrator. Simply add one or more role name to your network configuration, and users will be required to have at least one of those roles assigned in order to access the network.Auth0Auth0 requires multiple steps to configure.Step 1: Create a Role and Assign UsersLog into your auth0.com management console. Go to User Management and select roles. Hit the + Create Role button in the upper right corner. Give your new role a name &amp; description of your choosing.Once the new role is created, go to the Users tab. There you will be able to add the users you wish to have access to the role.Step 2: Attach Roles to ID and Access TokensIn order for ZeroTier to be able to read the roles a user has been assigned, they must be added to the ID and Access tokens, and mapped to the correct name. In the Auth0.com dashboard, go to Actions, and select Flows. Click the Login flow. On the right side of the screen, hit the + next to Add Action and select Build Custom. Give the action a name such as “Attach ZeroTier Roles” with Trigger set to “Login/Post Login” and Runtime set to “Node 16” (or whatever the latest default is).Next you will get a screen with a code editor. Delete everything in the buffer and add the following:exports.onExecutePostLogin = async (event, api) =&gt; &#123; const namespace = &quot;https://my.zerotier.com&quot;; if (event.authorization) &#123; api.idToken.setCustomClaim(`$&#123;namespace&#125;/roles`, event.authorization.roles); api.accessToken.setCustomClaim(`$&#123;namespace&#125;/roles`, event.authorization.roles); &#125; &#125; NOTEAuth0 requires roles to be in a namespaced name. To properly integrate with ZeroTier Central, the final claim name set on the token via the script above must be https://my.zerotier.com/roles. Please enter the login script exactly as shown above to reduce the chances of errors. Once it is entered, hit Deploy on the upper right hand side of the screen.Hit the &lt;- Back to flow link, which will take you back to the Login Flow graph. Under Add Action, select Custom. You’ll find your new action listed there. Drag it between Start and Complete in the login flow and click Apply. When finished, your flow will look something like this:Your users’ assigned roles will now be attached to the tokens required to authorize a user on your ZeroTier networks. Azure ADhttps://learn.microsoft.com/en-us/azure/active-directory/develop/howto-add-app-roles-in-azure-ad-apps Step 1: Create an App RoleIn the Azure portal, go to Azure Active Directory and select App Registrations. Select the app you’ve created for integration with ZeroTier Central. In the Manage menu, select App Roles, and then create a new app role and hit ApplyThe Value field is what you use as the role name in the network configuration on https://my.zerotier.com Step 2: Assign App RoleGo back to Azure Active Directory in the Azure portal. Select Enterprise Applications from the list of options on the side of the screen. Select the app to be used for ZeroTier Central integration.Select Users and Groups from the Manage menu. Select all of the users you want to assign the App Role and select Edit Assignment. Click on the area of the screen that says “Select a Role”, then find your newly created app role from step 1, click it and hit the Select button. OktaOkta doesn’t have the concept of Roles, but it does have Groups that can be used for the same purpose when authenticating to a ZeroTier network. NOTEOkta role/group based access requires ZeroTier One version 1.10.3+ Step 1: Create a Group and Assign UsersFrom your Okta administrator dashboard, go to Directory and select Groups. Create a group with the name of your choice. Once created, assign people to the group that you want to have access to your ZeroTier network. Step 2: Attach Groups to TokensIn the Okta administrator dashboard, go to Applications and open the configuration for the Okta Application you’ve configured for use with ZeroTier. Click the ‘Edit’ button in the “OpenID Connect ID Token” box. Set “Group claim type” to “Filter”, and set the three fields for “Group claim filter” to roles, Matches regex, and .*.It is possible to limit the groups to only certain groups. See Okta’s group filter documentation for more information. OneLogin by OneIdentityComing Soon Add new SSO SeatsIf you are already on the Pro plan, to increase your Node, Admin, or SSO entitlements:Go to the Account pageClick Modify PlanYou will see your current subscription levelAdjust the levels to your new needsClick checkoutThe system will figure out any needed credits or proration.Click Update Subscription to finish to accept the changesThis will charge your card if needed and update your account to the new subscription levels. Authentication, Login, and Email issuesNot receiving emails from us?If you are not receiving password reset emails, first check your Spam/Junk Mail folder.If it’s not in your Spam/Junk Mail folder, contact your email administrator to ensure emails from my@zerotier.com are not being blocked at the server level. Changing Your Email AddressLog into ZeroTier Central at https://my.zerotier.com. Once logged in, there’s a “Manage Account” link on the Account page. Click that and then “Personal Info” and you’ll be taken to a form where you can change your email address. Invalid Authenticator CodeThis can be caused by the time being wrong on your computer or phone. Lost Authenticator CodeUse the Password Reset flow. Click “forgot password” on the login screen. HISTORYIf you have not logged in to your account since 2019, accounts were migrated to a new system in 2019. Your networks are still there!Please try to create an account with the same email address you used before. OrganizationsYou’ve subscribed to my.zerotier.com and want your coworkers to also have the benefits of a Pro account.Add them to your Organization by going to my.zerotier.com/accountCreate an invite by typing in an email addressWe will email them the link. You can also paste it into your company chat.Once they accept the invite, they can be added as Admins to individual networks.The invited User will see: Removing Admins from the OrganizationYou can click the “remove” button next to their name in the list of admins. They will lose Admin access to the organizations networks. Change the Organization ownerThere is currently no straight-forward way to do this, and ZeroTier support can’t change your organization owner via email/ticket because that would be insecure.The secure way to do this is to change the login of the organization owner: Go to https://my.zerotier.com/account click Manage Account Click Personal Info Change the email address to the new organization owner’s email Log out and back in You may want to change the password as well Consider using a general email address like “billing@example.com“ or “zerotier@example.com“ when you sign up, or when you change org owners. Can I move or transfer my network(s) to another user?The only process that moves networks is joining an organization. When you join, the organization absorbs all your existing networks.If your networks are small; It may be faster to start a new account and new networks. Add Network AdminProfessional subscriptions have a shared administration feature.Toward the bottom of a Network’s page. There is a section titled “Administrators”A user must be a member of your Organization to become a Network Administrator. PermissionsYou can allow another my.zerotier.com user permission to Read. They can look at the network but not change anything Authorize. Allow them to Authorize new members, but not make other changes. Modify. Allow them to change any settings on this Network. Delete. Allow them to delete the network.Pricing INFOSee our pricing page for current plans. Do my networks still work properly if I’m out of compliance?Yes, everything works fine for the old network members you’ve set up. Many people use ZeroTier for critical infrastructure and we make it our highest priority to ensure your service isn’t interrupted in relation to the new pricing plan. Our enforcement just blocks your ability to add new members to your network until you’re in compliance with the new plan. HISTORYOn Thursday, 9 June 2022 we updated our product plans and the Free Basic plan has changed. Here are some things to know:We have changed the number of nodes available on the Free Basic plan from 50 to 25.We have also changed how we count them. We now count total nodes authorized across all the networks you have, not individual members on networks, so while the free limit is now 25, these nodes can now be authorized on multiple networks. Networks are free. For some users with multiple networks, this may amount to a limit increase.If you are over the limit, your networks and the nodes already authorized on them will still work, but you will need to purchase node packs to add new nodes.Node packs are only $5.00/month for packs of 25 nodes. You can purchase them on your account page in ZeroTier Central.For more information about the pricing plan, please read: https://www.zerotier.com/2022/06/09/zerotier-business-sso-is-here-and-so-is-our-new-pricing/ Invoices, Billing, Unsubscribe Go to your account page Click Manage BillingIt will take you to this page where you can update information and download invoices:I don’t see a “Manage Billing” buttonOnly the Organization Owner can edit billing info. The account page will show who your Organization Owner is, if it is not you.If the address is incorrect on your invoicePlease use the Update Information link. If possible, use Address Line 1 for your company name. And Line 2 for your address. If it doesn’t fit please contact us.After changing the address, use the download invoice link. If too much time has passed since the invoice was finalized, it won’t be updated. Sorry.My invoices don’t show my Tax IDZeroTier’s US Tax ID is 47-3126707. We aren’t incorporated outside of the US so we don’t have a Tax ID for anywhere outside of the US. Our payment processor will not print your Tax ID on invoices for this reason.If you need a Tax ID in order to purchase ZeroTier, consider reaching out to a local MSP to buy ZeroTier through them.How to delete your whole accountGo to your account page and click on the “delete account” button.This deletes everything about your account, in accordance with various privacy laws. Hide or Delete NodesThere are delete and hide buttons on the right side of the list nodes in the Members section of a ZeroTier network. Hiding a MemberThe member will be de-authorized and hidden from view in the list.Hidden members can be revealed by setting the “Hidden” checkbox above the member’s list. Deleting a MemberThe member will be de-authorized and completely removed from the list. It’s a little more permanent than hiding. Recover a Deleted MemberYou’ve deleted a member from your network, possibly by accident, and you want to get it back: Go to the Settings section of the network Find the Manually Add Member section Paste in the Node IDIf you’ve lost your Node ID, it can be viewed on the device in the ZeroTier app.Delete should only be used if the node will never join again. Just de-authorize them instead if you don’t want them counted against your node limits.If you don’t see the Delete and Hide Buttons, you have likely turned off your network’s access control by setting it to Public.Public networks have no access control. If you deleted or de-authorized a member it would reappear within a few seconds.Set your network to back to Private.Web HooksSubscribers can receive notifications of changes to their networks, network members, and organizations on my.zerotier.com via Web Hooks.Configuring Web HooksGo to the Account page. Under Your Organization there is a section called Webhooks.Enter the URL your HTTP(S) endpoint that will receive the webhook and (optionally) enter a description, then select the event types you wish to receive on the webhook.See github.com/zerotier/ztchooks for example code for receiving &amp; processing webhooks.All hooks fired will contain the following three fields:&#123; &quot;hookd_id&quot;: ..., &quot;org_id&quot;: ..., &quot;hook_type&quot;: ..., &#125; The rest of the fields vary by hook_type. Full definitions of all of the fields can be found here.Hook Types Network Join (NETWORK_JOIN) - Fired when a new member is requesting to join a network. NOTE: This is only fired once when the network controller first receives the join request from the network member. Network Auth (NETWORK_AUTH) - Fired when an administrator authorizes a new member to a network. Network Deauth (NETWORK_DEAUTH) - Fired when an administrator revokes authorization from a network. Network Created (NETWORK_CREATED) - Fired when an administrator creates a new network. Network Deleted (NETWORK_DELETED) - Fired when an administrator deletes a network. Network Configuration Change (NETWORK_CONFIG_CHANGED) - Fired when an administrator changes the configuration of a network. Network SSO Login (NETWORK_SSO_LOGIN) - Fired when a user is authorized/reauthorized to a network via SSO. Network SSO Login Error (NETWORK_SSO_LOGIN_ERROR) - Fired when there is an error authorizing/reauthorizing to a network via SSO. Member Configuration Change (MEMBER_CONFIG_CHANGED) - Fired when an administrator makes a configuration change to a network member. Member Deleted (MEMBER_DELETED) - Fired when an administrator deletes a network member. Organization Invite Sent (ORG_INVITE_SENT) - Fired when the account owner invites an administrator to the network. Organization Invite Accepted (ORG_INVITE_ACCEPTED) - Fired when the invitee accepts and joins the organization. Organization Invite Rejected (ORG_INVITE_REJECTED) - Fired when the invitee rejects the invitation. Organization Member Removed (ORG_MEMBER_REMOVED) - Fired when the account owner removes a member from the organization.RetriesIf a hook fails to be sent for any reason, it will be retried up to a maximum of 10 times with an exponential backoff policy. The 2nd attempt will be approximately 1 minute after the first. The third approximately 2 minutes after the 2nd, and so on to a maximum of 1 hour between attempts. If there is still a failure after 10 attempts, the call will be abandoned.Web Hook SecurityIn order enhance security, and to prevent replay attacks, we have implemented a hook signing algorithm so you can verify each hook request as you receive it. We have also provided a Go Library and a TypeScript Library for your use in verifying incoming webhooks.First you must create a Webhook Signing Secret from your account page.The secret is a hexadecimal string. You will need a copy in order to verify webhooks. The signature will be placed in the HTTP header X-ZTC-Signature.Go Example```import ( “net/http” “github.com/zerotier/ztchooks”) const PSK = ““ func hookCatcher(res http.ResponseWriter, req *http.Request) { body, err := io.ReadAll(req.Body) if err != nil { panic(err) } signature := req.Header.Get(&quot;X-ZTC-Signature&quot;) if err := ztchooks.VerifyHookSignature(PSK, signature, body, ztchooks.DefaultTolerance); err != nil &#123; // signature verification failed res.WriteHeader(http.StatusInternalServerError) w.Write([]byte(&quot;500 - Signature Verification Failed&quot;)) return &#125; // Signature verification succeded } func main() { http.HandleFunc(“/“, hookCatcher) http.ListenAndServe(“:9999”, nil)} NOTE: A more complete example of verification &amp; processing hooks can be found [here](https://github.com/zerotier/ztchooks/blob/main/example/hook-catcher.go). It is possible to have multiple signing secrets. Hooks will be signed with all secrets, and the verification method provided by the `ztchooks` library does take this into account automatically. # Guides ## Docker Simple example using an interactive shell. ZeroTier One makes ZeroTier virtual networks available as &#39;tap&#39; virtual network ports. To do this inside a Docker container requires a few elevated permissions and access to the `/dev/net/tun` device. Fortunately this is easy: docker run -it —rm \\—cap-add=NET_ADMIN \\—cap-add=SYS_ADMIN \\—device=/dev/net/tun centos:7 [… command …] Where `[... command ...]` is an optional command, in the example below we&#39;ll provide `/bin/bash` to get an interactive shell. &gt; **INFO** &gt; `SYS_ADMIN` is needed because `NET_ADMIN` does not include the `ioctl()` required to put `/dev/net/tun` in tap mode. This appears to be a bug in Linux&#39;s capability model but it would have to be fixed upstream. Here&#39;s a transcript of an example session where we start a command prompt in a test container, install ZeroTier, start it (must be done manually here because the container does not run init or systemd), join a test network, and ping something. Starting a container with an interactive shell: ```bash docker run -it --rm \\ --cap-add=NET_ADMIN \\ --cap-add=SYS_ADMIN \\ --device=/dev/net/tun centos:7 /bin/bash Then, while inside the container we install ZeroTier: [root@5b88595860bc /]# curl https://install.zerotier.com/ | bash % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 12243 100 12243 0 0 18523 0 --:--:-- --:--:-- --:--:-- 18550 *** ZeroTier One Quick Install for Unix-like Systems *** Supported targets for this script: *** macOS (10.7+) on x86_64 (just installs ZeroTier One.pkg) *** Linux / Debian (wheezy or newer) on i386, x86_64, and armhf (Raspbian/jessie only) *** Linux / Ubuntu (trusty or newer) on i386 and x86_64 *** Linux / SuSE (12+) on i386 and x86_64 *** Linux / CentOS (6+) on i386 and x86_64 *** Linux / Fedora (22+) on i386 and x86_64 *** Linux / Amazon (2016.03+) on x86_64 *** Please report problems to contact@zerotier.com and we will try to fix ASAP! *** Detecting Linux Distribution *** Found RHEL/CentOS, creating /etc/yum.repos.d/zerotier.repo *** Installing zerotier-one package... [ ... snipped a bunch of yum install output ...] *** Enabling and starting zerotier-one service... Created symlink from /etc/systemd/system/multi-user.target.wants/zerotier-one.service to /usr/lib/systemd/system/zerotier-one.service. Failed to get D-Bus connection: Operation not permitted *** Package installed but cannot start service! You may be in a Docker *** container or using a non-standard init service. Start ZeroTier and join a network: [root@5b88595860bc /]# /usr/sbin/zerotier-one -d [root@5b88595860bc /]# /usr/sbin/zerotier-cli join 8056c2e21c000001 200 join OK [root@5b88595860bc /]# /usr/sbin/zerotier-cli listnetworks 200 listnetworks 200 listnetworks 8056c2e21c000001 - 02:e6:10:ab:69:33 REQUESTING_CONFIGURATION PRIVATE zt0 - [root@5b88595860bc /]# /usr/sbin/zerotier-cli listnetworks 200 listnetworks 200 listnetworks 8056c2e21c000001 earth.zerotier.net 02:e6:10:ab:69:33 OK PUBLIC zt0 fd80:56c2:e21c:0000:0199:93e6:10b7:8bf1/88,28.183.140.10/7 Try pinging something: [root@5b88595860bc /]# ping &lt;some_other_zerotier_nodes_ip&gt; Exit [root@5b88595860bc /]# exit DNS BETAThis feature is still in beta. This will soon be integrated into ZeroTier 2.0, but for now, it is segregated to allow us to iterate quickly. Conceptual Prerequisites When ZeroTier joins a network, it creates a virtual network interface. When ZeroTier joins multiple networks, there will be multiple network interfaces. When ZeroNSD starts, it binds to a ZeroTier network interface. When ZeroTier is joined to multiple networks, it needs multiple ZeroNSDs, one for each interface. This means: ZeroNSD will be accessible from the node it is running on. ZeroNSD will be accessible from other nodes on the ZeroTier network. ZeroNSD will be isolated from other networks the node might be on. Technical PrerequisitesThis Quickstart was written using two machines - one Ubuntu virtual machine on Digital Ocean, and one macOS laptop on a residential ISP. To follow along step by step, you’ll need to provision equivalent infrastructure. If you use different platforms, you should be able to figure out what to do with minimal effort. Create a ZeroTier NetworkYou may do this manually through the ZeroTier Central WebUI, Install ZeroTierZeroTier must be installed and joined to the network you intend to provide DNS service to. The following should work from the CLI on most platforms. Windows users may download the MSI from the ZeroTier Downloads page. For the remainder of this document, please replace the example network af78bf94364e2035 with a network ID your own. notroot@ubuntu:~$ curl -s https://install.zerotier.com | sudo bash notroot@ubuntu:~$ sudo zerotier-cli join af78bf94364e2035 notroot@ubuntu:~$ sudo zerotier-cli set af78bf94364e2035 allowDNS=1 Authorize the NodesAuthorize the node to the network by clicking the “Auth” button in the Members section in the ZeroTier Central WebUI.First, create a Central API token.Next, you will need to stash this in a file for ZeroNSD to read. sudo bash -c &quot;echo ZEROTIER_CENTRAL_TOKEN &gt; /var/lib/zerotier-one/token&quot; sudo chown zerotier-one:zerotier-one /var/lib/zerotier-one/token sudo chmod 600 /var/lib/zerotier-one/token ZeroTier Systemd Managerzerotier-systemd-manager publishes rpm and deb packages available at https://github.com/zerotier/zerotier-systemd-manager/releases wget https://github.com/zerotier/zerotier-systemd-manager/releases/download/v0.1.9/zerotier-systemd-manager_0.1.9_linux_amd64.deb sudo dpkg -i zerotier-systemd-manager_0.1.9_linux_amd64.deb Finally, restart all the ZeroTier services. sudo systemctl daemon-reload sudo systemctl restart zerotier-one sudo systemctl enable zerotier-systemd-manager.timer sudo systemctl start zerotier-systemd-manager.timer Install ZeroNSDZeroNSD should only run on one node per network. Latency for DNS really matters, so try to place it as close to the clients as possible. PackagesZeroNSD publishes rpm, deb, and msi packages, available here.The latest release is not reflected below. Go to the link above to get a link! wget https://github.com/zerotier/zeronsd/releases/download/v0.1.7/zeronsd_0.1.7_amd64.deb sudo dpkg -i zeronsd_0.1.7_amd64.deb CargoIf we don’t have packages for your platform, you can still install it with cargo. sudo /usr/bin/apt-get -y install net-tools librust-openssl-dev pkg-config cargo sudo /usr/bin/cargo install zeronsd --root /usr/local Serve DNSFor each network you want to serve DNS to, do the following (replace af78bf94364e2035 with your network ID) sudo zeronsd supervise -t /var/lib/zerotier-one/token -w -d beyond.corp af78bf94364e2035 sudo systemctl start zeronsd-af78bf94364e2035 sudo systemctl enable zeronsd-af78bf94364e2035 Verify functionalityYou should be able to ping the laptop via it’s DNS name (or any preceding subdomain, since we’ve set the wildcard flag) notroot@ubuntu:~$ ping laptop.beyond.corp PING laptop.beyond.corp (172.22.192.177) 56(84) bytes of data. 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=1 ttl=64 time=50.1 ms 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=2 ttl=64 time=49.5 ms 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=3 ttl=64 time=48.6 ms or notroot@ubuntu:~$ ping laptop.beyond.corp PING travel.laptop.beyond.corp (172.22.192.177) 56(84) bytes of data. 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=1 ttl=64 time=50.1 ms 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=2 ttl=64 time=49.5 ms 64 bytes from 172.22.192.177 (172.22.192.177): icmp_seq=3 ttl=64 time=48.6 ms Update flag settingsIn order to change the settings (such as the TLD), do the following (replace af78bf94364e2035 with your network ID) sudo zeronsd supervise -t /var/lib/zerotier-one/token -w -d beyond.corp af78bf94364e2035 sudo systemctl daemon-reload sudo systemctl enable zeronsd-af78bf94364e2035 Most Linux distributions, by default, do not have per-interface DNS resolution out of the box. To test DNS queries against ZeroNSD without zerotier-systemd-manager, find the IP address that ZeroNSD has bound itself to, and run queries against it explicitly. sudo lsof -i -n | grep ^zeronsd | grep UDP | awk &#39;&#123; print $9 &#125;&#39; | cut -f1 -d: 172.22.245.70 Query the DNS server directly with the dig commandThe Ubuntu machine can be queried with: dig +short @172.22.245.70 zt-3513e8b98d.beyond.corp 172.22.245.70 dig +short @172.22.245.70 server.beyond.corp 172.22.245.70 The macOS laptop can be queried with: dig +short @172.22.245.70 zt-eff05def90.beyond.corp 172.22.245.70 dig +short @172.22.245.70 laptop.beyond.corp 172.22.192.177 Add a line to /etc/hosts and query again. bash -c &#39;echo &quot;1.2.3.4 test&quot; &gt;&gt; /etc/hosts&#39; dig +short @172.22.245.70 test.beyond.corp 1.2.3.4 Query a domain on the public DNS to verify fall through dig +short @172.22.245.70 example.com 93.184.216.34 macOSmacOS uses dns-sd for DNS resolution. Unfortunately, nslookup,host, and dig are broken on macOS. ping works. user@osx:~$ ping server.beyond.corp PING server.beyond.corp (172.22.245.70): 56 data bytes 64 bytes from 172.22.245.70: icmp_seq=0 ttl=64 time=37.361 ms 64 bytes from 172.22.245.70: icmp_seq=1 ttl=64 time=38.129 ms 64 bytes from 172.22.245.70: icmp_seq=2 ttl=64 time=37.569 ms To check out the system resolver settings, use: scutil --dns.The Ubuntu machine can be queried withdns-sd -G v4 server.beyond.corp dns-sd -G v4 zt-3513e8b98d.beyond.corpThe macOS machine be queried withdns-sd -G v4 laptop.beyond.corp dns-sd -G v4 zt-eff05def90.beyond.corp WindowsAre you a Windows user? Does this work out of the box? Does nslookup behave properly? Let us know… feedback and pull requests welcome =) Serving non-ZeroTier recordsNOTE this portion of the document is largely intended for advanced users who want to get more out of zeronsd‘s service.zeronsd will also serve non-zerotier records in two situations: It will forward /etc/resolv.conf‘s nameservers on a TLD mismatch. This behavior is similar to dnsmasq, a popular DNS server on Linux.Additionally, to serve custom records you can supply the -f flag with a file in hosts format it will service records from that file under the provided TLD, merged in with the zerotier nodes. Example below.NOTE: if you followed the steps above, you will want to systemctl stop zeronsd-&lt;network id&gt;, and zeronsd unsupervise &lt;network id&gt; your network, before continuing.Make a file called hosts and put this in it: 1.1.1.1 cloudflare-dns Then, let’s start a temporary server for now. We’ll just use the start subcommand of zeronsd. This will run in the foreground, so start a new terminal or &amp; it. $ zeronsd start -t /var/lib/zerotier-one/token -f ./hosts -d beyond.corp &lt;network id&gt; Welcome to ZeroNS! Your IP is 1.2.3.4 Finally, we can lookup cloudflare-dns.beyond.corp to find CloudFlare’s DNS server really really fast! $ host cloudflare-dns.beyond.corp 1.2.3.4 cloudflare-dns.beyond.corp has address 1.1.1.1 TIPSee community threads about DNS VPN Exit NodeRoute all your Internet traffic through a ZeroTier node. IN THIS TUTORIAL Create a ZeroTier Network Set up an exit node that handles all your internet traffic Join the exit node and a personal node to your ZeroTier network Tell your personal node to use your exit node ZeroTier creates imaginary LANs. Default route override means that computers on your imaginary LAN will be routing Internet traffic through it. Just like a real LAN, your imaginary LAN is going to now need a gateway. Setup here is almost identical to what you’d do to configure a NAT gateway for a conventional wired LAN. First, create your exit nodeThis is the node that will handle all of your internet traffic. It can be something as small as a $5 VPS or a Raspberry Pi. If you haven’t already, go create a network and come back Install ZeroTier on it Join the exit node to your ZeroTier network:sudo zerotier-cli join &lt;nwid&gt; Enable IPv4 Forwarding on the exit nodeOn the computer acting as the VPN exit node: sudo nano /etc/sysctl.conf Add the line: /etc/sysctl.conf net.ipv4.ip_forward = 1 Tell the kernel to reload settings: sudo sysctl -p Check that settings were correctly applied: sudo sysctl net.ipv4.ip_forward If you’ve joined (and authorized!) your exit node to your network then you are ready to begin configuring it. Start by setting a few environment variables that we will use later:Get the name of your ZeroTier interface, it will start with zt: ip link show 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000 link/ether 96:00:02:8d:28:c7 brd ff:ff:ff:ff:ff:ff altname enp1s0 3: zthnhhqofq: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 2800 qdisc fq_codel state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 86:61:c6:fe:ed:dc brd ff:ff:ff:ff:ff:ff In our case it was zthnhhqofq. Let’s set the environment variable: export ZT_IF=zthnhhqofq Next, get the name of the regular WAN interface to the internet:In our case it was eth0 export WAN_IF=eth0 Enable NAT and IP masquerading: sudo iptables -t nat -A POSTROUTING -o $WAN_IF -j MASQUERADE Allow traffic forwarding: sudo iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT Allow traffic forwarding from the ZeroTier interface to the WAN interface: sudo iptables -A FORWARD -i $ZT_IF -o $WAN_IF -j ACCEPT Make iptables rules persist after reboot: sudo apt-get install iptables-persistent Save your new iptables rules: sudo netfilter-persistent save RESTARTAt this point it would be a good idea to restart your exit node and verify that the routing rules have persisted. sudo iptables-save ----------------------------------------------------------------------------------------------- ... -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT -A FORWARD -i zthnhhqofq -o eth0 -j ACCEPT ... -A POSTROUTING -o eth0 -j MASQUERADE ... Your exit node is complete, now we need to configure your network. Configure your networkNow that your exit node is set up we need to configure your ZeroTier network to advertise a Default Route so that other nodes know that the exit node can route traffic to the internet.Central &gt; Network &gt; Tell other nodes to use exit node ~/.BASHRCTry adding something like the following for simple tunnel on/off control: tunnel() &#123; sudo zerotier-cli set $nwid allowDefault=1 &#125; notunnel() &#123; sudo zerotier-cli set $nwid allowDefault=0 &#125; Cloud DeploymentsTerraform ADVANCEDFor the multi-cloud edition of this guide, click here WelcomeManaging large numbers of settings in a webUI can be a total bummer. It’d be much nicer if we could describe our ZeroTier networks and membership settings as code. That would let us keep them in version control, and integrate them into our software delivery pipelines.Now we can!Terraform allows us to talk to the ZeroTier Central API and describe our network infrastructure, as code. This tutorial will walk you though how to get started.To follow along step by step, you will need: A Github account, A ZeroTier Central account, A Terraform Cloud account. It should take you about 10 minutes to through this tutorial. It will be done in browser without touching the command line at all. Import the Quickstart repoUse Github’s Import feature to create a private copy of the ZeroTier Terraform Quickstart repo. We will hook this up to a Terraform runner on Terraform Cloud. After that, we will use Github’s in-browser editing feature to drive the tutorial. Create a Terraform workspaceNext, we create a Terraform workspace and attach it to our private Github repository. Be sure to select version control workflow, select the correct Github account, (we want the private copy, not the original), and give it a unique name. Create a Central API TokenNext, we create an API token that Terraform will use to drive the ZeroTier Central API. Navigate to Account -&gt; API Access Tokens. Add token as a Workspace Environment VariableAdd the token as an Environment Variable to our workspace. This will let the ZeroTier Terraform Provider authenticate to the API. The variable must be named ZEROTIER_CENTRAL_TOKEN. Be sure to check the Sensitive box. Hello WorldThis example is probably the simplest thing you can do with ZeroTier. It creates a single network, then joins two members. The member_id settings in the repository are made up, which is good enough to demonstrate how to drive the API with Terraform. Feel free to replace them with real Node IDs of any devices you may wish to join to the networks.In your Github repo, click on hello.tf. There will be a little “edit” icon around the section with the code. Uncomment the Terraform resources and click the green “commit changes” button. resource &quot;zerotier_network&quot; &quot;hello&quot; &#123; name = &quot;hello&quot; description = &quot;Hello World&quot; assignment_pool &#123; start = &quot;192.168.42.1&quot; end = &quot;192.168.42.254&quot; &#125; route &#123; target = &quot;192.168.42.0/24&quot; &#125; &#125; resource &quot;zerotier_member&quot; &quot;alice&quot; &#123; name = &quot;alice&quot; member_id = &quot;a11c3411ce&quot; description = &quot;Alice&#39;s laptop&quot; network_id = zerotier_network.hello.id &#125; resource &quot;zerotier_member&quot; &quot;bob&quot; &#123; name = &quot;bob&quot; member_id = &quot;b0bd0bb0bb&quot; description = &quot;Bob&#39;s laptop&quot; network_id = zerotier_network.hello.id &#125; Queue a plan then “Confirm and Apply”.After Terraform applies the plan, check out the ZeroTier Cental webUI to confirm it was created. Bridging NetworksThe next example manipulates the allow_ethernet_bridging settings on the Member objects. When running on machines with multiple physical Ethernet interfaces, ZeroTier can be configured to pass layer2 traffic such as ARP, NDP, multicast, mDNS, etc.To make this work, you’ll need to go into your router’s OS and configure a bridge between a physical interface and the ZeroTier interface.The ZeroTier Network Terraform module provides a slightly nicer interface, letting us use CIDRs for our subnets.Repeat the steps from “Hello World” with bridging.tf module &quot;bridgenet&quot; &#123; source = &quot;zerotier/network/zerotier&quot; version = &quot;1.0.0&quot; name = &quot;bridgenet&quot; description = &quot;bridging example&quot; subnets = [&quot;10.10.0.0/16&quot;] flow_rules = &quot;accept;&quot; &#125; resource &quot;zerotier_member&quot; &quot;router1&quot; &#123; name = &quot;router1&quot; member_id = &quot;71c71c71c1&quot; description = &quot;Alice&#39;s router&quot; ip_assignments = [&quot;10.10.1.1&quot;] allow_ethernet_bridging = true network_id = module.bridgenet.id &#125; resource &quot;zerotier_member&quot; &quot;router2&quot; &#123; name = &quot;router2&quot; member_id = &quot;71c71c71c2&quot; description = &quot;Bob&#39;s router&quot; ip_assignments = [&quot;10.10.2.1&quot;] allow_ethernet_bridging = true network_id = module.bridgenet.id &#125; After Terraform applies the plan, check out the ZeroTier Cental webUI to confirm it was created. Network SegmentationThe next example creates the networks, red, green, and yellow. We define two groups. The red team gets access to the red network, and the green team gets access to the green network. Red and green make yellow.Repeat the steps from “Hello World” with groups.tf variable &quot;segments&quot; &#123; default = &#123; red = &#123; description = &quot;red&quot; subnets = [&quot;10.1.0.0/16&quot;] flow_rules = &quot;accept;&quot; &#125; green = &#123; description = &quot;green&quot; subnets = [&quot;10.2.0.0/16&quot;] flow_rules = &quot;accept;&quot; &#125; yellow = &#123; description = &quot;yellow&quot; subnets = [&quot;10.3.0.0/16&quot;] flow_rules = &quot;accept;&quot; &#125; &#125; &#125; variable &quot;members&quot; &#123; default = &#123; red = &#123; eve = &#123; description = &quot;Eve&#39;s Laptop&quot; member_id = &quot;34b34b34b3&quot; &#125; steve = &#123; description = &quot;Steve&#39;s Laptop&quot; member_id = &quot;573b3573b3&quot; &#125; &#125; green = &#123; cletus = &#123; description = &quot;Cletus&#39; Laptop&quot; member_id = &quot;c133715b0b&quot; &#125; brandie = &#123; description = &quot;Brandie&#39;s Laptop&quot; member_id = &quot;b33fb33fff&quot; &#125; &#125; &#125; &#125; module &quot;segments&quot; &#123; for_each = var.segments source = &quot;zerotier/network/zerotier&quot; version = &quot;1.0.0&quot; name = each.key description = each.value.description subnets = each.value.subnets flow_rules = each.value.flow_rules &#125; resource &quot;zerotier_member&quot; &quot;red&quot; &#123; for_each = &#123; for k, v in var.members.red : (k) =&gt; v &#125; name = each.key member_id = each.value.member_id network_id = module.segments[&quot;red&quot;].id &#125; resource &quot;zerotier_member&quot; &quot;green&quot; &#123; for_each = &#123; for k, v in var.members.green : (k) =&gt; v &#125; name = each.key member_id = each.value.member_id network_id = module.segments[&quot;green&quot;].id &#125; resource &quot;zerotier_member&quot; &quot;yellow&quot; &#123; for_each = &#123; for k, v in merge(var.members.red, var.members.green) : (k) =&gt; v &#125; name = each.key member_id = each.value.member_id network_id = module.segments[&quot;yellow&quot;].id &#125; After Terraform applies the plan, check out the ZeroTier Cental webUI to confirm it was created. Many to ManyIn the last example, show how to assign many members to many networks. This example used the Terraform setproduct function to find all possible combinations of two sets. The zerotier_identity resource is a distant cousin of the Terraform tls_private_key resource. This resource would normally be used to inject secrets into cloud instances via cloudinit. We encourage you to use the Terraform Cloud to keep your Terraform state safe. Repeat the steps from “Hello World” with many2many.tf variable &quot;letters&quot; &#123; default = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;] &#125; variable &quot;shapes&quot; &#123; default = [&quot;circle&quot;, &quot;square&quot;, &quot;diamond&quot; ] &#125; resource &quot;zerotier_identity&quot; &quot;letters&quot; &#123; for_each = &#123; for i in var.letters : i =&gt; i &#125; &#125; module &quot;shapes&quot; &#123; for_each = &#123; for i, k in var.shapes : (k) =&gt; i &#125; source = &quot;zerotier/network/zerotier&quot; version = &quot;1.0.0&quot; name = each.key description = each.key subnets = [cidrsubnet(&quot;10.11.0.0/16&quot;, 8, each.value)] flow_rules = &quot;accept;&quot; &#125; resource &quot;zerotier_member&quot; &quot;shape-letters&quot; &#123; for_each = &#123; for i in setproduct(var.letters, keys(module.shapes)) : join(&quot;-&quot;, flatten(i)) =&gt; i &#125; name = each.key member_id = zerotier_identity.letters[each.value[0]].id description = module.shapes[each.value[1]].description network_id = module.shapes[each.value[1]].id &#125; After Terraform applies the plan, check out the ZeroTier Cental webUI to confirm it was created. Cleaning upWhen you’re done experimenting with ZeroTier and Terraform, tear everything down by queueing a destroy plan. That’s all folksIf you like this tutorial, check out the ZeroTier Multicloud Terraform Quickstart next!-s cloud-initSet up ZeroTier using cloud-initWhat is cloud-init?cloud-init is a convenient and cross-platform way to initialize cloud instances. It is supported by all major cloud providers. You can use it to configure OS settings, install packages, or even start up specific instances of ZeroTier. How do you use it?Typically a cloud-init file can be uploaded to a cloud provider or added as an additional payload via an API. Example#cloud-config hostname: &quot;devbox&quot; users: - name: wrankles shell: /bin/bash disable_root: 1 ssh_pwauth: 0 packages: - htop - tcpdump runcmd: - apt-get update #- mkdir -p /var/lib/zerotier-one #- echo &quot;1234567890:0:...&quot; &gt; /var/lib/zerotier-one/identity.secret #- echo &quot;1234567890:0:...&quot; &gt; /var/lib/zerotier-one/identity.public - curl -s https://install.zerotier.com | bash - zerotier-cli join cfb8bf9836c2fc3a - systemctl restart ssh Pre-populate ZeroTier identities(optional)Uncomment the runcmd lines starting with mkdir and echo if you want to write known ZeroTier identities to disk before startup. This is useful if you’ve already authorized or scripted around a specific node ID and want it to start up the same each time. CAUTIONIf you place your ZeroTier node’s secret key in your cloud init file it is possible for someone to impersonate your node if they get ahold of this cloud-init file. Password-less SSH (optional)It’s usually recommended that you disable the root account and disable password-based ssh authentication and rely solely on key-based authentication. Digital Ocean has some really great documentation on the subject.To make getting into your cloud instance as easy as possible you can add entries to authorized_keys: ssh-authorized-keys: - ssh-rsa AAAAB38fwi3756q238if75dh6awd476r3bg78f56ghfaa7fdh63qf5dq378f5632gha3875j3f498da7hfhjkfawejtfsktfr89ew4jftsjrf8t9rhg7tjser8tsre7yjgvased89rfdcsh67rewhg8tq7tsge546w4 To make getting into other instances from this instance easier, you can add a pre-generated private key to ssh_keys: ssh_deletekeys: false ssh_keys: ed25519_private: | -----BEGIN OPENSSH PRIVATE KEY----- $#HYBES$Y%GW$Gfs9g8ES$Y%GW$Gfs9g867ZDI1NTE5AAAAIHQbjzWgsNOt/8gH+QI/Eob fs9g867q34tqGT$#HYBES$mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+867q34tqGT fs9g867q34ZDI1NTE5AAAAIHQbjzWgsNOt/8gH+QI/Eob6BES$Y%$#HYBES$Y%GW$Gfs9g fs9g867q34tqGT$#HYBES$YZDI1NTE5AAAAIHQbjzWgsNOt/8gH+QI/Eob6Z/8ZXbHHdGx fs9g867mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3s9g867q4g -----END OPENSSH PRIVATE KEY----- ed25519_public: ssh-ed25519 AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpqxiX1nKhXpHAZsMciLq8V6RjsHDTYW7hdI4 devbox Read more about SSH keys here Advanced NetworkingMultipathMultipath allows the simultaneous (or conditional) aggregation of multiple physical links into a bond for increased total throughput, load balancing, redundancy, and fault tolerance. There is a set of standard bonding policies available that can be used right out of the box with no configuration. These policies are inspired by the policies offered by the Linux kernel. A bonding policy can be used easily without specifying any additional parameters. For example: Example local.conf ------------------------------------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;active-backup&quot; &#125; &#125; Standard policies active-backup: Use only one primary link at a time and failover to another designated link. broadcast: Duplicate traffic across all available links at all times. balance-rr: Stripe packets across multiple links (not for use with TCP.) balance-xor: Hash flows to specific links. balance-aware: Auto-balance flows across links. Custom policiesTo customize a bonding policy simply specify a standard policy as basePolicy and override its parameters. Note that a modified custom policy cannot have the same name as a standard policy. (Note how we renamed the following example to rapid-active-backup). For example, to create a more rapid active-backup policy that will failover 1 second after it detects a link failure: local.conf ------------------------------------------------------------------------------------ &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;rapid-active-backup&quot;, &quot;policies&quot;: &#123; &quot;rapid-active-backup&quot;: &#123; &quot;basePolicy&quot;: &quot;active-backup&quot;, &quot;failoverInterval&quot;: 1000 &#125; &#125; &#125; &#125; You can only override parameters that are valid for the chosen basePolicy. The list below shows parameters that can apply to any policy. Parameters that are unique to a given policy type are described in that policy’s section. Example policy settings (not valid JSON) ------------------------------------------------------------------------------------ &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;rapid-active-backup&quot;, &quot;policies&quot;: &#123; &quot;rapid-active-backup&quot;: &#123; &quot;basePolicy&quot;: &quot;active-backup&quot;, &quot;failoverInterval&quot;: 1000, &quot;upDelay&quot;:0-65535, &quot;downDelay&quot;:0-65535, &#125; &#125; &#125; &#125; Physical interfacesBonds are composed of multiple links (known paths over system network interfaces). By default if no interfaces are specified ZeroTier will attempt to use all network interfaces, including your expensive wireless links. In order to avoid this you should tell ZeroTier which interfaces are okay to talk on and also under what conditions. If a set of links is defined, ZeroTier will use only those links and ignore everything else. Example local.conf: To specify that ZeroTier should only use eth1 but then failover to eth2 and that it should prefer IPv4 over IPv6 except on eth2 where only IPv6 is allowed. --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;rapid-active-backup&quot;, &quot;policies&quot;: &#123; &quot;rapid-active-backup&quot;: &#123; &quot;basePolicy&quot;: &quot;active-backup&quot;, &quot;failoverInterval&quot;: 1000, &quot;links&quot;: &#123; &quot;eth0&quot;: &#123; &quot;ipvPref&quot;: 46, &quot;failoverTo&quot;: &quot;eth1&quot; &#125;, &quot;eth1&quot;: &#123; &quot;ipvPref&quot;: 46, &quot;failoverTo&quot;: &quot;eth2&quot; &#125;, &quot;eth2&quot;: &#123; &quot;ipvPref&quot;: 6 &#125; &#125; &#125; &#125; &#125; &#125; Link settingsThe behavior of links can be changed by setting various properties: Customizable link parameters (not valid JSON) ------------------------------------------------------------------------------------- ... &quot;links&quot;: &#123; &quot;eth0&quot;: /* Network interface system name */ &#123; &quot;ipvPref&quot;: [0,4,6,46,64], /* (optional) IP version preference for paths on a link. */ &quot;capacity&quot;: 0-1000000, /* (optional) Arbitrary units of link &quot;capacity&quot;. Can be used to manually allocate traffic. */ &quot;failoverTo&quot;: &quot;failoverInterfaceName&quot;, /* (optional) Which link should be used next after a failure of this link. */ &quot;mode&quot;: &quot;primary&quot;|&quot;spare&quot; /* (optional) Whether this link is used by default or only after all other links fail. */ &#125;, ... &#125; ... Spare linksA warm spare is a link that is not actively used to process traffic until all other available links are down. Note however that some ambient probing traffic is still sent to guarantee its performance. Spare links are not available when using the broadcast policy. Cold spares are left as an exercise for the reader. Example local.conf: To specify that traffic should be hashed over two links eth0 and eth1 and that expensive_lte0 should only be used when the other two are down. --------------------------------------------------------------------------------------------------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;xor-with-a-spare&quot;, &quot;policies&quot;: &#123; &quot;xor-with-a-spare&quot;: &#123; &quot;basePolicy&quot;: &quot;balance-xor&quot;, &quot;links&quot;: &#123; &quot;eth0&quot;: &#123; &quot;mode&quot;: &quot;primary&quot; &#125;, &quot;eth1&quot;: &#123; &quot;mode&quot;: &quot;primary&quot; &#125;, &quot;expensive_lte0&quot;: &#123; &quot;mode&quot;: &quot;spare&quot; &#125; &#125; &#125; &#125; &#125; &#125; Peer-specific bondsIt is possible to use a policy for one peer and another policy for a different peer. For instance, if one were to want active-backup for all peers by default but for certain peers to be bonded with a custom load-balanced bond such as my-custom-balance-xor one could do the following: Example local.conf ----------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;active-backup&quot;, &quot;policies&quot;: &#123; &quot;my-custom-balance-xor&quot;: &#123; &quot;failoverInterval&quot;: 2000, &quot;upDelay&quot;: 5000, &quot;basePolicy&quot;: &quot;balance-xor&quot; &#125; &#125;, &quot;peerSpecificBonds&quot;: &#123; &quot;f6203a2db3&quot;:&quot;my-custom-balance-xor&quot;, &quot;45b0301da2&quot;:&quot;my-custom-balance-xor&quot;, &quot;a92cb526fa&quot;:&quot;my-custom-balance-xor&quot; &#125; &#125; &#125; active-backupExample local.conf &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;active-backup&quot; &#125; &#125; Traffic is sent on only one link at any time. A different link becomes active if the current link fails. This mode provides fault tolerance with a nearly immediate failover depending on the failoverInterval you set. This mode does not increase total throughput. If no primary and spare links are defined ZeroTier will attempt to pick the best one. mode: primary|spare Link option which specifies which link is the primary device. The specified device is intended to always be the active link while it is available. There are exceptions to this behavior when using different linkSelectMethod modes. There can only be one primary link in this bonding policy. linkSelectMethod: Specifies the selection policy for the active link during failure and/or recovery events. This is similar to the Linux Kernel’s primary_reselect option but with a minor extension: optimize: (default if user provides no failover guidance) The primary link can change periodically if a superior link is detected. always: (default when links are explicitly specified): Primary link regains status as active link whenever it comes back up. better: Primary link regains status as active link when it comes back up and (if) it is better than the currently-active link. failure: Primary link regains status as active link only if the currently-active link fails.```confExample local.conf { “settings”: { “defaultBondingPolicy”: “custom-active-backup”, “custom-active-backup”: { “basePolicy”: “active-backup”, “linkSelectMethod”: “always”, “failoverInterval”: 5000, “links”: { “eth0”: { “failoverTo”: “eth1”, “mode”: “primary” }, “eth1”: { “mode”: “spare” }, “eth2”: { “mode”: “spare” }, “eth3”: { “mode”: “spare” } } } }} #### broadcast ```json Example local.conf ------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;broadcast&quot; &#125; &#125; Traffic is sent on all available links simultaneously. This mode provides fault tolerance and effectively immediate failover due to transmission redundancy. This mode is a poor utilization of throughput resources and will not increase throughput but can prevent packet loss during a link failure. balance-rrExample local.conf -------------------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;balance-rr&quot; &#125; &#125; Traffic is striped across multiple links. This mode offers partial fault tolerance immediately, full fault tolerance eventually. This policy is unaware of protocols and is primarily intended for use with protocols that are not sensitive to reordering delays. The only option available for this policy is packetsPerLink which specifies the number of packets to transmit via a link before moving to the next link in the round-robin sequence. When set to 0 a link is chosen at random for each outgoing packet (doing so would be inefficient). The default value is 64, lower values can begin to add overhead to packet processing. This mode is not suitable for traffic that is sensitive to re-ordering such as TCP. balance-xorExample local.conf ------------------------------------------------------------ &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;balance-xor&quot; &#125; &#125; Traffic is categorized into flows based on source port, destination port, and protocol type these flows are then hashed onto available links where they will persist for the duration of their life. Traffic that does not have an assigned port (such as ICMP pings) will be randomly distributed across links. This mode offers partial fault tolerance immediately, full fault tolerance eventually. This mode is suitable for traffic that is sensitive to re-ordering such as TCP. balance-awareExample local.conf ------------------------------------------------------ &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;balance-aware&quot; &#125; &#125; This mode operates similarly to balance-xor in that it hashes flows onto specific links. However, it may reassign flows mid-conversation and perform other types of optimizations. This mode may surprise you more often than balance-xor by causing re-ordering delays for certain flows but it should lead to a better total experience when all flows are considered. This policy allows you to specify not only relative link capacities but also a notion of quality expressed as a weighted vector with a sum of 1.0. See below: Example local.conf: A maximum acceptable value for latency and packet delay variance are given along with weights that tell ZeroTier how important that limit is. Additionally, link capacities are given as hints to enable proportional traffic allocation. ------------------------------------------------------------------------------------------------------------------------------------------------------------------ &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;custom-balance-aware&quot;, &quot;policies&quot;: &#123; &quot;custom-balance-aware&quot;: &#123; &quot;basePolicy&quot;: &quot;balance-aware&quot;, &quot;failoverInterval&quot;: 5000, &quot;linkQuality&quot;: &#123; &quot;lat_max&quot; : 400.0, &quot;pdv_max&quot; : 20.0, &quot;lat_weight&quot; : 0.5, &quot;pdv_weight&quot; : 0.5 &#125;, &quot;links&quot;: &#123; &quot;wlan0&quot;: &#123; &quot;capacity&quot;: 250 &#125;, &quot;eth0&quot;: &#123; &quot;capacity&quot;: 1000 &#125; &#125; &#125; &#125; &#125; &#125; In the above example if any links begin to show signs of saturation (for instance if latency increases beyond 400ms) flows will be moved from it until it is no longer judged to be saturated. Link QualityAs seen in the balance-aware example configuration, you can provide hints to ZeroTier as to when a link is no longer suitable for use. You can set limits on the following: lat_max: Maximum (mean) latency observed over many samples pdv_max: Maximum packet delay variance (similar to jitter)Then, weights must also be provided to tell ZeroTier how important your limits are (as a reminder, the weights must sum to 1.0):&quot;linkQuality&quot;: &#123; &quot;lat_max&quot; : 80.0, &quot;pdv_max&quot; : 20.0, &quot;lat_weight&quot; : 0.5, &quot;pdv_weight&quot; : 0.5 &#125; If any one of these limits are violated ZeroTier will attempt to avoid assigning new flows to the link in question as well as begin moving flows from that link to other higher quality links. ZeroTier will first try to find a link that doesn’t violate any of your limits but if it is unable to do so it will pick the next best according to a quality ranking derived from your weights. There is no guarantee that links will be entirely avoided or that all of their flows will be moved if there are no better links to move to so these limits are merely strong suggestions to ZeroTier.Asymmetric linksAny set of physical links regardless of their relative performance may be combined using any of the policies. However if the relative performance among the links vary too wildly (for instance a fiber link and an LTE link) you may find that blindly striping or hashing traffic across them doesn’t turn out so well. For these scenarios it is recommended that you use balance-aware and provide capacity and/or linkQuality hints to ZeroTier.Capacity```confExample capacities (not a valid config by itself) “links”: { “wlan0”: { “capacity”: 250 }, “eth0”: { “capacity”: 1000 }} The term is meant to be a one-size-fits-all numerical value which represents the diameter of the pipe so to speak. That is, how much traffic it can process before it becomes clogged and congestion controls kick in. This will suggest to ZeroTier that it should assign traffic flows proportionally. ##### Quality Providing [quality](https://docs.zerotier.com/multipath#link-quality) hints to ZeroTier can be done in conjunction with the aforementioned `capacity` property without issue. See the [balance-aware](https://docs.zerotier.com/multipath#balance-aware) section for an example of how to do this. ```conf Example local.conf: How to use arbitrary (but relative) capacity values -------------------------------------------------------------------------- &#123; &quot;settings&quot;: &#123; &quot;defaultBondingPolicy&quot;: &quot;custom-balance-aware&quot;, &quot;policies&quot;: &#123; &quot;custom-balance-aware&quot;: &#123; &quot;basePolicy&quot;: &quot;balance-aware&quot;, &quot;links&quot;: &#123; &quot;eth0&quot;: &#123; &quot;capacity&quot;: 10000 &#125;, &quot;eth1&quot;: &#123; &quot;capacity&quot;: 1000 &#125;, &quot;eth2&quot;: &#123; &quot;capacity&quot;: 100 &#125; &#125; &#125; &#125; &#125; &#125; The above configuration will roughly result in the following allocation: 10000 + 1000 + 100 = 11100 total &quot;capacity units&quot; across all links eth0 10000 / 11100 = ~0.900 % eth1 1000 / 11100 = ~0.090 % eth2 100 / 11100 = ~0.009 % A good rule of thumb would be to express your known link speeds in units of Mbit/s. This isn’t strictly necessary as long as the quantities make sense relative to each other. Using the CLICurrently most configuration is handled via manual editing of each node’s local.conf. There are only a few available CLI commands.To view bonds to all peers: zerotier-cli bond list -------------------------------------------------------------- &lt;peer&gt; &lt;bondtype&gt; &lt;links&gt; 2f33b459c1 balance-xor 18/18 6af835ae71 active-backup 2/2 77dcbe7120 active-backup 5/5 cbae04eb89 active-backup 5/5 bafe99feb9 active-backup 3/3 TIPIf you’d like to ingest this data into your own monitoring solution use zerotier-cli -j bond list to emit a JSON blob instead. To see the current state of a bond to a given peer: zerotier-cli bond 77dcbe7120 show --------------------------------------------------------------------------------------------------------------------------------------------- Peer : 77dcbe7120 Bond : balance-rr Link Select Method : 0 Links : 4/4 Failover Interval (ms) : 500 Up Delay (ms) : 0 Down Delay (ms) : 0 Packets Per Link : 64 idx interface path socket ---------------------------------------------------------------------------------------------------- 0: enp5s0 192.168.88.155/57605 000055e03aa4d5a0 1: enp5s0 192.168.88.155/57605 000055e03aa4dc80 9: wlxc07a002fb470 192.168.88.155/57605 000055e03aa4d440 10: wlxc07a002fb470 192.168.88.155/57605 000055e03aa4db20 idx lat pdv plr per speed alloc rx_age tx_age eligible bonded ---------------------------------------------------------------------------------------------------- 0: 0.00 0.00 0.0000 0.0000 1000 0.07 62 66 1 1 1: 10.00 21.00 0.0000 0.0000 1000 0.04 61 66 1 1 9: 6.00 1.00 0.0000 0.0000 5000 0.06 227 567 1 1 10: 0.00 0.00 0.0000 0.0000 5000 0.07 60 48 1 1 The reported allocation percentages have an uncertainty value of +/- 0.4%.To forcibly rotate to a different link in an active-backup bond: zerotier-cli bond 77dcbe7120 rotate ------------------------------------------------------------------------------------------------------------------------- active link rotated from 000055c8aa8392f0-enp5s0/104.175.36.67/9993 to 000055c8aa838210-enp5s0/104.175.36.67/9993 To set a custom MTU for a bonded link: zerotier-cli bond setmtu 1300 enp5s0 192.168.88.155 --------------------------------------------------------------------------------------------------------- 200 setmtu OK Layer 2 BridgeDo you have devices that can’t run ZeroTier that you want to access remotely? You can use a small Linux PC as a bridge between ZeroTier and physical networks. NOTEThis topic is related to but different from using ZeroTier as a Layer 5 Service Proxy. Assumptions You’re doing this on your home network and can log in to your router and find the DHCP settings. You have a keyboard, monitor, and ethernet cable plugged into your Pi. Chances are high we’ll break networking and lose access to the Pi. You’re somewhat familiar with the command line and ssh. We’re going to use systemd networking for this. You could probably adapt the concepts to a different Linux network configuration system if you have opinions about systemd. We used a Raspberry Pi 2 while writing this, but a Pi 3 or 4 should work fine. Anything running a Debian 10+ based distro should be fine. It doesn’t have to be a Raspberry Pi, but some of these instructions might be Raspbian specific. What you’ll need Physical LAN Subnet Physical LAN DHCP Range ZeroTier Auto-Assign Range Default Gateway IP Address (the router) Bridge IP Address (will be statically assigned) Create a new ZeroTier network and get the ID. Keep an old network around for secondary way to connect any devices already using ZeroTier. The DHCP range and ZeroTier Auto-Assign range should be in the same subnet, but not overlap. You’d probably base this off what is already configured on your router. An example plan Name Value Referred to below as Physical LAN Subnet 192.168.192.0/24 Physical LAN DHCP RANGE 192.168.192.65 through 192.168.192.126 ZeroTier Auto-Assign Range 192.168.192.129 through 192.168.192.190 $ZT_POOL ZeroTier Managed Route 192.168.192.0/23 $ZT_ROUTE Default Gateway IP Address 192.168.192.1 $GW_ADDR Bridge IP Address 192.168.192.2/24 (or use DHCP) $BR_ADDR ZeroTier Network ID d5e04297a19bbd70 $NETWORK_ID ZeroTier Network Interface Name zt3jnwghuq $ZT_IF Get your bridge device up and runningFollow the Raspberry Pi install instructions Install Raspbian OS Enable SSH SSH into the PiIt’s easier to login via ssh now and copy/paste commands from the comfort of your own PC.The DNS name might just work for you:ssh pi@raspberrypi.local Or ssh pi@&lt;ip-address-of-pi&gt; Update the Operating Systemsudo apt update &amp;&amp; sudo apt -y full-upgrade &amp;&amp; sudo reboot Log back in after it’s done Install ZeroTierhttps://www.ZeroTier.com/download/ ------------------------------------------------------------------------- curl -s https://install.zerotier.com | sudo bash Let’s set some shell variables nowNETWORK_ID=&lt;your-network-id&gt; BR_IF=&quot;br0&quot; BR_ADDR=&lt;your-bridge-address&gt; GW_ADDR=&lt;your-gateway-address&gt; Join ZeroTier Networksudo zerotier-cli join $NETWORK_ID We don’t want ZeroTier to manage addresses or routes on $ZT_IF. We’re doing it statically below, on the bridge interface. sudo zerotier-cli set $NETWORK_ID allowManaged=0 Set one more variable ZT_IF=&lt;your-zt-interface-name&gt; Copy the dev name from the listnetworks output for $ZT_IF. It will be something like: zt3jvirser Configure the device in ZeroTier Central Go to the Members section of the Network Open the Wrench Icon for advanced settings and check Check Allow Bridging Check Do Not Auto Assign Authorize the member Switch to systemd networkingRemove existing network stuff sudo apt remove --purge --auto-remove dhcpcd5 fake-hwclock ifupdown isc-dhcp-client isc-dhcp-common openresolv Enable systemd-networkd sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf; sudo systemctl enable systemd-networkd; sudo systemctl enable systemd-resolved; sudo systemctl enable systemd-timesyncd; Configure interfaces sudo zerotier-cli set $NETWORK_ID allowManaged=0 Write Network Configuration files. Puts ethernet and zerotier into the bridge and configures the bridge with a static IP. See below for DHCP configuration on the bridge. cat &lt;&lt; EOF | sudo tee /etc/systemd/network/25-bridge-br0.network [Match] Name=$BR_IF [Network] Address=$BR_ADDR Gateway=$GW_ADDR DNS=1.1.1.1 EOF cat &lt;&lt; EOF | sudo tee /etc/systemd/network/br0.netdev [NetDev] Name=$BR_IF Kind=bridge EOF cat &lt;&lt; EOF | sudo tee /etc/systemd/network/25-bridge-br0-zt.network [Match] Name=$ZT_IF [Network] Bridge=$BR_IF EOF cat &lt;&lt; EOF | sudo tee /etc/systemd/network/25-bridge-br0-en.network [Match] Name=eth0 # might be en* [Network] Bridge=$BR_IF EOF Review configuration tail -n+0 /etc/systemd/network/* If needed, edit the files with the editor of your preference.If it looks good: sudo reboot You should be able to, from the physical LAN, connect to the Pi via $BR_ADDR If it takes a long time waiting for the network during bootSometimes the physical interface turns out to be a long “predictable interface name” like: “enb827eb0d4176”, sometimes it’s just eth0, depending on Raspbian version(???).https://wiki.debian.org/NetworkConfiguration#Network_Interface_NamesHook up a keyboard and monitor and check with ip addr then edit /etc/systemd/network/25-bridge-br0-en.network to match. Configure ZeroTier NetworkAt my.zerotier.com/network/$NETWORK_ID-&gt;Settings-&gt;Advanced Delete the default Managed Route. Add the new Managed Route $ZT_ROUTE Change IPV4 Auto-Assign to Advanced Remove existing Pool. Create new Pool with start and end from $ZT_POOL For documentation purposes, assign $BR_ADDR to the ZeroTier bridge memberIt should be working now. Next stepsEither it worked, and you can ssh back in to $BR_ADDR after a minute, or it didn’t work and the Pi isn’t on the network anymore and you need to use the keyboard and monitor to figure out what went wrong. TIPMake a backup of the sd card so you don’t have to repeat these steps AppendixConfigure bridge with DHCP cat &lt;&lt; EOF | sudo tee /etc/systemd/network/25-bridge-br0.network [Match] Name=$BR_IF [Network] DHCP=yes EOF FAQI can ping the bridge, but not behind itSometimes, iptables rules apply: echo &quot;0&quot; &gt; /proc/sys/net/bridge/bridge-nf-call-iptables or iptables -A FORWARD -p all -i br0 -j ACCEPTSee: https://serverfault.com/questions/162366/iptables-bridge-and-forward-chain Why is the Managed Route /23 and the LAN subnet /24?Say you have a laptop that is on the ZeroTier network and you bring it home. Now its WiFi address and ZeroTier address are in the same subnet. Which interface/address should your laptop use for internet access? https://en.wikipedia.org/wiki/Longest_prefix_match Why is an app on my phone not working over ZeroTier?Unfortunately the iOS and Android VPN APIs won’t let ZeroTier use multicast/broadcast. These are typically how apps auto-discover services on the LAN. 😭 Stay tuned for an article on bridging a ZeroTier network and a WiFi access point. References https://systemd.network/systemd.network.html https://hackaday.io/project/162164/instructions Layer 5 Proxy (Pylon)zerotier/pylon is a tool built using libzt that allows you to run a SOCKS5 Proxy that connects services and apps to and from your secure ZeroTier network without installing ZeroTier and without bringing up any new network interfaces. Pylon can be run as one of two personalities that can work alone or together depending on your needs:Name|What does this do|Is this a ZeroTier Node?——|——|——pylon refract |This bridges traffic to and from your LAN |Yespylon reflect |This relays traffic over TCP/443 |NoIn a nutshell you run pylon refract on some physical device on your LAN. Then devices and services that cannot install ZeroTier will connect to it on a port that you specify. Now services or devices on your LAN can talk to things on your ZeroTier network and vice versa. You can optionally run a pylon reflect if you’re behind some tricky NAT and need to relay over TCP/443.See the repo for more thorough instructions: zerotier/pylon NOTEThis topic is related to but different from Bridging. Proxy mode is useful if you’re unable to install our normal client on your devices. code-server + ZeroTier Whatcode-server allows you to run an instance of VSCode in the browser and edit code on remote machines. Combining this with ZeroTier lets you do this securely across your virtual network. See their project page: github.com/coder/code-server Installcurl -fsSL https://code-server.dev/install.sh | sh ConfigureBy default code-server will listen on 0.0.0.0. We of course do not want to do this since we’d like to only access it over our secure ZeroTier network. To do this, open the config file: nano /home/$USER/.config/code-server/config.yaml Change your bind-addr to the ip address of the ZeroTier network interface for the network you’d like to access code-server over.You can get this via Central or from the zerotier-cli. For instance: sudo zerotier-cli listnetworks 200 listnetworks &lt;nwid&gt; &lt;name&gt; &lt;mac&gt; &lt;status&gt; &lt;type&gt; &lt;dev&gt; &lt;ZT assigned ips&gt; 200 listnetworks 8156abe27c21623c intranet.joseph.com 31:26:27:43:19:fb OK PRIVATE ztcjyorbnc fd80:76c1:124c:2268:1da9:9bf1:14d:ab3e/88,10.241.208.61/16 bind-addr: 10.241.208.61:8080 auth: password password: correcthorsebatterystaple cert: false Runcode-server Access RemotelyNow from another computer that is also joined to the same ZeroTier network open a browser and type in the node’s address and port that is running code-server, you should be prompted to enter your password:You’re done! CAUTIONVS Code may state: code-server is being accessed in an insecure context. Web views, the clipboard, and other functionality may not work as expected., this is true but as long as you’ve correctly set your bind-addr in the previous step your connection even over HTTP is secure since they are mediated over ZeroTier. Though we do recommend defense in depth so for sensitive situations we always suggest HTTPS. Route between ZeroTier and Physical NetworksThis seems to be the simplest pattern for getting remote access to your LAN. It doesn’t require access to the LAN’s router or have some of the pitfalls of bridging. This requires a Linux PC or VM, something that runs iptables, on your LAN. A Raspberry Pi works. This is a NAT/Masquerade setup.If you have a router that can run zerotier, you should use that instead of this article. Many router vendors and operating systems have zerotier packages. POSSIBLE DISADVANTAGESNo broadcast/multicast across networks (but the mobile OS’s don’t allow this anyways).Can’t initiate connections from the LAN to an external ZeroTier client. Summary Install ZeroTier Add a managed route to the ZeroTier network (at my.zerotier.com) Enable IP Forwarding Configure iptables Required informationFor Example: Info Example Shorthand Name Below ZeroTier Network ID d5e04297a19bbd70 $NETWORK_ID ZeroTier Interface Name zt7nnig26 $ZT_IFACE Physical Interface Name eth0 $PHY_IFACE ZeroTier subnet 172.27.0.0/16 Physical subnet 192.168.100.0/24 $PHY_SUB ZeroTier IP Address of “Router” 172.27.0.1 $ZT_ADDR Install ZeroTierhttps://www.zerotier.com/download/ sudo zerotier-cli join $NETWORK_ID sudo zerotier-cli listnetworks Authorize it at my.zerotier.com/network/$NETWORK_IDThe listnetworks output has the ZeroTier Interface name under &lt;dev&gt; Configure the ZeroTier managed routeAt my.zerotier.com/network/$NETWORK_ID-&gt;Settings-&gt;Managed RoutesThis adds another route to every device joined to the ZeroTier network. Destination (Via) $PHY_SUB $ZT_ADDR For example: Destination (Via) 192.168.100.0/23 172.27.0.1 Configure the destination route as slightly larger than the actual physical subnet, here /23 instead of /24 (a smaller number is a bigger subnet in this notation) This makes devices that are on both the physical and the ZeroTier network prefer the physical connection. Enable IP forwardingThis can vary depending on linux distribution. Typically:Edit /etc/sysctl.conf to uncomment net.ipv4.ip_forward. This enables forwarding at boot.To enable it now sudo sysctl -w net.ipv4.ip_forward=1 Configure iptablesAssign some shell variables (personalize these) PHY_IFACE=eth0; ZT_IFACE=zt7nnig26 Add rules to iptables sudo iptables -t nat -A POSTROUTING -o $PHY_IFACE -j MASQUERADE sudo iptables -A FORWARD -i $PHY_IFACE -o $ZT_IFACE -m state --state RELATED,ESTABLISHED -j ACCEPT sudo iptables -A FORWARD -i $ZT_IFACE -o $PHY_IFACE -j ACCEPT Save iptables rules for next boot sudo apt install iptables-persistent sudo bash -c iptables-save &gt; /etc/iptables/rules.v4 Test Turn off wifi on your phone Join it to the zerotier network, authorize it Try to access something on the physical LAN Network MicrosegmentationCreate a netwrok for each roleDevices can join multiple networks at once. Networks are free on my.zerotier.com. Each network can have its own Network Flow Rules. “Network A allows only RDP traffic.” for example. Pros Easy Automatic authorization of nodes with SSO/OIDC Cons Multiple sets of subnets, IP addresses, etc… to maintain. Can be automated with Terraform. Mobile devices can connect to only 1 network at a time Summary Create a ZeroTier network for each role: Red, Green, and Blue. Or: Sales, HR, IT. Or: Dev, Prod, Staging. Or: Customer A, Customer B Join shared resources to multiple networks Join users to the networks they need access to ZeroTier Network Flow RulesTag network members with roles. Pros Fine grained, low-level access control One network config and set of members to maintain Cons Tricky to build rule sets Rules not integrated with OIDC yet Summary Create a network Use the Flow Rules to segment the network Here is the simplest possible ZeroTier Flow Rules example. More complex rules can be mixed in with these. See the docs or contact us for help.Replace the default rules with: tag role id 1 default 0 flag 0 red flag 1 green flag 2 blue ; drop tand role 0; accept; Devices will be able to talk only if they have at least one overlapping role. The tagging system is based on bitwise math, which we won’t try to explain here. Basically: Rename “red” “green” and “blue” with your real role names. Add more roles by adding flags in increasing order: flag 3 yellow, flag 4 indigoAfter saving a rule set with tags. A tag interface appears below: NATHow to characterize NATWhen debugging it is often nice to be able to gather information about NAT type and behavior. ZeroTier does not use STUN (for various reasons), but many STUN implementations contain some helpful code for doing this. It’s helpful to use an external utility since it’s “out of band” and therefore independent of ZeroTier. sudo apt-get install stun sudo stun stun.callwithus.com 0 This will perform the basic NAT characterization test from the STUN RFC. The STUN server can be any public STUN server.It will generate output like: STUN client version 0.96 running test number 0 Primary: Independent Mapping, Port Dependent Filter, preserves ports, no hairpin Return value is 0x000017 Integrating with Physical NetworksZeroTier creates networks interfaces, IP addresses, and routes on your computers. Because of this, you can use all the standard networking tools and techniques with your ZeroTier networks.There are 2 main ways to connect your ZeroTier networks to your Physical networks: Routing and Bridging. Yes, they are technically different things. Bridging has its downsides, including that it’s tricky to set up. Routing or Bridging?Most of the time, choose routing.Do you have devices that can’t install zerotier, use broadcast or multicast, and need to talk to ZeroTier nodes? Then consider bridging. RoutingThere are many ways to set up routing.We have only a Masquerade Tutorial so far, but the steps are the same for any of these set ups; just skip the IPTables Masquerade step.Here are some of the common examples: Router can run ZeroTierThis is the best case. Since the router/firewall is the default gateway, no additional routing config needs to be done. It already knows the routes to the ZeroTier networks it’s joined to.Some examples: Mikrotik Teltonika Networks OpenWRT OPNsense If you aren’t already using existing routers, consider one of these! Router can’t run ZeroTierYou’ll have to run ZeroTier on a device or virtual machine in your LAN. You should use Linux if at all possible. This will act as the “router” between ZeroTier and Physical networks. Static Routes on GatewayAdd a Static Route to your router/gateway:[ZeroTier subnet] via [LAN IP of ZeroTier &quot;router&quot;]For example:10.147.20.0/24 via 10.0.0.2 MasqueradeThis is the same method that your home router uses to route between Internet and your home LAN. See the Masquerade Tutorial BridgingSee the Bridging TutorialSome things that use broadcast: Wake on LANSince ZeroTier is a program that runs on your computer, if the computer is off, it won’t be able to receive ZeroTier packets. Wake on LAN packets need to be on the physical network. You still might not need Bridging if this is your only requirement: Run ZeroTier on a different computer on your LAN, and send the WoL packet from that computer. Auto-discoveryDoes your equipment come with a companion desktop or mobile application that auto-discovers the hardware on the network? This process usually uses broadcast. If the app lets you type in an IP address in the settings instead of using auto-discovery, that might be easier.Mobile Operating Systems don’t let you do broadcast over a “VPN” connection. You need run a bridge wherever the equipment is, and where the phone or tablet is. Embedded equipment Industrial Audio / Video / Lighting equipment Cameras Self-HostingTake control by self-hosting your own ZeroTier infrastructure. Network Controller INFONetwork Controller Reference Documentation TutorialFirst, skim the README.We’re going to use curl to set up an example ZeroTier network. An easy way to get curl in Windows is to install the latest version of Git, which comes with bash, curl, and other tools. OPENAPIThe setup described here uses the local ZeroTierOne service API to provision and manage networks. You can browse the OpenAPI docs for the local controller API for more detail on this interface. This is a low tech way to setup a controller for example purposes. You’d likely build yourself something fancier around this API. AuthtokenYou’ll need to find the current local auth token on your system using the instructions in the API Tokens guide. Get your Node ID NOTENetwork IDs are based on the Node ID of the Controller. Controllers are nodes! When you join a network, your node finds the controller like it does with other nodes: by its Node ID. with zerotier-cli(may need sudo) zerotier-cli info with curlcurl &quot;http://localhost:9993/status&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; It’s the “Address” in the above’s output.Let’s save the Node ID to an environment variable too: NODEID=your-node-id or try: NODEID=$(zerotier-cli info | cut -d &quot; &quot; -f 3) Create a Networkcurl -X POST &quot;http://localhost:9993/controller/network/$&#123;NODEID&#125;______&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; -d &#123;&#125; This should return JSON for a fresh network. NOTEWhen you post to /network/$&#123;NODEID&#125;______ the controller generates a random Network ID for you.See the “id” of your newly created network. Let’s save the new Network ID to an environment variable NWID=your-network-id List Networkscurl &quot;http://localhost:9993/controller/network&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; This returns a list of Network IDs. It should include the ID returned by the create command we did in the previous step. Get Network Infocurl &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; List Network MembersYou’ll need another node to join your network first, or this will be empty. You can use a phone, or another PC, or a VM, or a VPS… curl &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; I guess you could join the controller node to its own network, for demonstration purposes.Save the Node ID of one of your Network Members in an env var MEMID=a-member&#39;s-node-id Get Member Infocurl &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member/$&#123;MEMID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; Configure the NetworkFor Nodes to talk, we need to add a Managed Route and IP Auto-Assign Range on the network. Let’s make it a Private network too. Prefer Private networks. curl -X POST &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; \\ -d &#39;&#123;&quot;ipAssignmentPools&quot;: [&#123;&quot;ipRangeStart&quot;: &quot;192.168.192.1&quot;, &quot;ipRangeEnd&quot;: &quot;192.168.192.254&quot;&#125;], &quot;routes&quot;: [&#123;&quot;target&quot;: &quot;192.168.192.0/24&quot;, &quot;via&quot;: null&#125;], &quot;v4AssignMode&quot;: &quot;zt&quot;, &quot;private&quot;: true &#125;&#39; Authorize a membercurl -X POST &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member/$&#123;MEMID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; -d &#39;&#123;&quot;authorized&quot;: true&#125;&#39; Network Info Againcurl &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; Member Info Againcurl &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member/$&#123;MEMID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; Confirm from your nodessudo zerotier-cli listnetworks It should say “OK PRIVATE” and have an IP address. Deauthorize Membercurl -X POST &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member/$&#123;MEMID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; -d &#39;&#123;&quot;authorized&quot;: false&#125;&#39; Delete Membercurl -X DELETE &quot;http://localhost:9993/controller/network/$&#123;NWID&#125;/member/$&#123;MEMID&#125;&quot; -H &quot;X-ZT1-AUTH: $&#123;TOKEN&#125;&quot; CAUTIONYou can “delete” a member, but they will show up in the output of “list member” again if the node is still online and trying to join. You should make sure to deauthorize before deleting. Backup your controllerIf you want to keep these networks, copy the ZeroTier Home directory somewhere. Most importantly, the identity.secret and the controller.d directory. Clean up networksYou may want to delete these networks now that you’re done testing. You could use the API to delete every network.Or you can delete the controller.d directory. Linuxstop zerotier (If you’re ssh’d in over zerotier, this will break your connection): systemctl stop zerotier-one delete controller configs: cd /var/lib/zerotier-one/ # rm -rf ./controller.d/ start zerotier: systemctl start zerotier-one macOSstop zerotier: sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist delete controller configs: cd &quot;/Library/Application Support/ZeroTier/One&quot; # sudo rm -rf ./controller.d start zerotier: sudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist Private Root ServersCreating Your Own Roots (a.k.a. Moons)All ZeroTier nodes on a planet effectively inhabit a single data center. This makes it easy to directly connect devices anywhere, but it has the disadvantage of not working without an Internet connection. Network connections are far from perfectly reliable, and sometimes for security reasons a user may wish to “air gap” a set of nodes from the rest of the Internet entirely.In 1.2.0 we introduced the ability to add your own user-defined roots. Since the data center we inhabit is the planet, a user-defined set of roots is called a moon. When a node “orbits” a moon, it adds the moon’s roots to its root server set. Nodes orbiting moons will still use planetary roots, but they’ll use the moon’s roots if they look faster or if nothing else is available.The first step in creating a moon is to deploy a set of root servers. In most cases we recommend two. These are regular ZeroTier nodes, but ones that are always on and have static (physical) IP addresses. These static IPs could be global Internet IPs or physical intranet IPs that are only reachable internally. In the latter case your moon’s roots won’t work outside your office, but that doesn’t matter. Roaming nodes will just use planetary roots instead.We recommend that root servers do not act as network controllers, join networks, or perform any other overlapping functions. They need good reliable network connections but otherwise require very little RAM, storage, or CPU. A root could be a small VM, VPS, or cloud instance, or a small device like a Raspberry Pi. If you provision your roots as VMs, take care that they do not all reside on the same physical hardware. This would defeat the purpose of having two.The next step is to create a world definition using zerotier-idtool. You will need the identity.public files from each of your root servers. Pick one root (doesn’t matter which) and run zerotier-idtool initmoon &lt;identity.public of one root&gt; &gt;&gt;moon.json. The zerotier-idtoolcommand will output a JSON version of your world definition to stdout, so we redirect it to moon.json.Examine this file. It will contain something like: &#123; &quot;id&quot;: &quot;deadbeef00&quot;, &quot;objtype&quot;: &quot;world&quot;, &quot;roots&quot;: [ &#123; &quot;identity&quot;: &quot;deadbeef00:0:34031483094...&quot;, &quot;stableEndpoints&quot;: [] &#125; ], &quot;signingKey&quot;: &quot;b324d84cec708d1b51d5ac03e75afba501a12e2124705ec34a614bf8f9b2c800f44d9824ad3ab2e3da1ac52ecb39ac052ce3f54e58d8944b52632eb6d671d0e0&quot;, &quot;signingKey_SECRET&quot;: &quot;ffc5dd0b2baf1c9b220d1c9cb39633f9e2151cf350a6d0e67c913f8952bafaf3671d2226388e1406e7670dc645851bf7d3643da701fd4599fedb9914c3918db3&quot;, &quot;updatesMustBeSignedBy&quot;: &quot;b324d84cec708d1b51d5ac03e75afba501a12e2124705ec34a614bf8f9b2c800f44d9824ad3ab2e3da1ac52ecb39ac052ce3f54e58d8944b52632eb6d671d0e0&quot;, &quot;worldType&quot;: &quot;moon&quot; &#125; The world ID is technically arbitrary and could be any random 64-bit value. By convention we use the address of one of the roots.The world definition JSON file contains secrets, so it’s important to keep it in a safe place. The signingKey_SECRET is what will allow you to update your world definition automatically in the future.Now add your other root(s) and define their stable endpoints. You’ll end up with something that looks like: &#123; &quot;id&quot;: &quot;deadbeef00&quot;, &quot;objtype&quot;: &quot;world&quot;, &quot;roots&quot;: [ &#123; &quot;identity&quot;: &quot;deadbeef00:0:34031483094...&quot;, &quot;stableEndpoints&quot;: [ &quot;10.0.0.2/9993&quot;,&quot;2001:abcd:abcd::1/9993&quot; ] &#125;, &#123; &quot;identity&quot;: &quot;feedbeef11:0:83588158384...&quot;, &quot;stableEndpoints&quot;: [ &quot;10.0.0.3/9993&quot;,&quot;2001:abcd:abcd::3/9993&quot; ] &#125; ], &quot;signingKey&quot;: &quot;b324d84cec708d1b51d5ac03e75afba501a12e2124705ec34a614bf8f9b2c800f44d9824ad3ab2e3da1ac52ecb39ac052ce3f54e58d8944b52632eb6d671d0e0&quot;, &quot;signingKey_SECRET&quot;: &quot;ffc5dd0b2baf1c9b220d1c9cb39633f9e2151cf350a6d0e67c913f8952bafaf3671d2226388e1406e7670dc645851bf7d3643da701fd4599fedb9914c3918db3&quot;, &quot;updatesMustBeSignedBy&quot;: &quot;b324d84cec708d1b51d5ac03e75afba501a12e2124705ec34a614bf8f9b2c800f44d9824ad3ab2e3da1ac52ecb39ac052ce3f54e58d8944b52632eb6d671d0e0&quot;, &quot;worldType&quot;: &quot;moon&quot; &#125; The static IP addresses you use must be reachable from all the places you want these roots to serve. If you’re deploying these for use at a physical location, use internal IPs. If you want them to be usable off-site, use public IPs from your DMZ or host them at a cloud provider with a data center presence close to you. Low-cost cloud hosts that provide simple static direct IP addressing and dual-stack IPv4/IPv6 support like Digital Ocean, Vultr, and Linode make ideal places to host roots. The lowest priced instances at these providers are more than sufficient in most cases.The third step is to generate the actual signed world with zerotier-idtool genmoon moon.json. In this case this will generate a file called 000000deadbeef00.moon. This does not contain secret keys but is signed by the secret from the JSON file.Now go to your roots, create (if it does not exist) a subdirectory of their working directories (usually /var/lib/zerotier-one on Linux) called moons.d, and copy the signed moon file there. Now restart the roots and they should be ready.You can add these roots to regular nodes in one of two ways: by placing the same world definition file in their moons.d directories or by using the zerotier-cli orbit command: zerotier-cli orbit deadbeef00 deadbeef00. The first argument is the world ID (which we can shorten by removing the two leading zeroes) and the second is the address of any of its roots. This will contact the root and obtain the full world definition from it if it’s online and reachable.Once you’ve “orbited” your moon, try zerotier-cli listpeers. You should see the roots you’ve created listed as MOON instead of LEAF. They will now be used as alternative root servers. DevelopmentThe ZeroTier agent and Central both provide APIs that allow you to query information about your networks and peers, as well as managing the configuration and membership of your networks. Central APICentral is our hosted control plane for ZeroTierOne networks.In addition to the web-based GUI, you can use the Central API to view and manage your networks. You will need an API token for access.You can write your own client code to connect with Central using our examples as a starting point, or use an existing integration like our Terraform provider. API Reference (V1)https://docs.zerotier.com/central/v1/ Central APO ExamplesIn the examples below use the following placeholder variables to match commonly-needed parameters: $ZT_TOKEN: an API token associated with an active account on Central $NWID: an active network ID INFOSee the Central API Tokens guide for an explanation of how to create and manage API tokens. Exporting Data from the Central APIThe examples below are intended to run in a system terminal, and require the following command-line tools: curl jq Each of them will fetch network information and produce CSV as output. You can then import that CSV into your choice of database, spreadsheet, or configuration-management tool(s). List current networkscurl -s -H &quot;Authorization: token $ZT_TOKEN&quot; \\ &quot;https://api.zerotier.com/api/v1/network&quot; \\ | jq &#39;.[] | [ .id, .config.name, .config.description, .totalMemberCount, .config.creationTime, .config.ipAssignmentPools[0].ipRangeStart, .config.ipAssignmentPools[0].ipRangeEnd ]&#39; \\ | jq -rs &#39;.[] | @csv&#39; List network memberscurl -H &quot;Authorization: token $ZT_TOKEN&quot; \\ &quot;https://api.zerotier.com/api/v1/network/$NWID/member&quot; \\ | jq &#39;.[] | [ .id, .lastSeen, .physicalAddress, .ipAssignments[0], .name ]&#39; \\ | jq -rs &#39;.[] | @csv Service APIThe ZeroTierOne service provides an API which is used by the ZeroTierOne CLI and other clients to manage settings on your local instance of ZeroTier. This administration API is restricted to localhost by default, and requires authentication using an API token.Once you have your local token, you can access local node, network, and peer information, as well as configuring a standalone controller. API Reference (V1)https://docs.zerotier.com/service/v1/ Using API TokenAccess to the ZeroTier APIs requires an authentication token. This guide describes the methods and tools needed to create and manage these tokens. ZeroTier Central TokenTo use the Central API, you need a token associated with your account. To create one, log into my.zerotier.com and create a named token in the Account tab. Pick a memorable name that shows the intended use of the token: for example, “Terraform automation token” or “internal dev key”.Each token you create is associated with your user account, so it will allow the same level of access to manage and query networks that you have when working in the Central UI. CAUTIONThe token is displayed only once at the time you create it, so you should save it somewhere safe before clicking ‘Done’. ZeroTierOne Service TokenThe local service API token is store in the authtoken.secret file in the ZeroTier service state directory. You’ll need it to make API calls to the local service. NOTEZeroTier generates the token at random the first time it starts. If you delete the file and restart the ZeroTierOne service a new token will be created, and the existing token will no longer be usable to access the API. You can store the current auth token value in an environment variable for use in scripting and local development using the following terminal commands:Linux: TOKEN=$(sudo cat /var/lib/zerotier-one/authtoken.secret)macOS: TOKEN=$(sudo cat &quot;/Library/Application Support/ZeroTier/One/authtoken.secret&quot;)Windows: $env.TOKEN = Get-Content C:\\ProgramData\\ZeroTier\\One\\authtoken.secret Sockets(libzt)Encrypted P2P connections for your app or service.This guide explains how to use the ZeroTier SDK Socket API. It is meant to be read linearly and progresses from beginner topics to advanced topics. We will start by creating a simple pingable node while skipping over most of the gritty details. Then we’ll move on to a full client-server socket application where we will take the occasional tangent to learn more about how all of this works. Source code for the examples can be found here: libzt/examples. For API reference documentation see the sidebar to the left. To read more more about how ZeroTier works in general, see our Design Whitepaper. If you find an error on this page or you just need help getting something to work please open a GitHub issue. InstallC/C++: brew install zerotier/tap/libztRust: # See https://crates.io/crates/libztPython: pip install libztC#: Install-Package ZeroTier.SocketsJava: Install-Package ZeroTier.SocketsAlternatively, build from source: github.com/zerotier/libzt INFOFor the purposes of this guide it is recommended that you first create an account and a private network to test on, but it is not strictly necessary if you’re comfortable joining public networks or setting up your own network controller. Usage summaryC/C++: #include &lt;ZeroTierSockets.h&gt; // ... zts_node_start(); zts_net_join(0x1234567890abcdef); // ... int s = zts_socket(ZTS_AF_INET, ZTS_SOCK_STREAM, 0); zts_connect(s, in4, adddrlen); // ... zts_node_stop(); Rust: use libzt; use libzt::tcp::&#123;TcpListener, TcpStream&#125;; // ... let node = libzt::node::ZeroTierNode &#123;&#125;; node.start(); node.net_join(net_id); // ... TcpStream::connect(remote_addr); // ... node.stop(); Python: import libzt # ... node = libzt.ZeroTierNode() node.node_start() # ... node.net_join(0x1234567890abcdef) # ... client = libzt.socket(libzt.ZTS_AF_INET, libzt.ZTS_SOCK_STREAM, 0) client.connect((remote_ip, remote_port)) C#: using ZeroTier; // ... ZeroTier.Core.Node node = new ZeroTier.Core.Node(); node.Start(); // ... node.Join(0x1234567890abcdef); // ... ZeroTier.Sockets.Socket sender = new ZeroTier.Sockets.Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp); sender.Connect(remoteServerEndPoint); // ... node.Stop(); Java: import com.zerotier.sockets.*; // ... ZeroTierNode node = new ZeroTierNode(); node.start(); // ... node.join(0x1234567890abcdef); // ... ZeroTierSocket socket = new ZeroTierSocket(remoteAddr, port); Pingable Node (Part1)To start things off we will: Set up a node Join it to your network Assign it a globally-available static IPv4 and/or IPv6 address Ping it We’ll be skipping over a lot of details in this first example, but we’ll cover those in the next example. It’s also worth noting that in this first example we will be using the sequential API for simplicity but there is an event notification system that can be used as well. Starting a nodeStarting a node is easy and if you don’t provide a configuration ZeroTier will generate a new identity automatically, but don’t worry about that yet:C/C++: // No &quot;node object&quot; creation necessary in C zts_node_start(); Rust: let node = libzt::node::ZeroTierNode &#123;&#125;; node.start(); Python: node = libzt.ZeroTierNode() node.start() C#: ZeroTier.Core.Node node = new ZeroTier.Core.Node(); node.Start(); Java: ZeroTierNode node = new ZeroTierNode(); node.start(); Before we can join any networks or use sockets we need to know when the node has successfully come online. We will use a rather crude wait loop but as mentioned before, there are event-based methods for accomplishing this that we will discuss later:C/C++: while (! zts_node_is_online()) &#123; zts_util_delay(1000); &#125; Rust: while !node.is_online() &#123; node.delay(1000); &#125; Python: while not node.is_online(): time.sleep(1) C#: while (! node.Online) &#123; Thread.Sleep(1000); &#125; Java: while (! node.isOnline()) &#123; ZeroTierNative.zts_util_delay(1000); &#125; Once we’ve broken from this loop we can be confident that the node has a valid identity and has made contact with at least one root server. At this point let’s print our node’s identity. This is the public short form of your identity that you can share with people, we will discuss how to get the secret portion later on:C/C++: printf(&quot;%llx\\n&quot;, (long long int)zts_node_get_id());Rust: println!(&quot;&#123;:#06x&#125;&quot;, node.id());Python: print(node.get_id())C#: Console.WriteLine(node.Id.ToString(&quot;x16&quot;));Java: System.out.println(Long.toHexString(node.getId())); Join a networkNow we’re ready to join a network:C/C++: zts_net_join(0x1234567890abcdef);Rust: node.net_join(0x1234567890abcdef);Python: node.net_join(0x1234567890abcdef)C#: node.Join(0x1234567890abcdef);Java: node.join(0x1234567890abcdef);The network join request will contact our network controllers (or yours!) and if the network is public your node will be allowed to join immediately. If however the network is private the node will not be allowed to join until the network owner authorizes the node.A node is not assigned an IP address until it has successfully joined the network. This process usually takes a few seconds, thus your application must wait until the network config is received and it has been assigned an address:C/C++: while (! zts_net_transport_is_ready(net_id)) &#123; zts_util_delay(1000); &#125; Rust: while !node.net_transport_is_ready(net_id) &#123; node.delay(1000); &#125; Python: while not node.net_transport_is_ready(net_id): time.sleep(1) C#: while (! node.IsNetworkTransportReady(networkId)) &#123; Thread.Sleep(1000); &#125; Java: while (! node.isNetworkTransportReady(networkId)) &#123; ZeroTierNative.zts_util_delay(1000); &#125; The transport readiness check above essentially just makes sure we have been authorized on the network and that we also have an assigned address and a managed route. Getting your IP address NOTECurrently, only one address of each family type may be assigned (per network) to a libzt node at any time. That means one IPv4 and one IPv6 address. This is a technical limitation that will be removed in future versions. C/C++: char ipstr[ZTS_IP_MAX_STR_LEN] = &#123; 0 &#125;; zts_addr_get_str(net_id, ZTS_AF_INET, ipstr, ZTS_IP_MAX_STR_LEN); printf(&quot;%s\\n&quot;, ipstr); Rust: let addr = node.addr_get(net_id).unwrap(); println!(&quot;&#123;&#125;&quot;, addr); Python: print(node.addr_get_ipv4(net_id)) print(node.addr_get_ipv6(net_id)) C#: foreach (IPAddress addr in node.GetNetworkAddresses(networkId)) &#123; Console.WriteLine(addr); &#125; Java: System.out.println(node.getIPv4Address(networkId).getHostAddress()); System.out.println(node.getIPv6Address(networkId).getHostAddress()); From another machine (or the same machine, whatever you’re into), use our regular client zerotier-one (or another libzt instance) to join the same network and ping the address displayed by your new node above. You should see some jittery initial responses as our transport-triggered link is established and then once a VL2 P2P link is established the response time will stabilize.🎉 Congratulations you’ve just done something cool, I guess. Ready for something with sockets?Oh crap, I forgot. We need to stop the node when we’re done:C/C++: zts_node_stop();Rust: node.stop();Python: node.stop()C#: node.Stop()Java: node.stop()Full example source code can be found here: libzt/examples Sockets TIPIf you’re new to socket programming I highly recommend at least perusing Beej’s Guide to Network Programming. This is the best reference material you’ll find on the subject. It greatly helped in my own personal understanding. A portion of our C API is merely redirected calls to lwIP’s C API and is thus directly compatible with what you’ll learn in his guide. Before we move onto the next section we need to quickly discuss how the socket API is structured. For each supported language ZeroTier provides a socket interface that attempts to be as idiomatic as possible. If you are using one of these non-C bindings the following text about the C API may not apply to you, but it’s still good to know. I don’t care about thisZeroTier sockets can be controlled via zts_bsd_ functions that operate nearly identically to normal BSD-style sockets, and zts_ functions that provide simplified arguments and reduce the need to use things like struct sockaddr. These functions can be used on the same socket interchangeably without issue.For instance: zts_bsd_connect() will behave in the same way as an ordinary connect() call (but over ZeroTier of course) zts_connect() will perform a little magic behind the scenes to deal with transport-triggered link provisioning. (i.e. re-attempting for you) zts_tcp_client() will wrap all of the common socket calls (including a zts_connect()) into a single call. You are allowed to use each type of call and mix their usage among sockets as you please, as long as what you’re doing makes sense at the protocol level. For instance the following is legal: int sock = zts_bsd_socket(ZTS_AF_INET, ZTS_SOCK_STREAM, 0); zts_connect(sock, addr, addrlen); zts_bsd_write(sock, buf, buflen); Client and Server (Part2)In this section we will: Use most of the same setup code as the Pingable Node example Set up a TCP server and client Send a short message between the two To see full source code of the following with proper error and exception handling, see libzt/examples and libzt/test.Let’s start our node:C/C++: zts_init_from_storage(storage_path); zts_node_start(); while (! zts_node_is_online()) &#123; zts_util_delay(1000); &#125; printf(&quot;Node ID: %llx\\n&quot;, zts_node_get_id()); zts_net_join(net_id); while (! zts_net_transport_is_ready(net_id)) &#123; zts_util_delay(1000); &#125; char ipstr[ZTS_IP_MAX_STR_LEN] = &#123; 0 &#125;; zts_addr_get_str(net_id, family, ipstr, ZTS_IP_MAX_STR_LEN); printf(&quot;IP address: %s\\n&quot;, net_id, ipstr); Rust: let node = libzt::node::ZeroTierNode &#123;&#125;; node.init_from_storage(&amp;storage_path); node.start(); while !node.is_online() &#123; node.delay(1000); &#125; println!(&quot;Node ID = &#123;:#06x&#125;&quot;, node.id()); node.net_join(net_id); while !node.net_transport_is_ready(net_id) &#123; node.delay(1000); &#125; let addr = node.addr_get(net_id).unwrap(); println!(&quot;IP address: &#123;&#125;&quot;, addr); Python: node = libzt.ZeroTierNode() node.init_from_storage(storage_path) node.node_start() while not node.node_is_online(): time.sleep(1) print(&quot;Node ID:&quot;, node.node_id()) node.net_join(net_id) while not node.net_transport_is_ready(net_id): time.sleep(1) print(&quot;IP address: &quot;, node.addr_get_ipv4(net_id)) C#: node = new ZeroTier.Core.Node(); node.InitFromStorage(configFilePath); node.Start(); while (! node.Online) &#123; Thread.Sleep(1000); &#125; Console.WriteLine(&quot;Node ID:&quot; + node.Id) node.Join(networkId); while (! node.IsNetworkTransportReady(networkId)) &#123; Thread.Sleep(1000); &#125; foreach (IPAddress addr in node.GetNetworkAddresses(networkId)) &#123; Console.WriteLine(&quot;IP address: &quot; + addr); &#125; Java: ZeroTierNode node = new ZeroTierNode(); node.initFromStorage(storagePath); node.start(); while (! node.isOnline()) &#123; ZeroTierNative.zts_util_delay(1000); &#125; System.out.println(&quot;Node ID: &quot; + Long.toHexString(node.getId())); node.join(networkId); while (! node.isNetworkTransportReady(networkId)) &#123; ZeroTierNative.zts_util_delay(1000); &#125; System.out.println(&quot;IP address: &quot; + node.getIPv4Address(networkId).getHostAddress()); Notice that in the above code we use a new type of initialization function. In this case we are using a location on storage to retrieve and store our identities. We do this since we don’t want to generate a unique identity for each application run. It’s computationally-expensive and wasteful, think of the tardigrades. TCP ServerBelow is a simple blocking server that will open a listening socket, wait for a message and print what it receives. To see full source code of the following with proper error and exception handling, see libzt/examples andlibzt/test.C/C++: char remote_addr[ZTS_INET6_ADDRSTRLEN] = &#123; 0 &#125;; int remote_port = 0; int len = ZTS_INET6_ADDRSTRLEN; // Set up listen socket // Note: We could also use standard zts_bsd_socket, zts_bsd_bind, etc int fd = zts_tcp_server(local_addr, 8000, remote_addr, len, &amp;remote_port) printf(&quot;Accepted connection from %s:%d\\n&quot;, remote_addr, remote_port); // RX char recvBuf[128] = &#123; 0 &#125;; zts_read(fd, recvBuf, sizeof(recvBuf)); printf(&quot;RX: %s\\n&quot;, recvBuf); // Cleanup zts_close(fd); zts_node_stop(); Rust: // Set up listen socket let listener = TcpListener::bind(&quot;0.0.0.0:8000&quot;).unwrap(); for stream in listener.incoming() &#123; match stream &#123; Ok(stream) =&gt; &#123; println!(&quot;Accepted connection from: &#123;&#125;&quot;, stream.peer_addr().unwrap()); thread::spawn(move || &#123; handle_client(stream) &#125;); &#125; Err(e) =&gt; &#123; println!(&quot;Error: &#123;&#125;&quot;, e); &#125; &#125; &#125; drop(listener); Python: # Set up listen socket serv = libzt.socket(libzt.ZTS_AF_INET, libzt.ZTS_SOCK_STREAM, 0) serv.bind((&quot;0.0.0.0&quot;, 8000)) serv.listen(1) conn, addr = serv.accept() print(&quot;Accepted connection from: &quot;, addr) # RX data = conn.recv(128) print(&quot;RX: &quot;, data) # Cleanup conn.close() node.node_stop() C#: // Set up listen socket ZeroTier.Sockets.Socket listener = new ZeroTier.Sockets.Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp); listener.Bind(localEndPoint); listener.Listen(1); ZeroTier.Sockets.Socket handler; handler = listener.Accept(); Console.WriteLine(&quot;Accepted connection from: &quot; + handler.RemoteEndPoint.ToString()); // RX string data = null; byte[] bytes = new Byte[128]; int bytesReceived = handler.Receive(bytes); data = Encoding.ASCII.GetString(bytes, 0, bytesReceived); Console.WriteLine(&quot;RX: &quot; + data); // Cleanup handler.Shutdown(SocketShutdown.Both); handler.Close(); node.Stop(); Java: // Set up listen socket ZeroTierServerSocket listener = new ZeroTierServerSocket(port); ZeroTierSocket conn = listener.accept(); ZeroTierInputStream inputStream = conn.getInputStream(); DataInputStream dataInputStream = new DataInputStream(inputStream); // RX String message = dataInputStream.readUTF(); System.out.println(&quot;RX: &quot; + message); // Cleanup listener.close(); conn.close(); node.stop(); TCP ClientBelow is a simple client that will connect to a remote host and send a message. To see full source code of the following with proper error and exception handling, see libzt/examples and libzt/test.C/C++: char* msgStr = (char*)&quot;Hello, network!&quot;; int bytes = 0, fd; // Set up connection socket // Note: We could also use standard zts_bsd_socket, zts_bsd_connect, etc fd = zts_tcp_client(remote_addr, remote_port); // TX zts_write(fd, msgStr, strlen(msgStr)) // Cleanup zts_close(fd); zts_node_stop(); Rust: // Set up connection socket match TcpStream::connect(remote_addr) &#123; Ok(mut stream) =&gt; &#123; // TX let msg = b&quot;Hello, network!&quot;; stream.write(msg).unwrap(); &#125; Err(e) =&gt; &#123; // Failed to connect &#125; &#125; Python: # Set up connection socket client = libzt.socket(libzt.ZTS_AF_INET, libzt.ZTS_SOCK_STREAM, 0) client.connect((remote_ip, remote_port)) # TX data = &quot;Hello, network!&quot; client.send(data.encode(&quot;utf-8&quot;)) # Cleanup client.close() node.node_stop() C#: // Set up connection socket byte[] bytes = new byte[128]; ZeroTier.Sockets.Socket sender = new ZeroTier.Sockets.Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp); sender.Connect(remoteServerEndPoint); // TX byte[] msg = Encoding.ASCII.GetBytes(&quot;Hello, network!&quot;); int bytesSent = sender.Send(msg); // Cleanup sender.Shutdown(SocketShutdown.Both); sender.Close(); node.Stop(); Java: // Set up connection socket ZeroTierSocket socket = new ZeroTierSocket(remoteAddr, port); ZeroTierOutputStream outputStream = socket.getOutputStream(); DataOutputStream dataOutputStream = new DataOutputStream(outputStream); // TX dataOutputStream.writeUTF(&quot;Hello, network!&quot;); // Cleanup socket.close(); node.stop(); OS / Platform NotesLinuxLinux FAQSnap PackageDockerLayer 2 BridgeAmazon VPC GatewayNAT6PLANE with Dockercode-server + ZeroTiercloud-initRoute between ZeroTier and Physical NetworksmacOSmacOS FAQWindowsWindows FAQChocolateyWinGetLAN Game AnnouncementsUnknown Node IDAndroidAndroid FAQiOS / iPadOSiOS or iPadOS FAQRoutersRouter Config TipsCorporate FirewallsTeltonika NetworksMikro TikOpenWRTOPNsenseUbiquitiRoute between ZeroTier and Physical NetworksNASFreeNASASUSTORQNAPSynologyWestern DigitalIoTLow Bandwidth ModeOS and Device CompatibilityLayer 2 BridgeLayer 5 Proxy (Pylon)SecurityRoute between ZeroTier and Physical NetworksFreeBSDFreeBSD FAQService ProvidersRules FAQSecuritySSO / OIDC","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Zerotier","slug":"Zerotier","permalink":"http://shenguosai.github.io/tags/Zerotier/"}]},{"title":"小米Note刷机过程记录","slug":"小米Note刷机过程记录","date":"2024-03-04T03:10:07.000Z","updated":"2024-08-27T15:46:00.160Z","comments":true,"path":"2024/03/04/小米Note刷机过程记录/","link":"","permalink":"http://shenguosai.github.io/2024/03/04/%E5%B0%8F%E7%B1%B3Note%E5%88%B7%E6%9C%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/","excerpt":"","text":"1. 背景查了一下订单，2015年5月回国的时候给爸爸和我买了两台小米Note，应该用了没有多久就出问题了一直闲置在家。上网查了一下回收价只有2元，所以就像改造一下看能不能当个简单的服务器来使用。 2. 准备2.1 小米手机助手近些年一直都没有关注小米，上网一查发现小米官网已经不开放手机助手的下载了，在网上找到这么一个网页:MiPhoneAssistant 小米手机助手下载合集。留个底:由于小米助手官方已经很久没更新了，最近一次更新是 2021-10-28，所以强烈不建议在这之后发布的手机和 MIUI 版本上使用，大概率会有适配兼容问题，备份恢复功能很可能不能按预期工作，它只适合在老机型和 MIUI 老版本上使用！ 下面是小米助手官方下载地址，版本由新到旧排列，可按个人喜好或需要选择。https://miuirom.xiaomi.com/rom/u1106245679/4.2.1028.10/MiAssistant-4.2.1028.10.ziphttps://miuirom.xiaomi.com/rom/u1106245679/3.2.522.32/MiAssistant-3.2.522.32.ziphttps://miuirom.xiaomi.com/rom/u491047765/2.3.0.4071/mipctoolexe-2.3.0.4071.exehttps://miuirom.xiaomi.com/rom/u491047765/2.3.0.3101/mipctoolexe-2.3.0.3101.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.3.0.1031_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.7241_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.6261_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.4091_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.3171_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.2131_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.2.0.1301_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.1.0.12251_2717.exehttps://bigota.d.miui.com/MiFlash/MiSetup2.1.0.11211_2717.exe 文件 MD5 校验值如下。 b9aaa49dd92a828179b4994b1eb82136 MiAssistant-3.2.522.32.zip 7bc76814006a340667dbe72669c66e1f MiAssistant-4.2.1028.10.zip b4ebf49b441a3f4997fc1ac4a82486a5 mipctoolexe-2.3.0.3101.exe d274427550884f389c7e417a13bfd3c1 mipctoolexe-2.3.0.4071.exe d4580a3adff0db692f7a0420b568499f MiSetup2.1.0.11211_2717.exe 936fc4c41e247baf21528e13e26e577e MiSetup2.1.0.12251_2717.exe 8251f9670237d91f22cc70fa8f910086 MiSetup2.2.0.1301_2717.exe 80a68985a0d063d32d7884d008a0a71e MiSetup2.2.0.2131_2717.exe 98c7c5185ee0cd2f1940fcc8a0f95f99 MiSetup2.2.0.3171_2717.exe e1073d32737075b51709c9a2b1c0cc99 MiSetup2.2.0.4091_2717.exe aea5d32a8c4839fc35a2ed4fbb53e70f MiSetup2.2.0.6261_2717.exe 62d3bd3427038a67ea8772972da1f82f MiSetup2.2.0.7241_2717.exe 539cd92545f27978e2fe29aae527d4b2 MiSetup2.3.0.1031_2717.exe 尝试了一下上面下载地址的前4个还可以下载，但是后面的已经无法打开了，会提示403 Forbidden。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"小米","slug":"小米","permalink":"http://shenguosai.github.io/tags/%E5%B0%8F%E7%B1%B3/"}]},{"title":"部署 Windows RDS 远程桌面服务器(一)","slug":"部署-Windows-RDS-远程桌面服务-一","date":"2024-03-02T13:22:01.000Z","updated":"2024-08-27T15:24:44.834Z","comments":true,"path":"2024/03/02/部署-Windows-RDS-远程桌面服务-一/","link":"","permalink":"http://shenguosai.github.io/2024/03/02/%E9%83%A8%E7%BD%B2-Windows-RDS-%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1-%E4%B8%80/","excerpt":"转自RD网关部署说明，留待以后部署自己的远程桌面网关。 ——-开始正文——-","text":"转自RD网关部署说明，留待以后部署自己的远程桌面网关。 ——-开始正文——- 1. 背景实现通过RD网关服务器实现外网访问内网的远程桌面。 1.1 远程桌面网关远程桌面网关（RD 网关）是一项角色服务，使授权远程用户可以从任何连接到 Internet 并且可以运行远程桌面连接 (RDC) 客户端的设备连接到内部企业网络或专用网络上的资源。网络资源可以是远程桌面会话主机（RD 会话主机）服务器、运行 RemoteApp 程序的RD 会话主机服务器或启用了远程桌面的计算机。RD 网关使用 HTTPS 上的远程桌面协议 (RDP) 在 Internet 上的远程用户与运行其生产力应用程序的内部网络资源之间建立安全的加密连接。 1.2 为什么使用远程桌面网关？RD 网关有很多优点，其中包括:通过 RD 网关，远程用户可以使用加密连接，通过 Internet 连接到内部网络资源，而不必配置虚拟专用网络 (VPN) 连接。RD 网关提供全面的安全配置模型，使您可以控制对特定内部网络资源的访问。RD 网关提供点对点的 RDP 连接，而不是允许远程用户访问所有内部网络资源。通过 RD 网关，大多数远程用户可以连接到在专用网络中的防火墙后面或跨网络地址转换程序 (NAT) 托管的内部网络资源。在此方案中，通过 RD 网关，不必对 RD 网关服务器或客户端执行其他配置。在此版本的 Windows Server 之前，采用安全措施来阻止远程用户跨防火墙和 NAT 连接到内部网络资源。这是由于出于网络安全考虑，通常阻止端口 3389（用于 RDP 连接的端口）。RD 网关使用 HTTP 安全套接字层/传输层安全 (SSL/TLS) 隧道将 RDP 通信传输到端口 443。由于大多数公司打开端口 443 来支持 Internet 连接，所以，RD 网关利用此网络设计提供跨多个防火墙的远程访问连接。通过远程桌面网关管理器可以配置授权策略，以定义远程用户要连接到内部网络资源必须满足的条件。例如，可以指定：可以连接到内部网络资源的用户（即，可以连接的用户组）。用户可以连接到的网络资源（计算机组）。客户端计算机是否必须是 Active Directory 安全组的成员。是否允许设备的重定向。客户端需要使用智能卡身份验证还是密码身份验证，还是可以使用任一方法。可以将 RD 网关服务器和远程桌面服务客户端配置为使用网络访问保护 (NAP) 来进一步增强安全性。NAP 是 Windows Server® 2008 R2、Windows Server® 2008、Windows® 7、Windows Vista® 和 Windows(R) XP Service Pack 3 中包含的运行状况策略创建、强制和补救技术。通过 NAP，系统管理员可以强制运行状况要求，可以包括软件要求、安全更新要求、所需的计算机配置以及其他设置。 note备注如果 RD 网关强制 NAP，则运行 Windows Server 2008 R2 或 Windows Server 2008 的计算机不能作为 NAP 客户端使用。如果 RD 网关强制 NAP，则仅运行 Windows 7、Windows Vista 或 Windows XP SP3 的计算机可以作为 NAP 客户端使用。有关如何将 RD 网关配置为使用 NAP 对连接到 RD 网关服务器的远程桌面服务客户端强制运行状况策略的信息，请参阅 Windows Server 2008 R2 技术中心上的”远程桌面服务”页。 http://go.microsoft.com/fwlink/?linkid=140433（可能为英文网页）。可以将 RD 网关服务器与 Microsoft Internet Security and Acceleration (ISA) 服务器一起使用来提高安全性。在此方案中，可以在专用网络中（而不是在外围网络中）托管 RD 网关服务器，且可以在外围网络中托管 ISA 服务器。远程桌面服务客户端与 ISA 服务器之间的安全套接字层 (SSL) 连接可以在连接到 Internet 的 ISA 服务器上终止。有关如何将 ISA 服务器配置为 RD 网关服务器方案的 SSL 终结设备的信息，请参阅 Windows Server 2008 R2 技术中心上的”远程桌面服务”页。 http://go.microsoft.com/fwlink/?linkid=140433（可能为英文网页）。远程桌面网关管理器提供的工具帮助您监视 RD 网关服务器状态和事件。通过使用远程桌面网关管理器，可以指定为了进行审核要监视的事件（例如尝试连接到 RD 网关服务器不成功）。 1.3 配置远程桌面网关此清单列出了要成功地为 RD 网关核心方案配置 RD 网关需要完成的任务。通过此方案，可以配置 RD 网关服务器，使远程用户可以通过 RD 网关服务器，从 Internet 访问内部公司网络资源或专用网络资源。在此方案中，内部网络资源可以是远程桌面会话主机（RD 会话主机）服务器、运行 RemoteApp 程序的RD 会话主机服务器或启用了远程桌面的计算机。配置步骤|………………………………——|——安装远程桌面网关角色服务。|获取 RD 网关服务器的证书。|创建远程桌面连接授权策略(RD CAP)。|创建远程桌面资源授权策略(RD RAP)。|配置 RD 网关的远程桌面服务客户端。| 有关 RD 网关的详细信息，请参见 Windows Server 2008 R2 TechCenter 上的远程桌面服务页。 http://go.microsoft.com/fwlink/?LinkId=140433。 1.4 安装远程桌面网关的先决条件若要正常使用 RD 网关，必须满足下列先决条件：必须拥有安装了 Windows Server 2008 R2 的服务器。在您要配置的 RD 网关服务器上具有本地”管理员”组成员身份（或同等身份），是完成此过程的最低要求。 查看有关使用适当帐户和组成员关系的详细信息，请访问本地默认组和域默认组。 http://go.microsoft.com/fwlink/?LinkId=83477（可能为英文链接）。必须为 RD 网关服务器获取安全套接字层 (SSL) 证书（如果还没有该证书）。默认情况下，在 RD 网关 服务器上，Internet 信息服务 (IIS) 服务使用传输层安全 (TLS) 1.0 对通过 Internet 在客户端与 RD 网关服务器之间进行的通信加密。若要正常使用 TLS，必须在 RD 网关服务器上安装 SSL 证书。note备注如果可以使用其他方法获取符合 RD 网关的要求的外部信任证书，则不需要在组织中部署证书颁发机构 (CA) 基础结构。如果您的公司没有独立 CA 或企业 CA，并且您没有受信任公用 CA 颁发的兼容证书，则可以为 RD 网关服务器创建并导入自签名证书，以便进行技术评估和测试。有关详细信息，请参阅为远程桌面网关服务器创建自签名证书。有关 RD 网关 的证书要求以及如何获取并安装证书的信息，请参阅获取远程桌面网关服务器的证书。如果配置的 RD 网关授权策略要求客户端计算机上的用户是 Active Directory 安全组的成员，才能连接到 RD 网关服务器，则 RD 网关服务器必须也是 Active Directory 域的成员。角色、角色服务和功能的依存关系若要正常使用 RD 网关，要求安装并运行多个角色服务和功能。使用服务器管理器安装 RD 网关角色服务时，将自动安装并启动下列附加的角色、角色服务和功能（如果尚未安装）：HTTP 代理上的远程过程调用 (RPC)Web 服务器 (IIS) [Internet 信息服务]若要正常使用 HTTP 代理上的 RPC 功能，必须安装并运行 IIS。网络策略和访问服务还可以将 RD 网关配置为使用另一台运行网络策略服务器 (NPS) 服务的服务器上存储的远程桌面连接授权策略 (RD CAP)。这样，您将使用运行 NPS 的服务器（以前称为远程身份验证拨入用户服务 (RADIUS) 服务器）来集中存储、管理和验证RD CAP。如果已为远程访问方案（例如 VPN 和拨号网络）部署了运行 NPS 的服务器，则对 RD 网关方案同样使用这个现有的运行 NPS 的服务器，可以增强您的部署。 2. 实验环境2.1 实验环境 服务器名称 系统 功能 备注 AD192.168.10.1 Windows Server 2012 AD域服务，AD证书服务 VMHost上虚机 RD192.168.10.1410.0.1.1 Windows Server 2012 RD网关服务器 VMHost上虚机 RD01192.168.0.1510.0.1.3 Windows Server 2012 RD网关服务器 VMHost上虚机 Win-TTLSA6FVTKG192.168.10.22 Windows 7 32 sp1 远程桌面 VMHost上虚机 Win-J3SKRGLCDLT10.0.1.2 Windows 7 32 sp1 客户端 VMHost3上虚机 2.2 拓扑图 3. 实验步骤3.1 AD 证书服务安装与配置3.1.1 添加 ADCS 角色和功能 3.1.2 ADCS 配置此处要选【企业 CA】 3.1.3 创建针对计算机的证书模板在 AD 中，创建证书模板。【服务器管理器】-【工具】-【证书颁发机构】。右键【证书模板】-【新建】-【要颁发的证书模板】。 (1) 右击【证书模板】-【管理】- 右击【计算机】-【复制模板】，在【常规】tab 定义模板名称，在【使用者名称】选择【在请求中提供】，点击【应用】-【确定】 (2) 右键【证书模板】-【新建】-【要颁发的证书模板】，选择模板名称为步骤 (1) 中创建的模板，点击确定。 3.2 安装远程桌面网关服务 3.3 配置远程桌面网关服务器以下所有配置均在 RD 网关服务器上进行。 3.3.1 证书在【控制台】完成申请证书的相关操作。证书已由前面的ADCS证书服务配置完成。申请完证书后。首先，要对RD网关服务器进行导入证书。其次，要把证书保存到本地硬盘，再拷贝到客户端进行安装，可进行静默安装。 3.3.1.1 申请证书【开始】-【运行】 mmc【文件】-【添加/删除管理单元】，选择【证书】，点击【添加】。右键【个人】-【证书】-【所有任务】-【申请新证书】点击下一步选择新创建的模板下的【注册此证书需要详细信息。单击这里以配置设置】，弹出如下窗口在类型处选择【公用名】，在值处填写路由器的外网地址，点击【添加】按钮，点击【应用】-【确定】证书申请完成。 3.3.1.2 导出证书将导出的证书拷贝到客户端进行安装。 3.3.1.3 导入证书【开始】-【运行】输入【tsgateway.msc】调用 RD 网关管理器。 3.3.2 策略3.3.2.1 创建策略 3.4 客户端配置3.4.1 导入证书从 RD 网关上拷贝导出的证书文件到客户端，双击进行安装。 3.4.2 Host 文件修改 3.4.3 mstsc 设置 3.5 测试远程桌面登录3.6 RD 网关服务器场4. 参考资料http://wangchunhai.blog.51cto.com/225186/1139388 证书服务安装http://lixun.blog.51cto.com/4198640/942447 证书http://technet.microsoft.com/zh-cn/library/cc725949(v=ws.10).aspx http://technet.microsoft.com/zh-cn/library/cc725706(v=ws.10).aspx 配置远程桌面网关服务器http://technet.microsoft.com/zh-cn/library/cc754191(v=ws.10).aspx TMG发布远程桌面网关服务器http://hi.baidu.com/comet82/item/e62dc17664760f480c0a0701 安装ADCShttp://yuelei.blog.51cto.com/202879/309092/ 配置CA证书http://235898457.blog.51cto.com/512763/307612 RD网关负载均衡http://blog.sina.com.cn/s/blog_643754960101b79n.html","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"部署 Windows RDS 远程桌面服务(二)","slug":"部署-Windows-RDS-远程桌面服务-二","date":"2024-03-02T12:35:58.000Z","updated":"2024-08-27T15:24:50.017Z","comments":true,"path":"2024/03/02/部署-Windows-RDS-远程桌面服务-二/","link":"","permalink":"http://shenguosai.github.io/2024/03/02/%E9%83%A8%E7%BD%B2-Windows-RDS-%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1-%E4%BA%8C/","excerpt":"转自超详细的 部署Windows RDS 远程桌面服务来啦！！！确定不来看一下嘛~，留待以后部署自己的远程桌面网关。 ——-开始正文——-","text":"转自超详细的 部署Windows RDS 远程桌面服务来啦！！！确定不来看一下嘛~，留待以后部署自己的远程桌面网关。 ——-开始正文——-用 Windows Server 2016 操作系统来完成 RDS 的部署，包括添加远程桌面服务角色，创建会话集合，发布 Remote App 程序，以及测试访问 Remote App 程序。首先准备两台部署好域环境的虚拟机: Windows Server 2016 和 Windows 7 添加远程桌面服务角色打开 Windows Server 2016: (1) 点进服务器管理器，点击“添加角色和功能” (2) 在安装类型选择“远程桌面服务安装” (3) 在“选择部署类型”窗口中选择“标准部署”按键，后“下一步” (4) 在“选择部署方案”窗口中，选择“基于会话的桌面部署”按键，后“下一步” (5) 系统会自动安装和配置必需的角色服务，直接“下一步” (6) 依次指定下面三个服务所在的服务器，在“指定 RD 连接代理服务器”窗口中，将服务器池中的当前服务器添加到右侧窗格中，后“下一步” (7) 选择服务器池中的当前的服务器后，双击添加到右侧窗格中，后“下一步” (8) 选择服务器池中的当前的服务器后，双击添加到右侧窗格中，后“下一步” (9) 选择“需要时自动启动目标服务器”后，单击“部署”按键 (10) 安装过程中系统自动重启，重新后会自动完成剩下的安装任务 登录自己的域账号 创建会话集合(1) 打开“服务器管理器”窗口，在左侧窗格单击刚安装好的“远程桌面服务”，在中间窗格选择“概述”选项，在右侧窗格单击“创建会话合集” ![20240302205757](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302205757.png) (2) 在“开始之前”窗口中，直接“下一步” (3) 自己取一个便于识别的名称后，单击“下一步” ![20240302205902](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302205902.png) (4) 将服务器池中的目标服务双击添加至右侧窗格中后，单击“下一步” ![20240302205959](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302205959.png) (5) 此页面可以点击“添加”按键可以添加需要授权的用户组，我们此处直接“下一步” ![20240302210101](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210101.png) (6) 在“指定用户配置文件磁盘”窗口中，输入用户配置文件所在的位置后，单击“下一步” ![20240302210201](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210201.png) (7) 确认信息无误后，单击“创建” ![20240302210228](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210228.png) (8) 创建成功后单击“关闭”按键 ![20240302210300](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210300.png) 发布 Remote App 程序(1) 打开“服务器管理器”窗口，单击左侧窗格“远程桌面服务”，在中间窗格单击刚创建的集合名称，单击“发布 Remote App 程序” ![20240302210553](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210553.png) (2) 选择要发布集合的应用程序，咱选择发布自带的“画图” ![20240302210640](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210640.png) (3) 确认要发布的 Remote App 程序列表是否正确，正确就单击“发布”按键 ![20240302210731](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210731.png) (4) 发布“画图”完成 ![20240302210802](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210802.png) AD 服务端新建用户(1) 打开“AD 用户和计算机”窗口 ![20240302210852](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210852.png) (2) 设置用户登录名称 ![20240302210913](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210913.png) (3) 设置用户登录密码 ![20240302210937](https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240302210937.png) 访问 Remote App 程序(测试)进入 Windows 7 (客户端): (1) 在 Web 浏览器地址栏输入 URL: “http://FQDN/rdweb”，在打开的页面中单击“继续浏览此网站” (2) 输入”服务端域名\\刚刚新建的用户的名字”，和登录密码后，点击“登录” 登录成功后出现“画图”程序图表即代表发布成功 (3) 单击程序图标，在浏览器底部弹出的对话框单击“打开”按键 (4) 点击“连接” (5) 输入账号和登录密码 以上便是所有内容，欢迎大家前来借鉴！","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"Windows11 激活方法","slug":"Windows11-激活方法","date":"2024-02-26T02:47:23.000Z","updated":"2024-08-27T15:59:59.320Z","comments":true,"path":"2024/02/26/Windows11-激活方法/","link":"","permalink":"http://shenguosai.github.io/2024/02/26/Windows11-%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/","excerpt":"今天将笔记本自带的 win11 家庭版升级到专业版时无意中在知乎中找到了一个方法，一试还真的有效，因为远程运行了一个网站的程序，不知道自己的电脑是不是成为别人的肉鸡了，但是激活方式确实是有效的。风险性后面再研究吧。","text":"今天将笔记本自带的 win11 家庭版升级到专业版时无意中在知乎中找到了一个方法，一试还真的有效，因为远程运行了一个网站的程序，不知道自己的电脑是不是成为别人的肉鸡了，但是激活方式确实是有效的。风险性后面再研究吧。 两个激活秘钥```7Y64F-88DCY-Y6WTC-H33D2-64QHF 我使用的是第一个，第二个是否有效没有验证。 方法 右键“此电脑”，依次点击“属性” =&gt; “产品秘钥和激活” =&gt; “更改产品秘钥”，输入上述秘钥； win + R，输入powershell，回车。在弹窗中输入命令:irm massgrave.dev/get.ps1 | iex 会弹出下面的窗口简单解释一下: 按1，Windows永久激活；按2，office永久激活；按3，Windows激活到2038年；按4，180天的kms激活工具；…… 然后重复1就会看到“已激活”字样。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"使用curl命令行工具查询本地公网IP地址","slug":"使用curl命令行工具查询本地公网IP地址","date":"2024-02-04T01:46:39.000Z","updated":"2024-08-27T15:44:03.203Z","comments":true,"path":"2024/02/04/使用curl命令行工具查询本地公网IP地址/","link":"","permalink":"http://shenguosai.github.io/2024/02/04/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E6%9F%A5%E8%AF%A2%E6%9C%AC%E5%9C%B0%E5%85%AC%E7%BD%91IP%E5%9C%B0%E5%9D%80/","excerpt":"在 Linux 中 curl 是一个利用 URL 规则在命令行下工作的文件传输工具，同时也可以查询本机公网 IP 地址，具体使用方法如下:","text":"在 Linux 中 curl 是一个利用 URL 规则在命令行下工作的文件传输工具，同时也可以查询本机公网 IP 地址，具体使用方法如下: 使用curl ipinfo.io查询:curl ipinfo.io返回值 [root@MiWiFi-R3D-srv ~]# curl ipinfo.io &#123; &quot;ip&quot;: &quot;1.203.179.218&quot;,// 此处是本机公网ip地址 &quot;city&quot;: &quot;Beijing&quot;,// 城市名 &quot;region&quot;: &quot;Beijing&quot;,// 区域名 &quot;country&quot;: &quot;CN&quot;,// 国家代号 &quot;loc&quot;: &quot;39.9075,116.3972&quot;,// 经纬度坐标 &quot;org&quot;: &quot;AS4847 China Networks Inter-Exchange&quot;,// 运营商信息 &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,// 时区 &quot;readme&quot;: &quot;https://ipinfo.io/missingauth&quot;//提示ipinfo.io官网地址 &#125; 使用curl ifconfig.me查询curl ifconfig.me返回值[root@MiWiFi-R3D-srv ~]# curl ifconfig.me 1.203.179.218 //只显示本机公网IP地址 [root@MiWiFi-R3D-srv ~]# 使用ipinfo.io加ip地址，可查血这个 ip 的信息curl ipinfo.io/192.168.32.84返回值 [root@MiWiFi-R3D-srv ~]# curl ipinfo.io/103.208.15.138 &#123; &quot;ip&quot;: &quot;103.208.15.138&quot;,//被查询的IP地址 &quot;city&quot;: &quot;Beijing&quot;,//所属城市 &quot;region&quot;: &quot;Beijing&quot;,//所属区域 &quot;country&quot;: &quot;CN&quot;,//国家代码 &quot;loc&quot;: &quot;39.9075,116.3972&quot;,//经纬度坐标 &quot;org&quot;: &quot;AS9808 China Mobile Communications Group Co., Ltd.&quot;,//运营商信息 &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,//时区 &quot;readme&quot;: &quot;https://ipinfo.io/missingauth&quot;//ipinfo.io官网地址 &#125; 此命令在 Windows 的命令提示符中也可以使用使用方法如下: C:\\Users\\User&gt;curl ipinfo.io &#123; &quot;ip&quot;: &quot;1.203.179.218&quot;, &quot;city&quot;: &quot;Beijing&quot;, &quot;region&quot;: &quot;Beijing&quot;, &quot;country&quot;: &quot;CN&quot;, &quot;loc&quot;: &quot;39.9075,116.3972&quot;, &quot;org&quot;: &quot;AS4847 China Networks Inter-Exchange&quot;, &quot;timezone&quot;: &quot;Asia/Shanghai&quot;, &quot;readme&quot;: &quot;https://ipinfo.io/missingauth&quot; &#125; 最简单的是使用 https://ip138.com/ 网址进行本机公网IP地址查询","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://shenguosai.github.io/tags/Linux/"}]},{"title":"关于半导体工艺中电容器件","slug":"关于半导体工艺中电容器件","date":"2024-02-01T09:15:36.000Z","updated":"2024-08-27T15:39:03.978Z","comments":true,"path":"2024/02/01/关于半导体工艺中电容器件/","link":"","permalink":"http://shenguosai.github.io/2024/02/01/%E5%85%B3%E4%BA%8E%E5%8D%8A%E5%AF%BC%E4%BD%93%E5%B7%A5%E8%89%BA%E4%B8%AD%E7%94%B5%E5%AE%B9%E5%99%A8%E4%BB%B6/","excerpt":"半导体设计中常用的电容有: MIM, MOM, Varactor, NCAP, N/P MOS","text":"半导体设计中常用的电容有: MIM, MOM, Varactor, NCAP, N/P MOS MIMMIM 电容是利用异层金属制备: 是使用特殊H -K 材料制作的高密度电容，比较薄，耐击穿性不好，比较贵，增加了新的工艺，需要额外的 mask(MIM 层间金属介质层)。 逻辑电路中本身存在较多的金属层，可以将奇数层金属连接在一起，偶数层金属连接在一起，形成层间 MIM 电容，但是层间距离比较大，一次电容密度比较小。 寄生电容大。 MOM同层金属插指形成: 比较占面积； 容值高； 工艺兼容，单独划分区域即可； 寄生电容小； 28nm 以下工艺固定使用 MOM 。 VaractorPoly-oxide-NWell，S/D NP+ 作为bulk，是一种电压控制的电容，电容是反偏积累工作状态，其电容与电压的关系完全取决于 NWell 掺杂浓度梯度，工艺难度较大。Varactor 一般操作在 accumulation (积累)区，C-V 曲线较线性，常用在需要电压调整电容的控制回路中。 在 Psub 的工艺中，Varactor 和 NCAP 是坐在 NWell 中，S/D 是 N+ 重掺杂作为BULK，当 GATE 和 BULK 压差越大时，沟道积累负电荷越多，相当于 GATE 和 BULK 这两个极板离得越近，电容越大。 NCAPN/P MOS(Poly cap)MOS 电容，对比 Varactor NWell 情况，Poly Cap 使用 PMOS。所以 S/D 使用 PP+ 而不是 NP+。MOS Cap 一般操作在 inversion (反型)区， C-V 曲线不线性且陡峭，通常用在固定 Gate Voltage 做稳压电容。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"}],"tags":[{"name":"器件","slug":"器件","permalink":"http://shenguosai.github.io/tags/%E5%99%A8%E4%BB%B6/"}]},{"title":"EDA工具使用备忘","slug":"EDA工具使用备忘","date":"2024-02-01T00:49:38.000Z","updated":"2024-08-27T15:51:36.714Z","comments":true,"path":"2024/02/01/EDA工具使用备忘/","link":"","permalink":"http://shenguosai.github.io/2024/02/01/EDA%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/","excerpt":"CadenceVirtuoso .cdsinit: 负责Cadence软件的初始化配置，包括加载快捷方式、嵌入Calibre软件接口等。","text":"CadenceVirtuoso .cdsinit: 负责Cadence软件的初始化配置，包括加载快捷方式、嵌入Calibre软件接口等。 示例存放目录:Candence安装目录/tools/dfII/samples/local/cdsinit 读取顺序: Cadence安装目录/tools/dfII/samples/local/cdsinit =&gt; 用户home目录/.cdsinit =&gt; virtuoso启动目录/.cdsinit 设置默认读取的display.drf文件: drLoadDrf(filePath) 设置默认快捷键文件: 添加单个快捷键文件 load(\"/home/IC/Desktop/workspace/analog_ic/set_env/bindKeys_ICSkillSharing.il\") 添加多个快捷键文件 let((bindKeyFileList file path saveSkillPath) bindKeyFileList = &#39;( &quot;leBindKeys.il&quot; &quot;schBindKey.il&quot; &quot;bindKeys_ICSkillSharing.il&quot; ) ) ; This is the path that is searched for the files path = strcat( ; If you want to add another path add it here as a string &quot;. ~/home/IC/Desktop/workspace/analog_ic/set_env &quot; prependInstallPath(&quot;local&quot;) prependInstallPath(&quot;samples/local&quot;) ) saveSkillPath = getSkillPath() saveSkillPath(path) foreach(file bindKeyFileList if(isFile(file) then loadi(file) ) ) setSkillPath(saveSkillPath) 快捷键设置: 设置快捷键“0”消除高亮net|按“0”后鼠标点击欲消除的net: hiSetBindKey(\"Schematics\" \"0\" \"geEnterDeleteNetProbe()\") 设置快捷键“-”消除所有高亮net: hiSetBindkey(\"Schematics\" \"-\" \"geDeleteAllProbe(getCurrentWindow() t)\") 设置快捷键“F6”打开Library Manager(启动Virtuoso后): hiSetBindKey(\"Command Interpreter\" \"F6\" \"ddsOpenLibManager()\") 设置快捷键“Shift+S”在上层schematic界面下编辑Symbol: hiSetBindKey(\"Schematics\" \"ShiftS\" \"schHiEditInPlace()\") 设置仿真结果默认存放目录为“/DATA/shenguosai/simulasion”: envSetVal(\"asimenv.startup\" \"projectDir\" 'string \"/DATA/shenguosai/simulasion\") 调用其它软件接口: Calibreload(“Calibre_install_dir/lib/calibre.skl”) HSPICEload(“HSPICE_install_dir/interface/HSPICE.ile”) .cdsenv: 包含了Cadence软件的变量设置，用户通过对变量赋值，改变软件设置。 示例存放目录: Candence安装目录/tools/dfII/samples/.cdsenv 读取顺序: Cadence安装目录/tools/dfII/samples/.cdsenv =&gt; 用户home目录/.cdsenv =&gt; virtuoso启动目录/.cdsenv 设置仿真结果显示有效位数:(示例文件中有，通过搜索改变赋值即可,以下同) auCore.misc labelDigits int 6 改变仿真结果保存路径: asimenv.startup projectDir string\" ./simulation\" 按Library名称设置仿真结果保存路径: asimenv.startup appendLibNameToProjectDir boolean t 设置原理图和版图中的 label 默认字体改为 roman: schematic createLabelFontStyle cyclic &quot;roman&quot; layout labelFontStyle cyclic &quot;roman&quot; 设置版图网格点默认值:视工艺而定 layout xSnapSpacing float 0.005 layout ySnapSpacing float 0.005 设置仿真波形与坐标显示: viva.graph titleFont string &quot;Default,14,-1,5,75,0,0,0,0,0&quot; viva.rectGraph background string &quot;white&quot; viva.axis font string &quot;Default,14,-1,5,75,0,0,0,0,0&quot; viva.horizMarker font string &quot;Default,14,-1,5,75,0,0,0,0,0&quot; viva.vertMarker font string &quot;Default,14,-1,5,75,0,0,0,0,0&quot; viva.referenceLineMarker font string &quot;Default,14,-1,5,75,0,0,0,0,0&quot; ... viva.trace lineThickness string &quot;Thick&quot; viva.trace lineStyle string &quot;solid&quot; wavescan.trace lineThickness string &quot;Thick&quot; wavescan.trace lineStyle string &quot;solid&quot; 其中viva.axis font string &quot;Defaut,14,-1,5,75,0,0,0,0,0&quot;中的 14 为字号；75 为颜色深度，可以理解为是否加粗，取值在0-99之间。 注意:仿真波形显示方法会与 PDK 中环境变量设置和 display.drf 文件中的设置有关，如果按照上面的方法设置完后不能达到实际效果，首先考虑是否是 PDK 自带脚本加载了其它软件变量或者使用的 display.drf 文件中做了相应修改，如果发现有问题可以修改 PDK 中环境变量或者 display.drf 文件的相应设置。 实现在 Library Manager 界面双击 view 以只读方式打开: cdsLibManager.main dblClickEditCellView boolean nil 特别注意: 可能按照上面的方法设置完.cdsenv文件之后，发现设置并未生效，这时候需要注意一个问题，Cadence每次启动时都会加载 .cdsinit 文件，然而对于 .cdsenv 文件并非如此，而且 .cdsenv文件中的变量值会被覆盖，具体软件加载 .cdsenv 文件的顺序需要再用户的环境变量设置文件中定义。一般叫做 .bashrc (使用 export 定义环境变量)或者 .cshrc (使用 setenv 定义环境变量)。 # 加载软件启动目录下的 .cdsenv 文件 export CDS_LOAD_ENV = CWD(setenv CDS_LOAD_ENV CWD) # 首先加载用户主目录下的 .cdsenv 文件，然后加载软件启动目录下的 .cdsenv 文件。 export CDS_LOAD_ENV = addCWD(setenv CDS_LOAD_ENV addCWD) display.drf: 一般在工艺库中会有初始化的显示文件。这里面会有电路的连线粗细及颜色，器件的一些显示，版图layout里面的layer颜色等等，还有ADE波形图里面的线的属性。总之就是显示相关的一些设置。 文件的修改保存: 当修改过显示后，每次退出 virtuoso 会显示一个保存显示信息，这里输入名称，比如display_1.drf，这个文件默认保存在打开 virtuoso 的文件夹下面。 默认文件的设置: 在.cdsinit 文件里添加载入命令 drLoadDrf(filepath) 。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Virtuoso","slug":"Virtuoso","permalink":"http://shenguosai.github.io/tags/Virtuoso/"}]},{"title":"Work Logs--20240130","slug":"Work-Logs-20240130","date":"2024-01-30T10:00:00.000Z","updated":"2024-08-27T16:01:23.083Z","comments":true,"path":"2024/01/30/Work-Logs-20240130/","link":"","permalink":"http://shenguosai.github.io/2024/01/30/Work-Logs-20240130/","excerpt":"","text":"完成项 VOL_GEN3电路功能分析: POWER_SEL_CTRL逻辑分析 部分电源域及启动时序分析 VIN启动 =&gt; VDD_1和VDD_2紧跟着启动(不需要EN信号的使能)，但启动不完全； EN=H =&gt; C144_PLUS(VOL_GEN3的输出也是BG模块的电源)启动 =&gt; BG输出开始启动，初始阶段只有0.8V(大约持续100us，参数待调)左右，之后缓慢上升 =&gt; 稳定于1.2V之后BG输出GOOD信号并配置VLO_GEN3使其完全启动； 逻辑部分EN起主导作用，并在DC内部穿插多个模块，需要整理； 非EN控制直接启动部分需列表。 次日计划按照正常启动时POWER_SEL的控制逻辑A0A1时序 00=&gt;10=&gt;11 来进行内部参数调整，争取完成此模块的设计。 注: A0A1 无 01 逻辑，因为 EN=H 后 A0 马上变 H，而 A1 则需要等到 BG 模块的输出 GOOD 信号变 H，EN=L 时 BG 模块不允许启动。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"}],"tags":[{"name":"开关电源","slug":"开关电源","permalink":"http://shenguosai.github.io/tags/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/"}]},{"title":"浅谈几种带宽与增益","slug":"浅谈几种带宽与增益","date":"2024-01-10T07:02:38.000Z","updated":"2024-08-27T15:39:47.646Z","comments":true,"path":"2024/01/10/浅谈几种带宽与增益/","link":"","permalink":"http://shenguosai.github.io/2024/01/10/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8D%E5%B8%A6%E5%AE%BD%E4%B8%8E%E5%A2%9E%E7%9B%8A/","excerpt":"今天记录一下闭环增益、开环增益、环路增益，以及3dB带宽、单位增益带宽(UGB)、增益带宽积(GBW)。","text":"今天记录一下闭环增益、开环增益、环路增益，以及3dB带宽、单位增益带宽(UGB)、增益带宽积(GBW)。 关于增益闭环增益对于一个闭环反馈系统，如下图:闭环增益即传输函数为: $\\frac{Y(s)}{X(s)}=\\frac{H(s)}{1+\\beta H(s)}$, 是 $\\frac{开环增益}{1+环路增益}$。 开环增益从上面图中可知，开环增益就是去除反馈对系统的作用，看运放的增益。 环路增益如图所示，输入置0，断开环路。环路增益$\\frac{V_F}{V_t}=\\beta A$根据巴克豪森判据判断系统是否稳定，所以仿真都是用stb仿环路稳定性，看环路增益波特图而不是看开环增益或者闭环增益。 那为什么到运放看稳定性就说开环增益了呢？对于单个运放来说，由于运放一般工作在负反馈系统中，开环增益就相当于反馈系数为1的环路增益，所以到运放会说开环增益，其实还是在说环路增益。 那为什么说运放仿开环增益相位裕度够了就代表其接成反馈系统是稳定的呢？拉扎维的10.2节完美解释了这个问题:运放开环增益相当于反馈系数为1的环路增益:在反馈系统里，反馈系数最大为1，就是接成单位增益负反馈形势。这种情况下，系统的环路增益波特图与运放的完全重合，即相位裕度一样，所以可以稳定。对于其它反馈系数小于1的系统来说，环路增益为$\\beta A$，不管$\\beta$如何变，环路增益的波特图中，极点的位置与运放极点位置一样，不会变，所以相频曲线没有任何改变。但是由于$\\beta &lt;1$，幅频曲线下移，增益交点提前，相位裕度只会越来越大。综上，运放单独仿真与它接在负反馈系统里相比，相位裕度是最差的情况了，即当反馈变弱时，结果是系统更稳定。 关于带宽3dB带宽3dB带宽就是运放的主极点处所对应的频率，幅度上对应比低频增益下降3个dB处。推导:运放传递函数:$A_v(s)=\\frac{A_v(0)}{(1+s/\\omega _0)(1+s/\\omega _1)(1+s/\\omega _2)···}$ 假设次极点离主极点很远很远，那么在主极点$s=\\omega _0$处，有:$A_v(\\omega _0)=20log(\\frac{A_v(0)}{1+\\omega _0/\\omega _0})=20log(\\frac{A_v(0))}{2}=20logA_v(0)-20log(2)\\approx 20logA_v(0)-3dB$ 所以叫做3dB带宽。 单位增益带宽顾名思义，就是运放$\\frac{开环增益}{闭环负反馈系统环路增益}=1$时对应的频率。为了推导方便，假设只有一个极点的运放，那么在它的单位增益带宽处，有:$A_v(\\omega _{UGB})=\\frac{A_v(0)}{1+\\frac{\\omega _{UGB}}{\\omega _0}}=1$可得，$\\omega _{UGB}=A_v(0)*\\omega _0$ 这里有一个结论: 闭环系统的3dB带宽等于环路增益的党委增益带宽。单位增益负反馈系统的3dB带宽等于该系统中所使用的运放的单位增益带宽。推导:负反馈想要稳定，即相位裕度达到60°，单位增益带宽内一定只有一个极点。只看单位增益带宽内的情况，那么有:环路增益: $\\beta A(s)=\\frac{\\beta A_0}{1+\\frac{s}{\\omega _0}}$闭环系统传输函数: $\\frac{Y(s)}{X(s)}=\\frac{A(s)}{1+\\beta A(s)}=\\frac{\\frac{A_0}{1+\\beta A_0}}{1+\\frac{s}{(1+\\beta A_0)\\omega _0}}$所以就闭环系统传输函数3dB带宽(不是环路增益，是传输函数)是$\\omega _0\\beta A_0$，环路增益的单位增益带宽也是$\\omega _0\\beta A_0$。当系统为单位增益负反馈系统时，即反馈因子是1，系统3dB带宽是$\\omega _0A_0$,运放单位增益带宽也是$\\omega _0A_0$。 增益带宽积(GBW)增益与带宽的乘积。重要结论:在单极点系统中，GBW是不变的，等于单位增益带宽，等于低频增益3dB带宽。因为只有一个极点的时候，极点之后，带宽每增大10倍，增益下降20dB，20dB就是10倍，一个增大十倍，一个减小十倍，自然不变。结合单位增益带宽中的结论推导部分，可见，闭环系统传输函数的增益带宽积与开环的增益带宽积相等。(再次强调:是传输函数的增益带宽积，不是环路增益中的增益带宽积)$A_0\\omega _0=\\frac{A_0}{1+\\beta A_0}(1+\\beta A_0)*\\omega _0$","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"}],"tags":[{"name":"反馈","slug":"反馈","permalink":"http://shenguosai.github.io/tags/%E5%8F%8D%E9%A6%88/"}]},{"title":"TVBox的安装与使用","slug":"TVBox的安装与使用","date":"2024-01-05T00:48:22.000Z","updated":"2024-08-27T15:58:28.512Z","comments":true,"path":"2024/01/05/TVBox的安装与使用/","link":"","permalink":"http://shenguosai.github.io/2024/01/05/TVBox%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","excerpt":"","text":"apk下载","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"TVBox","slug":"TVBox","permalink":"http://shenguosai.github.io/tags/TVBox/"}]},{"title":"Cadence使用Calibre进行后仿","slug":"Cadence使用Calibre进行后仿","date":"2023-12-18T05:50:59.000Z","updated":"2024-08-27T15:48:46.000Z","comments":true,"path":"2023/12/18/Cadence使用Calibre进行后仿/","link":"","permalink":"http://shenguosai.github.io/2023/12/18/Cadence%E4%BD%BF%E7%94%A8Calibre%E8%BF%9B%E8%A1%8C%E5%90%8E%E4%BB%BF/","excerpt":"通过 Virtuoso 的 Layout XL =&gt; Calibre =&gt; Run PEX 进入 Calibre PEX，并将工艺厂提供的 xRC(Rule) 文件设置好 Calibre PEX。","text":"通过 Virtuoso 的 Layout XL =&gt; Calibre =&gt; Run PEX 进入 Calibre PEX，并将工艺厂提供的 xRC(Rule) 文件设置好 Calibre PEX。 为了减少寄生参数，以及提高后仿效率，建议在 Calibre PEX =&gt; PEX Options =&gt; Netlist =&gt; Reduction and CC 中将 Enable MinRes reduction 和 Enable MinCap Reduction 选中，并在 COMBINE 和 REMOVE 后的框中填写所需数值，一般 Cap 的 Combine 为 0.5fF，Remove 为 0.1fF。Res 的 Combine 为 1Ω，Remove 为 0.1Ω。 在 Outputs 选项中，Outputs =&gt; Netlist 框中，Format 选 CALIBREVIEW(可增加 Geometry 可在 PEX 运行完后弹出寄生参数的总结)，Use Names From : SCHEMATIC 。 点击 Run PEX 开始寄生参数提取，之后进入 Calibre View Setup 界面。 Calibre View Setup 设置中，Output 选项填被提取寄生参数的 library，Calibre View Type 选择 masklayout 意味着直接以 layout 的摆放位置提取寄生参数，选择 Schematic 意味着以 schematic 的位置生成寄生参数，建议选择 schematic，这可以在后仿中如前仿一样直接查看 schematic 的电路仿真信息，Create Terminal =&gt; if matching terminal exists on symbol，Device Placement =&gt; Layout Location，设置完毕，点击 OK 。 提取寄生参数完毕后，如果有错误可能是 calibre 中部分线短路了，手动改正即可，可通过 calibre view type 更改类型为 masklayout 可以避免这种错误，但是后仿不能通过直接点击。 在 testbench 中新建 config view，将 config 中的 view to use 更改为提取的寄生参数 calibre，加入 calibre 提取出来的参数，同时 ADE L =&gt; Setup =&gt; Design 更改类型为 config，即可开始后仿。 仿真结束后，可以直接在 schematic 中查看信号线。 生成 calibre 耗费时间过长，可以直接更改 calibre view type 为 masklayout，但是此种方法对于查看结果没那么方便。或者直接在 pex 设置中，Output =&gt; Netlist =&gt; Format 更改为 SPECTRE 生成网表。 该方法生成的网表不一定能直接用于 spectre 仿真，需要先将该网表的 pin 顺序更正。更改方法为，首先需要先用前仿电路跑一次仿真生成网表，然后在 simulation 这个文件夹中找到 input.scs 的网表，将该网表中的 pin 复制到后仿的网表中。 后仿生成的网表更改完毕，在 testbench 中新建 config view，将 config 中的 view to use 更改为 Specify SPICE Source File，同时选择后仿的网表即可，这就是用网表仿真，速度快，但是不方便查看信号，但是利于排除寄生电容，需要排除哪项将其注释即可。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Calibre","slug":"Calibre","permalink":"http://shenguosai.github.io/tags/Calibre/"}]},{"title":"在Windows11中找回照片查看器打开图片","slug":"在Windows11中找回照片查看器打开图片","date":"2023-12-12T15:41:05.000Z","updated":"2024-08-27T15:46:58.891Z","comments":true,"path":"2023/12/12/在Windows11中找回照片查看器打开图片/","link":"","permalink":"http://shenguosai.github.io/2023/12/12/%E5%9C%A8Windows11%E4%B8%AD%E6%89%BE%E5%9B%9E%E7%85%A7%E7%89%87%E6%9F%A5%E7%9C%8B%E5%99%A8%E6%89%93%E5%BC%80%E5%9B%BE%E7%89%87/","excerpt":"使用快捷键Win + R打开运行窗口， 输入regedit命令回车打开注册表","text":"使用快捷键Win + R打开运行窗口， 输入regedit命令回车打开注册表 找到HKEY_LOCAL_MACHINE -&gt; SOFTWARE-&gt;Microsoft -&gt; Windows Photo Viewer -&gt; Capabilities -&gt; FileAssociations，右键=&gt;新建=&gt;字符串值，名称填写.jpg，数值填写PhotoViewer.FileAssoc.Tiff，同理添加 .png .jpeg，数值相同。 添加之后就可以使用Windows照片查看器看图。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"}]},{"title":"smic工艺中带有ckt后缀的器件","slug":"smic工艺中带有ckt后缀的器件","date":"2023-12-08T06:16:14.000Z","updated":"2024-08-27T15:57:11.709Z","comments":true,"path":"2023/12/08/smic工艺中带有ckt后缀的器件/","link":"","permalink":"http://shenguosai.github.io/2023/12/08/smic%E5%B7%A5%E8%89%BA%E4%B8%AD%E5%B8%A6%E6%9C%89ckt%E5%90%8E%E7%BC%80%E7%9A%84%E5%99%A8%E4%BB%B6/","excerpt":"","text":"在SMIC的PDK中存在后面带ckt和不带ckt的PDK，其中不带ckt的器件模型是bsim4，而带ckt的器件模型是subckt。网上查询，subckt就是sub circuit，即子电路的意思。查询并猜想如下:不带ckt: 类理想器件，即只针对此种器件建模；带ckt: 考虑其内部构造所产生的各种寄生成分，并且包含寄生器件参数随电路参数的变化","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"Fab","slug":"半导体专业/Fab","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/Fab/"}],"tags":[{"name":"PDK","slug":"PDK","permalink":"http://shenguosai.github.io/tags/PDK/"}]},{"title":"VIM学习笔记--状态行","slug":"VIM学习笔记-状态行","date":"2023-12-06T15:33:25.000Z","updated":"2024-08-27T15:59:26.264Z","comments":true,"path":"2023/12/06/VIM学习笔记-状态行/","link":"","permalink":"http://shenguosai.github.io/2023/12/06/VIM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%8A%B6%E6%80%81%E8%A1%8C/","excerpt":"状态行参数列表 参数 说明 %(…%) 定义一个项目 %{n}* %对其余的行使用高亮显示组User n，知道另一个%n*。数字n 必须从1到9。用%*或%0*可以恢复正常的高亮显示。 %&lt; 如果状态行过长，在何处换行。缺省是在开头。 %= 左对齐和右对齐之间的分割点。 % 字符% %B 光标下字符的十六进制形式。 %F 缓冲区的文件完整路径。 %H 如果为帮助缓冲区则显示为HLP。 %L 缓冲区中的行数。 %M 如果缓冲区修改过则显示未+。 %N 打印机页号。 %O 以十六进制方式显示文件中的字符偏移。 %P 文件中光标前的%。 %R 如果缓冲区只读则为RO。 %V 列数。如果与%c相同则为空字符。 %W 如果窗口为预览窗口则为PRV。 %Y 缓冲区的文件类型，如 vim。 %a 如果编辑多行文本，这个字行串就是(&#123;current&#125; of &#123;arguments&#125;)，例如: (5 of 18)。如果在命令行中只有一行，这个字符串为空。 %b 光标下的字符的十进制表示形式。 %c 列号。 %f 缓冲区的文件路径。 %h 如果为帮助缓冲区显示为[Help]。 %l 行号。 %m 如果缓冲区已修改则表示为[+]。 %n 缓冲区号。 %o 在光标前的字符数(包括光标下的字符)。 %p 文件中所在行的百分比。 %r 如果缓冲区为只读则表示为[RO]。 %t 文件名(无路径)。 %v 虚列号。 %w 如果为预览窗口则显示为[Preview]。 %y 缓冲区的文件类型，如[vim]。 %{expr} 表达式的结果。","text":"状态行参数列表 参数 说明 %(…%) 定义一个项目 %{n}* %对其余的行使用高亮显示组User n，知道另一个%n*。数字n 必须从1到9。用%*或%0*可以恢复正常的高亮显示。 %&lt; 如果状态行过长，在何处换行。缺省是在开头。 %= 左对齐和右对齐之间的分割点。 % 字符% %B 光标下字符的十六进制形式。 %F 缓冲区的文件完整路径。 %H 如果为帮助缓冲区则显示为HLP。 %L 缓冲区中的行数。 %M 如果缓冲区修改过则显示未+。 %N 打印机页号。 %O 以十六进制方式显示文件中的字符偏移。 %P 文件中光标前的%。 %R 如果缓冲区只读则为RO。 %V 列数。如果与%c相同则为空字符。 %W 如果窗口为预览窗口则为PRV。 %Y 缓冲区的文件类型，如 vim。 %a 如果编辑多行文本，这个字行串就是(&#123;current&#125; of &#123;arguments&#125;)，例如: (5 of 18)。如果在命令行中只有一行，这个字符串为空。 %b 光标下的字符的十进制表示形式。 %c 列号。 %f 缓冲区的文件路径。 %h 如果为帮助缓冲区显示为[Help]。 %l 行号。 %m 如果缓冲区已修改则表示为[+]。 %n 缓冲区号。 %o 在光标前的字符数(包括光标下的字符)。 %p 文件中所在行的百分比。 %r 如果缓冲区为只读则表示为[RO]。 %t 文件名(无路径)。 %v 虚列号。 %w 如果为预览窗口则显示为[Preview]。 %y 缓冲区的文件类型，如[vim]。 %{expr} 表达式的结果。 例: :set statusline=%F%m%r%h%w\\ [FORMAT=%&#123;&amp;ff&#125;]\\ [TYPE=%Y]\\ [POS=%04l,%04v][%p%%]\\ [LEN=%L] 定义显示颜色 :set statusline=%2*%n%m%r%h%w%*\\ %F\\ %1*[FORMAT=%2*%&#123;&amp;ff&#125;:%&#123;&amp;fenc!=&#39;&#39;?&amp;fenc:&amp;enc&#125;%1*]\\ [TYPE=%2*%Y%1*]\\ [COL=%2*%03v%1*]\\ [ROW=%2*%03l%1*/%3*%L(%p%%)%1*]\\ 自定义高亮显示颜色 hi User1 guifg=gray hi User2 guifg=red hi User3 guifg=white 还可以通过在.vimrc文件中包括以下命令，使状态行根据状态的不同，显示不同的颜色。 function! InsertStatuslineColor(mode) if a:mode == &#39;i&#39; hi statusline guibg=peru elseif a:mode == &#39;r&#39; hi statusline guibg=blue else hi statusline guibg=black endif endfunction au InsertEnter * call InsertStatuslineColor(v:insertmode) au InsertLeave * hi statusline guibg=orange guifg=white hi statusline guibg=black","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"VIM","slug":"VIM","permalink":"http://shenguosai.github.io/tags/VIM/"}]},{"title":"Adobe Acrobat XI Pro 11.0.23下载及激活","slug":"Adobe-Acrobat-XI-Pro-11-0-23下载及激活","date":"2023-12-05T05:33:35.000Z","updated":"2024-09-09T01:13:27.559Z","comments":true,"path":"2023/12/05/Adobe-Acrobat-XI-Pro-11-0-23下载及激活/","link":"","permalink":"http://shenguosai.github.io/2023/12/05/Adobe-Acrobat-XI-Pro-11-0-23%E4%B8%8B%E8%BD%BD%E5%8F%8A%E6%BF%80%E6%B4%BB/","excerpt":"简介Adobe Acrobat XI Pro 是一个著名的功能性程序，用于舒适地处理各种 PDF 文件，它将为您提供以专业水平创建和编辑高质量 PDF 文件的机会。 Acrobat XI Pro 包含高级功能，可以轻松打开许多其他管理功能，具有用户友好的界面。在创建 PDF 文件并在以后进行处理时，Adobe Acrobat 变得绝对不可替代。 Adobe Acrobat XI Pro 包含提供额外互操作性的智能功能。简单，快速，专业。将包括文档，电子表格，电子邮件，图像，视频，3D图形和地图在内的多种内容组合到一个压缩的结构化PDF包中。在查看共享的文档时进行协作。创建交互式表格并快速收集数据。保护和控制有价值的信息。 体验 Adobe®Acrobat®Dynamic PDF 技术创建和共享下一代 PDF 的强大功能。通过电子文档审阅，可填写的 PDF 表单和 Acrobat 服务与同行，客户和合作伙伴进行协作。将多种文件类型组合成一个无缝组织的专业质量 PDF 包。设置密码和权限以保护文档。内容丰富，使您的文档更具吸引力。 Adobe Acrobat XI Pro 是理想的工具，可轻松，快速，专业地处理各种 PDF 文件。","text":"简介Adobe Acrobat XI Pro 是一个著名的功能性程序，用于舒适地处理各种 PDF 文件，它将为您提供以专业水平创建和编辑高质量 PDF 文件的机会。 Acrobat XI Pro 包含高级功能，可以轻松打开许多其他管理功能，具有用户友好的界面。在创建 PDF 文件并在以后进行处理时，Adobe Acrobat 变得绝对不可替代。 Adobe Acrobat XI Pro 包含提供额外互操作性的智能功能。简单，快速，专业。将包括文档，电子表格，电子邮件，图像，视频，3D图形和地图在内的多种内容组合到一个压缩的结构化PDF包中。在查看共享的文档时进行协作。创建交互式表格并快速收集数据。保护和控制有价值的信息。 体验 Adobe®Acrobat®Dynamic PDF 技术创建和共享下一代 PDF 的强大功能。通过电子文档审阅，可填写的 PDF 表单和 Acrobat 服务与同行，客户和合作伙伴进行协作。将多种文件类型组合成一个无缝组织的专业质量 PDF 包。设置密码和权限以保护文档。内容丰富，使您的文档更具吸引力。 Adobe Acrobat XI Pro 是理想的工具，可轻松，快速，专业地处理各种 PDF 文件。 系统要求 1.3GHz或更快的处理器 Microsoft Windows XP，Service Pack 3 (32位) 或 Service Pack 2 (64位)；Windows Server 2003 R2 (32位和64位)；Windows Server 2008 或 2008 R2 (32位和64位)；Windows 7 (32位何64位)；Windows 8 (32位和64位)。 512 MB RAM (推荐1GB) 1.85 GB 可用硬盘空间 1024 x 768 屏幕分辨率 视频硬件加速(可选) 注意 : 对于64位版本的Windows Server 2003 R2 和 Windows XP (带Service Pack 2)，需要 Microsoft Update KB930627 下载Adobe Acrobat XI Pro v11.0.23 Final MI |—adobe.snr.patch.v2.0-painter |—amtemu.v0.9.2.win-painter |—Serial_Keygen X-FORCE |—2A0D5EE6129F2C24A2AC94A4C0ADC880CE99A1A0.torrent |—About the program.txt |—AcrobatPro_11_Web_WWMUI.exe |—AcrobatUpd11023.msp |—Лечение.txt 安装及激活 断开互联网连接。 双击运行安装程序AcrobatPro_11_Web_WWMUI.exe，在安装程序窗口选择使用试用版或订阅。 安装程序(此时安装好的 Adobe Acrobat XI 为 11.0.0版本，可直接转向 5 )。 双击运行安装文件AcrobatUpd11023.msp，重新启动计算机(如有需要)。此程序安装好后版本升至 11.0.23。 激活: 方式一:使用adobe.snr.patch.v2.0-painter 将修补程序adobe.snr.patch.v2.0-painter.exe复制到包含已安装程序的文件夹中(一般情况为:C:\\Program Files (x86)\\Adobe\\Acrobat 11.0\\Acrobat)，然后以管理员身份运行。 从下拉菜单中选择Adobe Acrobat XI Pro(32-bit)，然后点击Patch。 方式二:使用amtemu.v0.9.2.win-painter 将修补程序amtemu.v0.9.2-painter.exe复制到包含已安装程序的文件夹中(一般情况为:C:\\Program Files (x86)\\Adobe\\Acrobat 11.0\\Acrobat)，然后以管理员身份运行。 从下拉菜单中选择Adobe Acrobat XI，然后单击Install。 如果需要，在打开的窗口中转到软件安装位置，然后选择amtlib.dll文件，等待软件被激活。 激活完成，打开网络连接。 关于闪退原因及解决办法在上述安装及激活完成后，Adobe Acrobat XI Pro会出现闪退问题，原因是联机版权校验问题，更多深层次的原理这里不做过多讨论，本文主要讲解如何避免闪退。既然原因找到了，就可以从以下方面着手进行处理：阻拦该软件进行联网校验即可。办法很多，这里提供两种稍微容易操作的方法进行说明。 域名欺骗，添加伪造的host解析条目Acrobat 校验的域名为: acroipm.adobe.com，因此只要将该域名定位到一个假的 IP 地址即可。最简单的办法就是在C:\\Windows\\System32\\drivers\\etc\\host文件中添加条目:127.0.0.1 acroipm.adobe.com 注意&gt;: 编辑host需要管理员权限 阻断Acrobat主程序联网这里使用windows自带防火墙进行阻断。具体操作步骤如下:开始 -&gt; 设置 -&gt; 更新与安全，打开更新与安全设置，点击 Windows 安全中心，点击打开防火墙和网络保护界面，点击高级设置，在高级设置界面中选择出站规则然后点击新建规则创建出站规则，在弹出的新建规则向导界面中，选择要创建的规则类型为程序，然后点击下一步选择指定的程序路径C:\\Program Files (x86)\\Adobe\\Acrobat 11.0\\Acrobat\\Acrobat.exe，然后点击下一步，在操作类型界面选择阻止连接，点击下一步，在选择何时应用规则的界面选择所有的场景并点击下一步，在命名界面中填写名称及描述，然后点击完成即可。注意: 本方法的前提是要保障 Windows Defender 防火墙对三个应用区域(域网络、专用网络、公用网络)都已经启用。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Adobe","slug":"Adobe","permalink":"http://shenguosai.github.io/tags/Adobe/"}]},{"title":"使用命令行抽取寄生(Calibre)","slug":"使用命令行抽取寄生-Calibre","date":"2023-12-03T15:12:02.000Z","updated":"2024-08-27T15:42:44.784Z","comments":true,"path":"2023/12/03/使用命令行抽取寄生-Calibre/","link":"","permalink":"http://shenguosai.github.io/2023/12/03/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F-Calibre/","excerpt":"","text":"% calibre -lvs -hier -auto rule.file % calibre -xrc -pdb -rcc -xcell cell.file rule.file % calibre -xrc -fmt -all -xcell cell.file rule.file rule.file 中应指定layout(gds)的路径及文件名Instructions for Extracting Parasitics for your Layout using xCalibre Tool","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Calibre","slug":"Calibre","permalink":"http://shenguosai.github.io/tags/Calibre/"}]},{"title":"抽取寄生时屏蔽掉在spice model中已经存在的寄生电容","slug":"抽取寄生时屏蔽掉在spice-model中已经存在的寄生电容","date":"2023-12-03T14:14:43.000Z","updated":"2024-08-27T15:25:35.401Z","comments":true,"path":"2023/12/03/抽取寄生时屏蔽掉在spice-model中已经存在的寄生电容/","link":"","permalink":"http://shenguosai.github.io/2023/12/03/%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F%E6%97%B6%E5%B1%8F%E8%94%BD%E6%8E%89%E5%9C%A8spice-model%E4%B8%AD%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E5%AF%84%E7%94%9F%E7%94%B5%E5%AE%B9/","excerpt":"在提取寄生参数时，除了需要关注金属导体的寄生电容外，还需要分析mos器件的节点寄生参数提取是否准确。下面是一个典型的 nmos 4端器件: 该mos管的4个节点 D, G, S, B 的寄生电容是否准确呢？首先用calibre xrc提取一下其寄生参数，结果如下: cc_1 S G 3.32511f cc_2 S D 6.73464e-19 cc_3 S B 12.7622f cc_4 G D 3.32511f cc_5 G B 1.16212f cc_6 D B 12.7506f","text":"在提取寄生参数时，除了需要关注金属导体的寄生电容外，还需要分析mos器件的节点寄生参数提取是否准确。下面是一个典型的 nmos 4端器件: 该mos管的4个节点 D, G, S, B 的寄生电容是否准确呢？首先用calibre xrc提取一下其寄生参数，结果如下: cc_1 S G 3.32511f cc_2 S D 6.73464e-19 cc_3 S B 12.7622f cc_4 G D 3.32511f cc_5 G B 1.16212f cc_6 D B 12.7506f 上述寄生电容分为4类: Gate 到 Source/Drain 电容 Source/Drain 到 Bulk 电容 Gate 到 Bulk 电容 Source 到 Drain 电容 由于在spice model中一般会自动把上述4类电容考虑，如果寄生参数提取中再提取一遍，就会发生重复提取。因此，需要把这4类电容屏蔽，屏蔽方法如下: 屏蔽 Gate 到 Source/Drain 电容PEX IGNORE CAPACITANCE ALL poly nsd PEX IGNORE CAPACITANCE ALL poly psd 屏蔽 Gate 到 Bulk 电容，其中 ALLGATE 是 mark layerPEX IGNORE CAPATANCE DEVICE INTRINSIC poly ALLGATE 设置上述3个参数后，提取结果如下: cc_1 S D 0.00129446f cc_2 S B 12.7622f cc_3 G B 0.211916f cc_4 D B 12.7506f 可以看到，Gate 到 Source/Drain 的电容没有了，被屏蔽掉了。Gate 到 Bulk 的电容比刚才的值小了，说明在mos管区域的电容被屏蔽了，只剩下 Gate 露头的电容了，这个符合预期。但是，Source/Drain 到 Bulk 的电容没有屏蔽掉，该如何设置呢？首先看一下再原始的工艺文件定义中，有如下语句: diffusion = diff &#123; thickness = 0.004 min_width = 0.15 min_spacing = 0.18 resistivity = 10 src_drn_layers = &#123;nsd_psd_&#125; &#125; 注意 diffusion, src_drn_layers是关键字，nsd_psd_ 是两个 process layer。calibre命令文件中原来有如下语句: PEX MAP diff NTAP PTAP nsd psd 它把 nsd, psd 映射到了diff层，但是没有告诉工具映射到 nsd_psd_层。如果修改该语句如下: PEX MAP diff NTAP PTAP PEX MAP nsd_nsd_ PEX MAP psd_psd_ 当calibre xrc识别到该语句后，自动会把nsd之间的相互电容屏蔽掉，也自动会把 nsd/psd 到衬底的电容屏蔽掉。屏蔽后提取结果如下: cc_1 S B 0.0777512f cc_2 G B 0.211916f cc_3 D B 0.0540989f 以上3个电容都是连接到mos管的金属之间的耦合电容了，电容值很小，不是器件本身的电容，符合预期。 如果用户在原始的工艺定义中没有用 diffusion 的关键字，而是用 conductor 的关键字，如下: conductor = diff &#123; thickness = 0.004 min_width = 0.15 min_spacing = 0.18 resistivity = 10 &#125; 则用户需要增加额外的语句来屏蔽 source 到 drain，source 到衬底的寄生电容。 屏蔽 Gate 到 Source/Drain 的电容PEX IGNORE CAPATANCE ALL poly nsd PEX IGNORE CAPATANCE ALL poly psd 屏蔽 Gate 到 BulkPEX IGNORE CAPACITANCE DEVICE INTRINSIC poly ALLGATE 屏蔽 Source/Drain 到 BulkPEX IGNORE CAPACITANCE DEVICE INTRINSIC nsd ALLGATE 屏蔽 Source 到 DrainPEX IGNORE CAPACITANCE DEVICE nsd nsd ALLGATE 可以看到，这种写法比较繁琐，不如前面的方法简洁。 总结，屏蔽掉 spice model 中的寄生参数最简单的方法是:在工艺文件定义中用 diffusion 的关键字，用 src_drn_layers 指定具体的layer名称。然后在提取命令文件中，把 gate 的电容通过 PEX IGNORE 语句来屏蔽掉，不需要写 source, drain 的屏蔽语句。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Calibre","slug":"Calibre","permalink":"http://shenguosai.github.io/tags/Calibre/"}]},{"title":"Sublime Text (Build 4169) 注册方法","slug":"Sublime-Text-Build-4169-注册方法","date":"2023-12-02T16:37:03.000Z","updated":"2024-08-27T15:58:09.913Z","comments":true,"path":"2023/12/03/Sublime-Text-Build-4169-注册方法/","link":"","permalink":"http://shenguosai.github.io/2023/12/03/Sublime-Text-Build-4169-%E6%B3%A8%E5%86%8C%E6%96%B9%E6%B3%95/","excerpt":"截止2023年12月2日，最新版本是Sublime Text 4 (Build 4169)。注册方法如下: 安装软件: 去官方网站下载并安装，Sublime Text - Text Editing, Done Right 修改sublime的执行文件: 使用16进制编辑器或打开https://hexed.it 点击“打开文件”打开 Sublime Text 安装目录下的 sublime_text.exe 在右边的“搜索”中输入807805000f94c1并按回车键 将搜索方案中的“启用替换”选中，在“替换为”中输入c64005014885c9即可 点击“另存为”，保存修改后的文件到本地，将文件名设定为 sublime_text.exe 进入安装目录，备份原 sublime_text.exe 文件(如修改为 sublime_text_bak20231202.exe ) 将修改后刚刚保存到本地的 sublime_text.exe 复制到原 Sublime Text 4 的安装目录中","text":"截止2023年12月2日，最新版本是Sublime Text 4 (Build 4169)。注册方法如下: 安装软件: 去官方网站下载并安装，Sublime Text - Text Editing, Done Right 修改sublime的执行文件: 使用16进制编辑器或打开https://hexed.it 点击“打开文件”打开 Sublime Text 安装目录下的 sublime_text.exe 在右边的“搜索”中输入807805000f94c1并按回车键 将搜索方案中的“启用替换”选中，在“替换为”中输入c64005014885c9即可 点击“另存为”，保存修改后的文件到本地，将文件名设定为 sublime_text.exe 进入安装目录，备份原 sublime_text.exe 文件(如修改为 sublime_text_bak20231202.exe ) 将修改后刚刚保存到本地的 sublime_text.exe 复制到原 Sublime Text 4 的安装目录中 如此便成功激活了，可以发现原来标题栏中的 “Unregistered” 变为了 “ADMIN”","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"Sublime","slug":"Sublime","permalink":"http://shenguosai.github.io/tags/Sublime/"}]},{"title":"英语--肯定句变否定句","slug":"英语-肯定句变否定句","date":"2023-12-01T00:50:58.000Z","updated":"2024-08-27T15:46:28.865Z","comments":true,"path":"2023/12/01/英语-肯定句变否定句/","link":"","permalink":"http://shenguosai.github.io/2023/12/01/%E8%8B%B1%E8%AF%AD-%E8%82%AF%E5%AE%9A%E5%8F%A5%E5%8F%98%E5%90%A6%E5%AE%9A%E5%8F%A5/","excerpt":"肯定句变否定句规则:一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。例如:|肯定句|否定句||——|——||I am a student.|I am not a student.|Amy is a good girl.|Amy is not(isn\\’t) a good girl.|These flowers are very beautiful.|These flowers are not(aren\\’t) very beautiful.|I can swim.|I can not(can\\’t) swim.|There are some books on the table.|There are not(aren\\’t) any books on the table.|Jack is a doctor.|Jack is not(isn\\’t) a doctor.|I was a student ten years ago.|I was not(wasn\\’t) a student ten years ago. 注:&ensp;(1) some、and用于肯定句中，any、or用于否定句中； &ensp;(2) was是is的过去式，were是are的过去式。","text":"肯定句变否定句规则:一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。例如:|肯定句|否定句||——|——||I am a student.|I am not a student.|Amy is a good girl.|Amy is not(isn\\’t) a good girl.|These flowers are very beautiful.|These flowers are not(aren\\’t) very beautiful.|I can swim.|I can not(can\\’t) swim.|There are some books on the table.|There are not(aren\\’t) any books on the table.|Jack is a doctor.|Jack is not(isn\\’t) a doctor.|I was a student ten years ago.|I was not(wasn\\’t) a student ten years ago. 注:&ensp;(1) some、and用于肯定句中，any、or用于否定句中； &ensp;(2) was是is的过去式，were是are的过去式。 二、没有be动词(am、is、are)和情态动词（can、could、may、must、should、will、would等）的，在动词前面加don\\’t，doesn\\’t(一般现在时第三人称单数)，didn\\’t(一般过去时)，动词恢复成原形，some变any，and变or，too变either，其他的照抄。例如:|肯定句|否定句||——|——||I like math.|I do not(don\\’t) like math.|Jack like math, too.|Jack does not(doesn\\’t) like math, either.|They like bananas and apples.|They do not(don\\’t) like bananas or apples.|Lily gets up at six every morning.|Lily does not(doesn\\’t) get up at six every morning.|His father likes playing football.|His father does not(doesn\\’t) like playing football.|I went fishing yesterday.|I did not(didn\\’t) go fishing yesterday. 注:&ensp;(1) 当句子是一般过去时态时，在动词前面加didn\\’t,动词恢复成原形； &ensp;(2) 当句子是一般现在时态，且主语是第三人称单数时，在动词前加doesn\\’t，动词恢复成原形； &ensp;(3) 当句子是一般现在时态，且主语不是第三人称单数时，在动词前加don\\’t。 三、肯定句变否定句专项练习。 table th:first-of-type { width: 50% } table th:nth-of-type(2) { width: 50% } |肯定句|否定句||——|——||He is my father.|||This is a cat.|||These are his books.|||David can swim.|||Stand up.|||There are some books and two pencils on the desk.|||We come from Shandong.|||Milli has breakfast at 7:30 in the morning.|||My parents like watching TV at night.|||I often play basketball with my friends.|||His brother likes swinmming and running.|||My mother and I visited my grandparents last week.|||I have many friends here.|||Tom went to Beijing last summer vacation.|||Jack likes playing football after school, too.|| Answers 肯定句 否定句 He is my father. He is not(isn`t) my father. This is a cat. This is not(isn\\’t) a cat. These are his books. These are not(aren\\’t) his books David can swim. David can not(can\\’t) swim. Stand up. Do not(Don\\’t) stand up. There are some books and two pencils on the desk. There are not(aren\\’t) some books or two pencils on the desk. We come from Shandong. We do not(don\\’t) come from Shandong. Milli has breakfast at 7:30 in the morning. Milli does not(doesn\\’t) have breakfast at 7:30 in the morning. My parents like watching TV at night. My parents do not(don\\’t) like watching TV at night. I often play basketball with my friends. I do not(don\\’t) often play basketball with my friends. His brother likes swinmming and running. His brother does not(doesn\\’t) like swimming and running. My mother and I visited my grandparents last week. My mother and I did not(didn\\’t) visit my grandparents last week. I have many friends here. I do not(don\\’t) have many friends here. Tom went to Beijing last summer vacation. Tom did not(didn\\’t) go to Beijing last summer vacation. Jack likes playing football after school, too. Jack does not(doesn\\’t) like playing football after school, either.","categories":[{"name":"杂学","slug":"杂学","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/"},{"name":"社科教育等","slug":"杂学/社科教育等","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E7%A4%BE%E7%A7%91%E6%95%99%E8%82%B2%E7%AD%89/"}],"tags":[{"name":"英语","slug":"英语","permalink":"http://shenguosai.github.io/tags/%E8%8B%B1%E8%AF%AD/"}]},{"title":"古诗词欣赏—20231127","slug":"古诗词欣赏—20231127","date":"2023-11-27T06:43:08.000Z","updated":"2024-08-27T15:38:13.009Z","comments":true,"path":"2023/11/27/古诗词欣赏—20231127/","link":"","permalink":"http://shenguosai.github.io/2023/11/27/%E5%8F%A4%E8%AF%97%E8%AF%8D%E6%AC%A3%E8%B5%8F%E2%80%9420231127/","excerpt":"表达随遇而安：时光清浅处，一步一安然。 表达岁月静好：山野万万里，余生路漫。日暮酒杯淡饭，一半一半 夸心上人美好：山有扶苏，隰（xí）有荷华。 想说坚韧不拔：冬青树上挂凌霄，岁晏花凋树不凋。 对于好朋友：半师半友半知己，半慕半尊半倾心。 乐观面对上火：时间煮雨，岁月缝花。以欢喜心，慢度日常。 琐碎诗意交织：手执烟火以谋生，心怀诗意以谋爱。 表达对另一半的爱意：日出有盼，日落有念。心有所期，忙而不茫。","text":"表达随遇而安：时光清浅处，一步一安然。 表达岁月静好：山野万万里，余生路漫。日暮酒杯淡饭，一半一半 夸心上人美好：山有扶苏，隰（xí）有荷华。 想说坚韧不拔：冬青树上挂凌霄，岁晏花凋树不凋。 对于好朋友：半师半友半知己，半慕半尊半倾心。 乐观面对上火：时间煮雨，岁月缝花。以欢喜心，慢度日常。 琐碎诗意交织：手执烟火以谋生，心怀诗意以谋爱。 表达对另一半的爱意：日出有盼，日落有念。心有所期，忙而不茫。 古人对万物的雅称： 太阳：扶光 月亮：望舒 梅花：疏影 风筝：纸鸢 圆月：冰轮 茄子：落苏 小草：柔甲 天河：星汉 天空：碧落 大地：坤灵 雪花：寒酥 风 ：扶摇 云 ：纤凝 雨 ：灵泽 茶 ：不夜侯 酒 ：忘忧君 你更喜欢谁的相思 纳兰性德：人生若只如初见，何事秋风悲画扇。 李清照：花自飘零水自流，一种相思，两处闲愁。 白居易：群埋泉下泥销骨，我寄人间雪满头。 辛弃疾：若教眼底无离恨，不信人间有白头。 温庭筠：玲珑骰子安红豆，入骨相思知不知。 李商隐：直道相思了无益，未妨惆怅是清狂。 王国维：最是人间留不住，朱颜辞镜花辞树。 欧阳修：泪眼问花花不语，乱红飞过秋千去。 卓文君：愿得一心人，自首不相离。 唐 寅：晓看天色暮看云，行也思君，坐也思君。 元 稹：曾经沧海难为水，除却巫山不是云。 李 白：相思相见知何日，此时此夜难为情。 李 煜：春花秋月何时了？往事知多少。 柳 永：衣带渐宽终不悔，为伊消得人憔悴。 苏 轼：十年生死两茫茫，不思量，自难忘。 古诗词中的表白： 三生清风三里路，步步春风再无你。（我终于失去你了） 我与春风皆过客，你携秋水揽星河。（我不喜欢你了） 既许一人以偏爱，愿尽余生之慷慨。（我这一生都会对你好，爱你） 半身风雨半身伤，半句别恨半句凉。（真的很难过） 无人与我立黄昏，无人问我粥可温。（孤单一人） 从此音尘各悄然，春山如黛草如烟。（以后各奔东西，不必联系） 苍天不解人情暖，冷眼看花尽是悲。（没人能够读懂我） 从此烟雨落金城，一人撑伞两人行。（我们在一起了） 古人拒绝表白： 一身清贫怎敢入繁华，两袖清风怎敢误佳人。（我配不上你） 枝上柳绵吹又少，天涯何处无芳草。（你追谁都行，别追我） 感郎千金意，惭无倾城色。（你很好，是我配不上你） 子非我良人，亦非我最新。（你不是我喜欢的类型） 心似流水不倦花，我如明月君勿恋。（你不要爱上我） 万水千山都是情，冥冥之中靠天定。（我们之间不合适） 落花有意随流水，流水无心恋落花。（你喜欢我，但我不喜欢你） 都兰之猗猎扬扬其香，不采而佩于兰何伤。（你是个好人，我不想伤害你） 用古文表达失恋： 【青铜】一别两宽，各自欢喜。 【白银】你有你的清欢渡，我有我的不归路。 【黄金】从此山水不相逢，莫道彼此长和短。 【钻石】柳絮随风各西东，物是人非事事休。 【王者】山河岁月空惆怅，今生今世已惘然。","categories":[{"name":"文学爱好","slug":"文学爱好","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/"},{"name":"诗歌","slug":"文学爱好/诗歌","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E8%AF%97%E6%AD%8C/"}],"tags":[]},{"title":"Hexo字数统计与阅读统计","slug":"Hexo字数统计与阅读统计","date":"2023-11-20T12:54:12.000Z","updated":"2024-08-27T15:53:31.752Z","comments":true,"path":"2023/11/20/Hexo字数统计与阅读统计/","link":"","permalink":"http://shenguosai.github.io/2023/11/20/Hexo%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%B8%8E%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/","excerpt":"安装hexo-wordcount插件npm install hexo-wordcount --save 安装hexo-symbols-count-time插件npm install hexo-symbols-count-time --save 安装eslintnpm install eslint --save","text":"安装hexo-wordcount插件npm install hexo-wordcount --save 安装hexo-symbols-count-time插件npm install hexo-symbols-count-time --save 安装eslintnpm install eslint --save 在hexo配置文件中添加symbols_count_time配置语句symbols_count_time: symbols: true # 文字字数统计 time: true # 文章阅读时长 total_symbols: true # 站点总字数统计 total_time: true # 站点总阅读时长 exclude_codeblock: false # 排除代码字数统计 在主题配置文件中添加symbols_count_time配置语句symbols_count_time: separated_meta: true # 是否另起一行(true的话不和发表时间等同一行) item_text_post: true # 首页文章统计数量前是否显示文字描述(本文字数、阅读时长) item_text_total: false # 页面底部统计数量前是否显示文字描述(站点总字数、站点阅读时长) awl: 4 # Average Word Lenth wpm: 275 # Words Per Minute（每分钟阅读词数 suffix: mins. 在主题配置文件中配置wordcountpost_wordcount: # 字数统计 item_text: true # 是否显示文字 wordcount: true # 显示字数 min2read: true # 显示阅读时间 totalcount: true # 显示总数 seperated_meta: true # 是否分开 设置完成！","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"}]},{"title":"更换新电脑后，hexo无损重新部署","slug":"更换新电脑后，hexo无损重新部署","date":"2023-11-14T13:44:02.000Z","updated":"2024-08-27T15:28:18.424Z","comments":true,"path":"2023/11/14/更换新电脑后，hexo无损重新部署/","link":"","permalink":"http://shenguosai.github.io/2023/11/14/%E6%9B%B4%E6%8D%A2%E6%96%B0%E7%94%B5%E8%84%91%E5%90%8E%EF%BC%8Chexo%E6%97%A0%E6%8D%9F%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/","excerpt":"趁着双十一在京东￥499入手了樊想S500PRO的2T SSD固态硬盘。到货后就迫不及待的换下了原来笔记本里500G的老硬盘。然后发现换硬盘新装系统后各种软件的安装和配置都要重新来一遍。 下面记录下hexo的迁移过程。","text":"趁着双十一在京东￥499入手了樊想S500PRO的2T SSD固态硬盘。到货后就迫不及待的换下了原来笔记本里500G的老硬盘。然后发现换硬盘新装系统后各种软件的安装和配置都要重新来一遍。 下面记录下hexo的迁移过程。 首先将原硬盘的hexo目录拷贝到新硬盘。我自己的目录是D:\\99_Git\\blog。 配置hexo环境： 安装nodejs和git，nodejs安装好才可以使用npm安装hexo，git就是用来上传博客用的；（如果不希望多装软件可只安装git而不需要git bash） 如果可以将原来电脑中的C:\\User\\username\\.gitconfig文件和C:\\User\\username（斜体）\\.ssh\\目录拷贝到同目录下就不需要重新配置了。(其中username是自己电脑的用户名)如果没有就只能重新设置并生成ssh key文件了，命令如下：git config --global user.name &quot;username&quot; git config --global user.mail &quot;user mail address&quot; ssh-keygen -t rsa -C &quot;user mail address&quot; 进入到hexo部署文件夹，执行命令安装hexo和hexo-depolyer-git插件npm install hexo-cli -g npm install hexo-deployer-git --save 然后这里会出现一个问题:我是使用vs code中的终端来操作的，怎么样也识别不了hexo命令，提示如下：（由于忘记截图了，网上找了张类似的） 解决方法可以通过访问“请参阅……”后面的链接查看，核心问题是power shell的安全策略，将hexo命令视为了不安全脚本，不允许执行。只需要放开权限就行。通过管理员权限运行power shell，然后输入命令：set-ExecutionPolicy RemoteSigned选择“Y”即可。然后就可以正常在VS Code的终端里使用hexo了。 碰到的第二个问题：上传时提示有换行符的问题，在执行hexo d后会出现整屏的提示信息，是我这个强迫症患者所无法忍受的。 解决方法：通过执行命令git config --global core.autocrlf false将默认的换行符转换功能去掉。```提交时转换为LF，检出时转换为CRLF（默认）git config —global core.autocrlf true 提交和检出时均不做换行符转换（修改）git config —global core.autocrlf false``` 图床设置下载插件vs code的插件PicGo，配置方法网上有很多，但是需要注意一点在Picgo &gt; Pic Bed &gt; Github: Custom Url中需要填入图传链接格式为https://raw.githubusercontent.com/用户名/仓库名/分支名，一开始这个地方没有设置对对上传没有影响但是在博客中看不到图片。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"}]},{"title":"在自己搭建的hexo博客上发布文章","slug":"Hexo发布文章","date":"2023-11-13T01:19:15.440Z","updated":"2024-08-27T15:53:17.573Z","comments":true,"path":"2023/11/13/Hexo发布文章/","link":"","permalink":"http://shenguosai.github.io/2023/11/13/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/","excerpt":"在/source/_posts目录下建立.md文件并撰写内容；编辑文章时要在第一行中加上title，如果不按此格式来写的话在hexo博客中就会显示这篇文章没有名字。","text":"在/source/_posts目录下建立.md文件并撰写内容；编辑文章时要在第一行中加上title，如果不按此格式来写的话在hexo博客中就会显示这篇文章没有名字。 ``` title: 文章题目2. 命名完成后，将终端当前目录更改为```/source/_posts 输入hexo g(完整命令为hexo generate)，生成静态文件； 输入hexo s(完整命令为hexo server)，启动local服务器，主要用于本地预览。完成后打开浏览器输入http://localhost:4000，就会发现多了刚才写的那篇博客。 输入hexo d(完整命令为hexo deploy)，将本地文件发布到github仓库上。 每次对hexo博客上的.md文件进行更改后都要重复步骤2，这样更改的内容才能在hexo博客上显示。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"}]},{"title":"Hexo搭建个人博客挂载Github(未完)","slug":"Hexo搭建私人博客挂载github","date":"2023-11-13T01:19:15.440Z","updated":"2024-08-27T15:53:02.149Z","comments":true,"path":"2023/11/13/Hexo搭建私人博客挂载github/","link":"","permalink":"http://shenguosai.github.io/2023/11/13/Hexo%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%82%E8%BD%BDgithub/","excerpt":"一、准备工作1.GitGit官网下载下载完成后，双击安装包，选项全部默认，一路Next安装完成。测试安装成功，输入git --version显示版本信息即可。 shenguosai@LAPTOP-FBGFH99L ~$ git --version git version 2.37.1","text":"一、准备工作1.GitGit官网下载下载完成后，双击安装包，选项全部默认，一路Next安装完成。测试安装成功，输入git --version显示版本信息即可。 shenguosai@LAPTOP-FBGFH99L ~$ git --version git version 2.37.1 2.Node.jsNode官网下载下载完成后，双击安装包，选项全部默认，一路Next安装完成。测试安装成功，输入node -v显示版本信息即可。 shenguosai@LAPTOP-FBGFH99L ~$ node -v v18.15.0 3.Gitee或GitHub(目前只成功挂载GitHub@2023/8/3)准备Gitee或GitHub账号，这个是用来托管的，可以不需要自己的服务器和域名就可以拥有自己的博客。Gitee官网GitHub官网注册完成后，创建一个仓库，然后就可以将hexo挂载到这个仓库中了。创建仓库的时候用 YourName.github.io 或 YourNama.gitee.io ，这样后面托管的域名比较好记。 二、博客搭建1.Hexo下载新建一个文件夹作为博客的顶级目录。打开cmd，进入到新建的文件夹目录，输入npm install hexo-cli -g以安装hexo。 2.Hexo初始化安装完成后，输入hexo init blog进行初始化。注：blog就是步骤1中新建的目录。初始化后，文件夹下就会有下方形式的目录结构。设置好图床后添加 3.启动博客使用终端将目录进入到blog下 shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ la total 245 drwxrwxr-x 1 shenguos 197121 0 Aug 2 18:38 . drwxrwxr-x 1 shenguos 197121 0 Aug 2 15:13 .. drwxrwxr-x 1 shenguos 197121 0 Aug 3 00:39 .deploy_git drwxrwxr-x 1 shenguos 197121 0 Aug 2 15:14 .github -rw-rw-r-- 1 shenguos 197121 82 Aug 2 15:14 .gitignore -rw-rw-r-- 1 shenguos 197121 0 Aug 2 15:14 _config.landscape.yml -rw-rw-r-- 1 shenguos 197121 2582 Aug 3 00:01 _config.yml -rwxrwxr-x 1 shenguos 197121 352551 Aug 3 00:38 db.json drwxrwxr-x 1 shenguos 197121 0 Aug 2 15:34 node_modules -rwxrwxr-x 1 shenguos 197121 92731 Aug 2 15:34 package-lock.json -rw-rw-r-- 1 shenguos 197121 655 Aug 2 15:34 package.json drwxrwxr-x 1 shenguos 197121 0 Aug 3 00:08 public drwxrwxr-x 1 shenguos 197121 0 Aug 2 15:14 scaffolds drwxrwxr-x 1 shenguos 197121 0 Aug 2 15:14 source drwxrwxr-x 1 shenguos 197121 0 Aug 2 23:53 themes shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ hexo s INFO Validating config INFO Start processing INFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 本地静态网页就启动了，在浏览器输入http://localhost:4000/就能看到如下网页。设置好图床后添加 三、挂载到GitHub上1.挂载须知a) git配置git config --global user.name &quot;shenguosai&quot; //用户名 git config --global user.email &quot;xxx@xx.com&quot; //邮箱 用户名和邮箱根据注册github的信息自行修改。 b) SSH密钥挂载到GitHub上时，为了方便，我们要创建ssh密钥，使用ssh连接更为方便的推送。方法：ssh-keygen -C &quot;xxxx@xxx.com&quot;就会生成密钥，Linux用户在~/.ssh/中，Windows用户在C:/Users/xxx/.ssh/中。在github上绑定公钥:Settings-&gt;SSH and GPG keys-&gt;SSH keys-&gt;New SSH key将生成的id_rsa.pub中的文本内容复制到Key框中，点击Add SSH key。此处说明需要添加图片，设置好图床后添加。输入ssh -T git@github.com，如果如下所示，出现你的用户名即配置成功。 shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ ssh -T git@github.com X11 forwarding request failed on channel 0 Hi shenguosai! You&#39;ve successfully authenticated, but GitHub does not provide shell access. c) Token2.开始挂载打开博客目录下的.config.yml(hexo的配置文件)，下拉到最下方。 deploy: type: git repo: https://ghp_xxxxxx@github.com/shenguosai/shenguosai.github.io.git branch: master ghp_xxxxxx即使上面申请的token。然后输入hexo cl清除缓存，完成代码为hexo clean。清除缓存后输入hexo g生成静态网页，然后输入hexo d推送到GitHub。","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"}]},{"title":"Elecom MR-C18BK 读卡器","slug":"Elecom-MR-C18BK-读卡器","date":"2023-09-13T11:40:45.000Z","updated":"2024-08-27T15:52:23.505Z","comments":true,"path":"2023/09/13/Elecom-MR-C18BK-读卡器/","link":"","permalink":"http://shenguosai.github.io/2023/09/13/Elecom-MR-C18BK-%E8%AF%BB%E5%8D%A1%E5%99%A8/","excerpt":"这两天帮父亲新接手的球馆弄监控，花了一番功夫终于把已经停产的十几年前的监控摄像头搞定，发现里面的TF卡却坏掉了。于是在京东上买了BanQ的Joy联名TF卡，买来之后插上读卡器发现无法识别，申请换新之后还是无法识别，这才开始怀疑自己的读卡器是不是有问题。但是前两天刚试过家里的4G的TF卡读取是没有问题的。于是从同事那里借来较新的读卡器发现成功读出来了，就怀疑自己应该也是十几年前买的读卡器是不是不支持大容量TF卡，于是到主页上查找了一番，发现Micro SD卡容量最大支持到16GB。","text":"这两天帮父亲新接手的球馆弄监控，花了一番功夫终于把已经停产的十几年前的监控摄像头搞定，发现里面的TF卡却坏掉了。于是在京东上买了BanQ的Joy联名TF卡，买来之后插上读卡器发现无法识别，申请换新之后还是无法识别，这才开始怀疑自己的读卡器是不是有问题。但是前两天刚试过家里的4G的TF卡读取是没有问题的。于是从同事那里借来较新的读卡器发现成功读出来了，就怀疑自己应该也是十几年前买的读卡器是不是不支持大容量TF卡，于是到主页上查找了一番，发现Micro SD卡容量最大支持到16GB。 商品说明链接","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"监控","slug":"监控","permalink":"http://shenguosai.github.io/tags/%E7%9B%91%E6%8E%A7/"}]},{"title":"无门关·平常是道","slug":"无门关·平常是道","date":"2023-09-13T01:11:08.000Z","updated":"2024-08-27T15:45:33.467Z","comments":true,"path":"2023/09/13/无门关·平常是道/","link":"","permalink":"http://shenguosai.github.io/2023/09/13/%E6%97%A0%E9%97%A8%E5%85%B3%C2%B7%E5%B9%B3%E5%B8%B8%E6%98%AF%E9%81%93/","excerpt":"无门关·平常是道 南宋 慧开 春有百花秋有月，夏有凉风冬有雪。 若无闲事挂心头，便是人间好时节。 善是青松恶是花，看看眼前不如它。 有朝一日遭霜打，只见青松不见花。 面上无嗔是供养，口里无嗔出妙香。 心中无嗔无价宝，不断不灭是真常。 佛在灵山莫远求，灵山只在汝心头。 人人有个灵山塔，好向灵山塔下修。","text":"无门关·平常是道 南宋 慧开 春有百花秋有月，夏有凉风冬有雪。 若无闲事挂心头，便是人间好时节。 善是青松恶是花，看看眼前不如它。 有朝一日遭霜打，只见青松不见花。 面上无嗔是供养，口里无嗔出妙香。 心中无嗔无价宝，不断不灭是真常。 佛在灵山莫远求，灵山只在汝心头。 人人有个灵山塔，好向灵山塔下修。这是一首禅诗，诗名为《无关门·平常是道》，出自无门关(又称《禅宗无门关》)第十九则，南宋无门慧开禅师撰。释义：春天有百花，夏天有凉风，秋天有明月，冬天有瑞雪，但最重要的还是一个人心上没有那些人世间的俗事(功名利禄等等)，可以开开心心地欣赏这美景，这才是好季节。原文如下： 《无门关》十九 平常是道南泉因赵州问，如何是道。泉云，平常心是道。州云，还可趣向否。泉云，拟向即乖。州云，不拟争知是道。泉云，道不属知，不属不知。知是妄觉，不知是无记。若真达不拟之道，犹如太虚阔然洞豁，岂可强是非也。州于言下顿悟。【无门曰】南泉被赵州发问，直得瓦解冰消分疏不下。赵州纵饶悟去，更参三十年始得。【颂曰】春有百花秋有月，夏有凉风冬有雪，若无闲事挂心头，便是人间好时节。译文：赵州问南泉：“什么是道？”南泉回答：“平常心是道。”赵州说：“可还有什么趣向吗？”南泉说：“只要一拟定方向，就背离这个道了。”赵州说：“如果不预知方向，又怎么知道这就是道呢？”南泉说：“道不属于知，也不属于不知，知是妄觉，不知是无记，如果真的到达不预知的道，才会像太虚一样，阔然洞豁。这道又怎能预先拟定，强加以它是或非呢？”赵州听完这番话后，当下顿悟。【评唱】无门说：“南泉被赵州发问，直到赵州的疑团瓦解冰消。话虽这么说，赵州纵然当下已顿悟，可是非得再参上三十年不可。”【颂曰】春天百花盛开，秋夜月色皎洁。夏天凉风徐徐，冬天白雪皑皑。一个人只要没有闲杂的事情挂在心头，那便是人间最好的时节。在此基础上衍生出谒子： 无门关·平常是道 南宋 慧开 春有百花秋有月，夏有凉风冬有雪。 若无闲事挂心头，便是人间好时节。 善是青松恶是花，看看眼前不如它。 有朝一日遭霜打，只见青松不见花。 面上无嗔是供养，口里无嗔出妙香。 心中无嗔无价宝，不断不灭是真常。 佛在灵山莫远求，灵山只在汝心头。 人人有个灵山塔，好向灵山塔下修。&lt;/font&gt;南宋高僧慧开禅师，杭州钱塘人，俗姓梁，生於宋孝宗淳熙十年。因苦参“无”字话头而开悟，慧开又特别着重“无”字法门，每天对着“无”字苦苦参究，故成为无门和尚。慧开在法堂内经行，边走边参详“无”字话头。在夕阳西下、夜幕沉沉的寂寥中，从遥遥的斋堂那一头，传来一阵接一阵绵绵密密的鼓声，豁然如排山倒海般，慧开胸中久远以来的疑团突然被鼓声撞散，顿时消失，豁然而悟。慧开禅师心中一片大光明，高唱谒颂： 青天白日一声雷，大地群生眼豁开。 万家森罗齐稽首，须弥勃跳舞三台。一派天淡云闲列长空，丽日高照大地春的气象。慧开就此开悟。他的很多诗歌都以富含禅理禅机，成为佛诗佳作，在禅门中代代相传。他的《饭熟已多时》便是其中的代表，诗云： 只为分明极，翻令所得迟。 早知灯是火，饭熟已多时。有一年，京城大旱，理宗请慧开禅师登坛祈雨，慧开禅师持咒祝祷之后，默然返回寺中，理宗急忙遣派内侍前来询问，祈雨的结果如何？禅师淡然回答说：“寂然不动，感而后通。”语音方毕，天空俄然乌云密布，大雨倾盆注下，解除了已久的大旱，立下大功德。理宗因此颁赐慧开禅师金澜法衣，敕封为佛眼禅师，以示褒扬。就佛家而言，佛眼即是佛，而佛就是佛眼，可见对慧开禅师的评价之高。无门和尚将历代禅宗之公案甄选汇编，选择其中四十八则，纂集为脍炙人口之《无门关》一书，并自作序文道： “大道无门，千差有路； 透得此关，乾坤独步。”并且把赵州禅师“狗子无佛性”的公案列为第一则，深得六祖慧能大师“无念，无相，无性”的思想要旨。其第十九则诗，谒朗朗上口，最为佛弟子所爱颂： “春有百花秋有月，夏有凉风冬有雪， 若无闲事挂心头，便是人间好时节。”慧开禅师晚年，倦于槌拂，于西湖边卓庵隐居。虽然如是，前来参学者犹众。 “三十三天天外天，九霄云外有神仙。 神仙本是凡人做，只怕凡人心不坚。”慧海禅师开示说：“世人很难做到一心一用，他们在利害得失中穿梭，囿于浮华的宠辱，产生了‘种种思量’和‘千般妄想’。”这是他们生命中最大的障碍，因此在生命的表层停留不前。南宋理宗定元年四月命工匠砌塔，八日塔龛砌成，禅师自撰龛语道： “地水火风，梦幻泡影。 七八十年，一弹指顷。”书谒毕，跏跌而逝。","categories":[{"name":"文学爱好","slug":"文学爱好","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/"},{"name":"诗歌","slug":"文学爱好/诗歌","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E8%AF%97%E6%AD%8C/"}],"tags":[]},{"title":"如果你是一个普通的父母","slug":"如果你是一个普通的父母","date":"2023-09-11T01:14:04.000Z","updated":"2024-08-27T15:41:19.676Z","comments":true,"path":"2023/09/11/如果你是一个普通的父母/","link":"","permalink":"http://shenguosai.github.io/2023/09/11/%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%98%AF%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%E7%9A%84%E7%88%B6%E6%AF%8D/","excerpt":"网上看到了一段话，非常治愈，非常鸡汤。大家都说是从人民日报看到的，但是我搜索了一圈也没看到哪一期的人民日报上刊登了这样的文字。文字是好文字就好，何必非要冠以噱头，互联网时代让信息变得巨量却碎片，周末在家辅导孩子功课时孩子非要在网络上搜索知识，经过好一通解释才说服孩子试着使用工具书来查阅资料。互联网给我们带来无穷便利的同时也在剥夺人类的自主能力，让人类的依赖性变得更强。正如“奶头乐”阴谋，资本利用了人类的劣根性让普通人为其辛劳一生却不自知。所以说无论什么主义社会，只要有统治阶级，就一定会想方设法的愚化群众。是不是又到了开启民智的时期？","text":"网上看到了一段话，非常治愈，非常鸡汤。大家都说是从人民日报看到的，但是我搜索了一圈也没看到哪一期的人民日报上刊登了这样的文字。文字是好文字就好，何必非要冠以噱头，互联网时代让信息变得巨量却碎片，周末在家辅导孩子功课时孩子非要在网络上搜索知识，经过好一通解释才说服孩子试着使用工具书来查阅资料。互联网给我们带来无穷便利的同时也在剥夺人类的自主能力，让人类的依赖性变得更强。正如“奶头乐”阴谋，资本利用了人类的劣根性让普通人为其辛劳一生却不自知。所以说无论什么主义社会，只要有统治阶级，就一定会想方设法的愚化群众。是不是又到了开启民智的时期？ 话题扯了有点远，这篇分享的主要目的还是来分享这段治愈的文字： &emsp;&emsp;如果你是一个普通的父母，没有什么优秀的资源和太多的文化，不知道该怎么教育孩子，那我们就不如多鼓励他，多认可孩子，多表扬孩子，多理解和支持孩子，不要把自己的认知、焦虑、恐惧、愤怒和委屈转移给孩子，这就是对孩子最好的教育。&emsp;&emsp;孩子若是平凡之辈，那就承欢膝下，若是出类拔萃，那就让他展翅高飞，接受孩子的平庸，就像孩子从来没要求父母一定要多么得好一样……记住了:穷不怪父，孝不比兄，苦不责妻，气不凶子，送给自己一起共勉。","categories":[{"name":"杂学","slug":"杂学","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/"},{"name":"社科教育等","slug":"杂学/社科教育等","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E7%A4%BE%E7%A7%91%E6%95%99%E8%82%B2%E7%AD%89/"}],"tags":[{"name":"育儿","slug":"育儿","permalink":"http://shenguosai.github.io/tags/%E8%82%B2%E5%84%BF/"}]},{"title":"SPICE简史","slug":"SPICE简史","date":"2023-09-04T07:10:04.000Z","updated":"2024-08-27T17:17:29.624Z","comments":true,"path":"2023/09/04/SPICE简史/","link":"","permalink":"http://shenguosai.github.io/2023/09/04/SPICE%E7%AE%80%E5%8F%B2/","excerpt":"如今，SPICE广泛应用在仿真模拟电路(运放、基准、电源、AD/DA等)，混合信号电路(PLL、SRAM/DRAM，高速接口)，精确数字电路(延时、时序、功耗、漏电流等)，建立SoC的时序及功耗单元库，分析系统级的信号完整性，等等。作为最早的电子设计自动化软件，它今天仍然是最重要的软件之一。可以说，没有SPICE，就没有电子设计自动化这个产业，也就没有今天的半导体工业。它的市场超过上亿美元。所有这一切，都是从1970年加州大学伯克利分校电机工程系的一堂课开始的。","text":"如今，SPICE广泛应用在仿真模拟电路(运放、基准、电源、AD/DA等)，混合信号电路(PLL、SRAM/DRAM，高速接口)，精确数字电路(延时、时序、功耗、漏电流等)，建立SoC的时序及功耗单元库，分析系统级的信号完整性，等等。作为最早的电子设计自动化软件，它今天仍然是最重要的软件之一。可以说，没有SPICE，就没有电子设计自动化这个产业，也就没有今天的半导体工业。它的市场超过上亿美元。所有这一切，都是从1970年加州大学伯克利分校电机工程系的一堂课开始的。 SPICE的诞生 时间回到1970年，在加州大学伯克利分校电机工程与计算机科学系(UC Berkeley, Dept. EECS)，Ron Rohrer教授给7个研究生上“电路综合”课。Rohrer教授那时刚刚从仙童半导体公司(Fairchild Semiconductor)返回伯克利，没有时间准备教材。所以，在第一堂课，他就宣布：学生们一起写一个电路仿真程序。他跟系里管教学的助人Don Peterson教授达成一个协议：只要Peterson教授认可学生们写的仿真程序，他们就全部通过。否则的话，他们就全部不及格。这七个学生中有一个还是从机械系来的。他感到十分委屈：教授啊，俺啥电路都不会，俺就是来学电路的。这倒好，电路没学到，反而要去写电路仿真程序。这可咋办啊？Rohrer教授想了想，说没关系。虽然电路你不懂，但你的数值分析不是很厉害吗？OK，你就负责解方程这块吧。最后的结果证明了恰恰是学生们自己开发的解稀疏矩阵的模块是一个亮点，它使得可处理的电路规模成倍的增大。为什么这么说呢？如果你学过数值方法，你就知道一般解方程组用的是高斯消元法。它的时间复杂度是$O^{(n*3)}$。也就是说，电路规模增大一倍，你的运算时间就要增大到8倍。当时的电路仿真程序最多可以仿真10个晶体管。超过这个数，不是你的预算被烧没了，就是你的耐心被耗没了。但是，学生们注意到从电路搭出来的矩阵有个特点，就是它的稀疏性。一个电路矩阵里很多元素都是0(意味着两个电路节点之间没有连接关系)。既然是0，那就没有必要去存储和计算它了。这样一来，存储量和计算量大大减少了。 很多SPICE里面的基本要素都来自于Rohrer教授指导的这一堂电路分析课的项目，包括上面讲到的解稀疏矩阵的模块，还有隐式积分算法的使用使得瞬态分析更加稳定。并且，程序里加入了自带的半导体器件模型，用户只要给出一组模型参数，用不着自己提供器件模型的FORTRAN模块了。这7个学生推举Laurence Nagel为代表，由他负责向Peterson教授汇报结果。这个结果就是CANCER。没错，它的意思就是“癌症”。它是“不包括辐射的非线性电路计算机分析”(“Computer Analysis of Nonlinear Circuits, Excluding Radiation”)的缩写。不要忘了，这是在一个叛逆的时代。当时绝大部分的电路分析软件来自于大公司与政府/军方的合同开发。在冷战和核威胁的环境下，政府/军方要求这些软件都具有分析电路抗辐射的能力。伯克利是反战的大本营，学生们自己开发的程序当然要跟政府/军方的要求对着干了。有同学可能会问：为什么要开发一个电路仿真程序？呵呵，要知道在这之前，人们分析电路，要么是用笔和纸，要么就要搭电路板(Bread Board)。Peterson教授就被学生们称之为“信封教授”，因为他认为电路分析用个信封的背面来做就足够了。但随着电路规模的增大，用笔纸变得越来越不可能，搭电路板又不能精确反应芯片上的电路特性，而且费用也越来越高。因此，用软件来做仿真就变得日益迫切了。 当课程结束，Nagel向Peterson教授汇报CANCER之后，Peterson教授给予了认可。学生们都通过了！CANCER成了Nagel的硕士论文课题。它在伯克利被很多本科生及研究生使用，并且给了大量的建议去改进它。呵呵，都说学生是最好的“小白鼠”，这话果然不假(再插一段话：基于这堂课的巨大成功，Rohrer教授后来又用同样的办法试了几堂课，但都失败了。他自己总结说，是因为有Nagel，伯克利的那堂课才成功了。所以，如果没有Rohrer教授那样的功力和Nagel那样天分的学生，SPICE也不可能从一堂课里诞生出来。) 到了1971年的秋天，Nagel在伯克利又开始了他的博士生生活，这一回是在Peterson教授的指导下了。(在这之前，Rohrer教授离开了伯克利到工业界去发展。原因嘛，据说Rohrer教授与Peterson教授在是否要公开CANCER的源代码上有不同意见。Rohrer教授后来又回到了学术界，在卡内基-梅隆大学(CMU)做教授，并指导开发了AWE，这是后话。) Peterson教授给Nagel的第一个任务是给程序起个新名字。确实，CANCER太难听了，谁都不喜欢。Nagel花了天知道多长时间才想出来这样好听的，也就是我们现在还在用的名字：SPICE(Simulation Program with Integrated Circuit Emphasis)。(所以，如果你要写一个新程序，创建一个新公司，生一个小孩，一定要给他/她起个好听的名字。) 1971年被正式认定为SPICE诞生的年份。 Laurence Nagel当年在伯克利的照片 Ron Rohere教授 Don Peterson教授 SPICE还是开源代码的先驱。当时也有开源代码，但都没有太大的商业价值。SPICE就不同了。有人已经看到它的商业价值，但Peterson教授坚持要把代码开源(我们都得真心的感谢Peterson教授)。任何人只要花20美元的手续费，就可以得到SPICE的源代码(当然，在冷战时期，SPICE被禁止出口到政府认为的“共产国家)。有人会问，那这样一来，伯克利是不是损失了一大笔钱呢？事实并非如此。伯克利的SPICE帮助数字设备公司(DEC)卖出了很多台VAX机。反过来，DEC给伯克利电子系捐赠了1800万美元(这可是二十年年的数目，考虑到通货膨胀，你可以想象现在值多少钱)。这么多钱可不是一个学校卖代码能获得的。所以，做好事终究还是会得到好报的。 ## SPICE2和SPICE3 在70年代初期，伯克利电子系用的计算机是CDC6400大型机，它的运算能力相当于286(时钟频率是10MHz，可它的成本是六百万美元。再看看今天你手中的iphone，它的时钟频率超过1GHz，成本不到600美元——这是100万倍性价比的差别！)分给每个学生的主内存白天为256KB。到了晚上人少，你就可得到384KB。运行一个不算太大的电路仿真，用Nagel的话说，就像把你11码大的脚穿进婴儿的鞋里——你得想尽一切办法节省内存。能仿真的最大的电路规模也就是25个双极型晶体管(相当于50个电路节点)。而且，那时候SPICE还只有双极型晶体管模型。71年的秋季，从贝尔实验室来到伯克利的David Hodges教授带来了第一个MOSFET模型：Shichman-Hodges模型。如果你用过SPICE(并且年头足够多的话)，你应该知道这就是Level1 MOSFET模型。它是所有MOSFET模型的鼻祖。 1975年Nagel从伯克利博士毕业。他的论文 ***“SPICE2:A COMPUTER PROGRAM TO SIMULATE SEMICONDUCTOR CIRCUITS”***，成为了EDA行业被引用最多的文章。 SPICE2这个版本基本上奠定了今天电路仿真程序的基石，其中包括：改进的节点分析法(Modified Nodal Analysis)，稀疏矩阵解法(Sparse Matrix Solver)，牛顿-拉夫逊迭代(Newton-Raphson Iteration)，隐形数值积分(Implicit Numerical Integration)，动态步长的瞬态分析(Dynamic Time Step Control)，局部截断误差(Local Truncation Error)，等等——说太多技术细节了，还是接着讲故事吧。 Nagel博士论文的封面 下载这篇论文：[SPICE2:A COMPUTER PROGRAM TO SIMULATE SEMICONDUCTOR CIRCUITS](https://www2.eecs.berkeley.edu/Pubs/TechRpts/1975/9602.html) 如果你想了解SPICE的核心秘密，就下载一份好好读读吧！ 最早的SPICE2没有用户界面。它的运行是批处理方式。也就是说，你准备好了你的电路描述和仿真命令，就把它们提交给主机系统里。然后呢？然后你就可以回家了。因为你的几十(百)个同事也在做着同样的事情。所以，等第二天早上上了班再看结果吧！ SPICE2的输入是用打卡。你可能会问：什么是打卡啊？呵呵，祝贺你年纪够小。对那些年过半百的人，最初接触到的计算机输入界面就是像下面这样的卡： IBM Punch Card 你把你的电路描述及仿真命令打在一叠这样的卡上，然后放到读卡机里。你可能听说过SPICE的输入叫“SPICE DECK”，这个名字就是从这叠卡来的。 SPICE2的输出是行打印机。是的，就是用下面这样的打印机打出仿真结果在纸上(想象一下那时消耗了多少纸张)。 Fujitsu FACOM 655B Line Printer 你也可以打印输入输出的信号波形。每个波形是用不同的字符画的。像下面这样(看着是不是很粗糙呀)： 有同学读SPICE手册时会看到一个奇怪的选项叫“NOPAGE”。这是因为SPICE的输出在页与页之间的折线处会加入一个分页符，流出空白。这个选项就是要求不要停止打印的。这样一来，波形就不会因为换页而在页与页之间断掉了。随着行打印机的消失，这个选择项也进入了历史。后来SPICE2的输入/输出也进化成了文件输入/出。像下面这样： Nagel毕业后去了贝尔实验室。从此以后，SPICE2的改进就由Nagel的室友，Ellis Cohen，继续进行下去。Ellis是个计算机编程能手。用当时周围学生的话说，他就是一个长成人形的计算机。是他(以及后来的Andrei Vladimirescu和Sally Liu)把学校里开发的程序SPICE改造成了实用的SPICE2G6。在SPICE的早期开发中，他是个无名英雄。今天工业界里的很多商业SPICE就是基于SPICE2G6开发出来的。 到了八十年代，SPICE2已经遍及了各个大学。但它的问题也显现了出来：FORTRAN代码太难维护，加新的器件模型需要改动的地方太多，等等。在此同时，C作为一种新的程序语言正方兴未艾。于是，用C语言重新写SPICE就被提到了议事日程上来。这个任务被伯克利的Thomas Quarles在89年完成了。比起SPICE2来，SPICE3增加了用户界面，你可以使用命令，甚至命令串来控制程序。另外，还增加了图形界面看波形。更重要的是，SPICE3的程序构架更加清晰，更加模块化。维护及修改起来更加容易。八十年代也是计算机硬件突飞猛进的时代：大型机(mainframe)被工作站(workstation)取代。UNIX及架构在它上面的C-shell和X-window成为软件开发及应用的基本框架。另外，个人电脑(PC)也越来越普及。这些都为SPICE的广泛应用打下了坚实的基础。 Quarles论文封面 同样，你可以用这里的链接下载 Quarles的论文。 下面是SPICE3(版本3f5)的执行语句，注意它是交互式的。每一个“Spice-&gt;”后面是一个spice3的命令。不如“source”就是把电路读入，“run”就是运行，“display”就是显示，“quit”就是退出。 SPICE3自带了一个图形模块nutmeg。下面是nutmeg显示的波形，是不是比SPICE2的行打印的字符波形好看多了？ 自从上世纪90年代后，学术界SPICE的发展基本就停止在SPICE3f5这个版本了。这是不是意味着SPICE停滞不前了呢？非也。至少在两个方向上SPICE还在一直发展：一个是器件模型(特别是MOSFET模型)，另一个是商业SPICE程序。(这里值得提一下，有一批SPICE的爱好者及高校把SPICE3f5接过来，并整合了其它几个开源软件(xspice, cider, gss, adms 等)，建成了ngspice。Ngspice也在缓慢的进化着，但比起商业SPICE进化的速度慢多了。你可以在 sourceforce 上找到 ngspice，也可以去 ngspice 的主页上去查看。 SPICE中器件模型的演变 SPICE里面自带了很多模型。像无源元件电阻、电容、电感等等，以及有源器件二极管、双极管等。但花样最多的、变化最频繁的、复杂度最高的，当属MOSFET的模型了。这主要是因为从七八十年代以后，MOSFET的工艺因为它的低功耗，高集成度而变成了主流。那时候还是个半导体工业百花争鸣的年代。很多半导体公司如雨后春笋般的冒出来(就像现在的社交媒体公司一样)。几乎每一家公司都在工艺及器件上有点自己的绝活，所以集成电路公司大多是个独立器件制造商(IDM)。这就造成了MOSFET的模型也层出不穷。谁家的SPICE支持的MOSFET模型越多，谁的SPICE用户群就越大。 前面我们说过SPICE2中加上了MOSFET Level1的模型。等到SPICE3出来的时候，里面已经加入了Level2及Level3模型。到了九十年代，又加入了著名的BSIM(Berkeley Short-channel IGFET Model)模型。可以这样说，现在所有的Foundry用的模型都来自于BSIM家族。为什么在众多MOSFET模型中BSIM胜出了呢？ 我们知道，SPICE是用来解含有非线性器件的电路方程的。解非线性方程的一个有效方法就是牛顿迭代—把非线性方程在某个点给它线性化，然后逐次逼近最终解。这个过程有点像两个宇航飞船对接—如果对方的接口在你的左边，你就往左偏一下。如果你偏多了，对方的接口在你的右边了，你就再稍往右偏点，知道最后两个接口对准锁定。但这里面又个要求：就是非线性曲线的一阶导数要连续。如果不连续的话，就好像喝醉酒的人来控制飞船对接，忽左忽右，或者根本就掉过头来，布置东南西北，上下左右了，如何能对接上呢？不幸的是，很多早期的MOSFET模型(包括Level1、2、3)都有这个问题—模型的电流曲线的一阶导数在工作区域内不连续。这是因为人为的把器件分成了不同的工作区域。不同区之间能保证电流连续已经不错了，哪还去管它的导数呢！这样做的后果就像管对接的人喝醉了酒，没法瞄准目标，最后导致SPICE不收敛 (Non-convergence)，或时间步长太小(Time Step Too Small—这有很大可能也是不收敛造成的)。 早期的BSIM模型还保留了工作区的概念。但在不同的区域之间加入了平滑过渡曲线，以保证电流曲线及其一阶导数的连续性。在它后来的版本中，就彻底抛弃了工作区域的观念—干脆只用一个(连续且可导)曲线来代表整个工作区域里的特性。这就从根本上解决了不连续的问题。BSIM家族中最成功的代表是BSIM3v3(HSPICE中的Level49)和BSIM4v5(HSPICE中的Level54)。从此以后，再也没有其他的模型能出其右。它们俩也是工业界的MOSFET器件模型标准。BSIM3v3跨越了亚微米的工艺(0.3微米至0.13微米，大致从1993年到2000年)，BSIM4跨越了深亚微米到纳米的工艺(90纳米至20纳米，大致从2002年到2012年)。 你可能会问：这么好的器件模型是谁做的？猜一下—对了，还是伯克利。是伯克利电子系器件模型小组。它的掌门人就是胡正明教授(Pref. Chenmin Hu)。 今天的SPICE开发者要感谢胡教授。如果BSIM不是工业标准，那你就得像HSPICE一样加几十上百个MOSFET模型。不光工作量大，容易出错，还有很多内部的模型人家还不愿意给你呢(参见下面Smart-Spice的故事)。而现在，你只要加一、二个开源的BSIM标准模型就可以覆盖绝大部分用户了。 有同学要问：现在的最新工艺不是已经到了16纳米、14纳米，以致10纳米，那这些工艺的器件结构与模型又是什么呢？答案已经有了：还是胡教授的小组开发的FinFET(也叫3维FET)模型。实际上，早在99年胡教授就发表了FinFET的文章。因此他也被称作FinFET之父。他同时是美国和中国的科学院士。同学，如果你的一生中能达到以上其中的任何一项，是不是就可以笑傲江湖了呢? 就像半导体工艺由简到繁的过程一样，MOS器件模型也从Level1的几个公式/几十行代码，发展到BSIM的几百个公式/上万行代码。这里值得提出的一点，与BSIM3/BSIM4模型不同的是，FinFET模型不是用C语言，而是用Verilog-A语言写的。这直接导致了把它加到SPICE3中的困难。虽然很多商业SPICE已经支持Verilog-A，但现在开源的SPICE3却还没有做到(这里插一句：基于SPICE3的ngspice当中包含了支持Verilog-A的开源编译器ADMS。但要做到完全自动编译FinFET模型这样重量级的模块还有一段路要走)。也就是说，虽然FinFET模型是开源的，但现在它的仿真载体并不开源。这种现象与早期的SPICE研发反了过来。现在学术界落到了工业界的后面。看到这儿，学术界的同学是不是要深思一下呢? ## 商业SPICE的演变 前面我们提到当CANCER出来的时候就有人意识到了它的商业价值。毫无疑问，SPICE的出世必定会有人把它商业化。事实却是如此。八九十年代是商业SPICE出现的高峰期。至少有几十个SPICE的变种冒出来。有的获得了巨大成功，有的毫无声息的消失了，有的还在惨淡经营着。同学，如果你想创业，这里面有太多的经验和教训了。 #### HSIPCE 先来说说HSPICE，记得我们前面讲过的批处理运行吧。在当时的大公司里，这是电路仿真标准的运行方式，但这么做的效率太低了。设计者需要尽量短的时间看到仿真结果，然后修改电路参数再做仿真。如此多次以达到最佳结果。有两个孪生兄弟Shawn Hailey及Kim Hailey，当时都在AMD做设计，看到了这里面的问题。与其让几百个客户排队等一个银行柜员，为什么不让每一个客户都有一个柜员呢？问题就是商机。他们决定跳出来开自己的公司。于是78年，Meta-Software成立了，他们把改进的SPICE变种取名为HSPICE(你现在明白了吧，为什么要以H开头？这可是兄弟俩姓的第一个字母)。他们把SPICE2从大型机移植到了VAX小型机上，后来又移植到Sun工作站上。就这样，借着计算机硬件改朝换代的东风，越来越多的公司开始使用HSPICE了。直到如今，这个HSPICE成了工业界的“金标准”。只要你做个仿真器，人们一定会跟HSPICE比结果的。而且，在SPICE前面加一个字母成了时尚。到今天，有人开玩笑说A-SPICE到Z-SPICE都已经被人用过了(当然，HSPICE仍然是最出名的)。 有人可能会问：要是我当时也把SPICE移植到小型机上，我是不是也可以成功？呵呵，成功的要素有很多，光用一条是远远不够的。比如说用户的反馈就是相当重要的一条。举个例子，HSPICE是第一个把器件模型库卡(.LIB)和结果测量卡(.MEASURE)做进去的。像这样的例子还有很多。这些虽然不是什么革命性的技术创新，但它们很实用，能大大提高用户的使用效率。甚至某些时候，对用户来说，这样的小改进比创新的算法更重要。 前面我们提到了七八十年代有很多的MOSFET器件模型。HSPICE把能拿到的器件模型都收进去了。所以，HSPICE的MOSFET器件模型是最全的(不信的话，你就去拿本HSPICE的MOSFET模型手册读一下--注意，它是一本独立的手册。也就是说，光是它里面的七八十个MOSFET模型就是一本书了)。但这样还不够，Meta还开发了自己的MOSFET模型：Level28.他们跟用户的工艺线紧密联系。在工艺线流片之前，相应的器件模型参数已由芯片加工厂(Foundry)提供给芯片设计者了。如果你是设计者，你还能不用它吗？这样做的结果直接导致了HSPICE用户群急速的扩大。就像滚雪球一样，一旦超过了临界质量(critical mass),它自己就会越滚越大。据Meta-Software的人说，在公司巅峰的时候，它们的销售员就是一台传真机。你只要把传真机号码告诉客户，他们就把订单发来啦(那时候的钱真好赚啊，当然公司里肯定不止一台传真机)。从78年成立到96年这18年期间，公司一共卖出了一万一千多套HSPICE，它的年成长率达到了25%~30%。 1996年Meta-Software被Avant收购，到2001年，Avant又被Synopsys收购。关于Avant的故事有很多。这个公司(包括它的头儿 Jerry Hsu)就像EDA业界的一匹黑马。它的故事足可以写另一个长篇了。 Meta-Software兄弟中的老大，Shawn Hailey，已于2011年去世。在此之前，他把自己的名字改成了Ashawna Hailey。 #### PSICE PSPICE像HSPICE一样，PSPICE的故事也跟它的名字有关。首先，这第一个字母“P”并不是其创始人的名字。事实上，创始人的名字Wolfram Blume里面根本没有字母“P”。那这字母“P”到底是什么依稀呢？对了，它就是PC。PSPICE的发展跟PC的发展是密不可分的。但这并不是PSPICE的初衷。 时间回到1984年，那时Wolfram Blume从加州理工(CalTech)毕业加入南加州一家半导体公司。工作中，他听到很多抱怨，说公司内部的SPICE速度太慢了。这位老兄也不含糊，立马对其SPICE来了一个详尽的分析。结果发现，大部分时间花在了算MOSFET模型的方程上(记得前面我们讲的MOSFET的复杂性吧)。他一想，如果能用硬件来并行处理这些方程，岂不就可以加快仿真速度了吗？(呵呵，又是一个看到商机的主)？恰恰那个时候英特尔推出了支持硬件并行的8085/8086/8087.说干就干，这位老哥创立了MicroSim公司。又是在这时，IBM推出了基于Intel芯片的IBM-PC。另一个机会又来了：只要把SPICE从大型机上移植到PC上就行了。这事儿比起第一个事儿简单太多了。可是，人们当时认为PC就是个游戏机而已，没人拿它来做什么正经事儿(呵呵，看看现在不还是这样吗？)。所以，这个老哥并没有把这第二件事看得太重，而是集中绝大部分精力和资源去做硬件并行。 当时的IBM-PC有640KB内存。最大的数组只允许64KB内存。而SPICE是用一个巨长的数组来存储所有的数据。把SPICE的数据放到IBM-PC的结构，用这位老哥的话说，就像把一只鲸鱼塞进一个金鱼缸里。但他们做到了(中间略去他们N个睡不着的工作之夜)。并行硬件的确加快了方程的处理，可他们也快没钱了。这位老兄忽然想到，咱不是把SPICE移植到PC上了吗？咱就先卖着这个软件，用卖它的钱继续开发咱得并行硬件。就这样，PSPICE就开始在PC上出现了。 最初这位老兄是想卖硬件加速器的PSPICE版本，可结果恰恰相反，两年后，纯软件的PSPICE卖出去一千多套，而硬件加速器只卖了两套。到这时候，这位老兄也明白了，做硬件吃力不讨好，市场并不需要。他把卖出去的两套硬件加速器又自己买了回来(当然又半卖半送给人家N套纯软件的版本)。 同学你看，一个高新复杂的技术并不一定会做出一个卖座的产品。反过来，一个貌似简单的技术可能很受市场的欢迎。另外，PSPICE虽然不是赚钱最多的，但它的用户数绝对是最大的(遍及全世界五大洲)。你可以下载一个免费的PSPICE用。当然，只限于十个晶体管。但这对一般学生的学习来讲，大部分情况下已经够用了(想一想当年的大型机也就只能算这么多)。你如果在网上搜一搜，就会发现阿拉伯语(以及其它语言)的PSPICE的教材。你如果是在校生的话，很可能也在用PSPICE。 PSPICE第二版封面 MicroSim在1998年被OrCAD收购，OrCAD在2000年又被Cadence收购。 Spectre 话说89年，伯克利毕业了最后一批做SPICE研究的学生。其中一个叫Ken Kundent。Ken非常有才气，他在伯克利的研究成果后来成为了安捷伦的微波仿真软件。同时他的傲气也不小。在加入Cadence后，他看到HSPICE卖的很火，就决定做个新的仿真工具去取代它。这就是Spectre。据说他用了两个星期就写出了第一个版本(呵呵，不愧是伯克利SPICE大本营出来的)。SPECTRE比HSPICE要快两三倍，还具有更高的精度及更好的收敛性。但它并没能取代HSPICE。为什么呢？一个原因是兼容性。SPECTRE的输入格式跟HSPICE有很大不同。Ken计算机编程的功底很深，他设计的Spectre的输入格式像C语言一样。虽然从计算机语言角度看，Spectre的输入比HSPICE的输入更规范，但SPICE的用户是电路设计者，他们才不管你的语言多么优美，只要好用就行。另外，如果你是个电路设计者，花了几年功夫好不容易才学会了一种语言格式，用它已经写了成百上千个电路网表，而且它们都工作的好好的，为什么要去换成另外一个呢？另外，还有一个重要的原因，就是用户对HSPICE的信赖。这种信赖不是一时半会儿就能建立起来的。它是经过几十年，成千上万遍仿真，几百次tape-out(流片)才能形成的。怎么能说换就换呢。 Ken琢磨着，既然更快更好还没办法取代SPICE，那我们就得做点SPICE没有的东西。做什么呢？恰好在九十年代中期，一种标准的设计语言VHDL开始向模拟电路扩展，这就是VHDL-AMS(VHDL的模拟电路及数模混合电路描述语言)。(这里再插一句，最早的数模混合电路描述语言是MAST，它是Analog公司的仿真器Saber里面使用的。VHDL-AMS是基于欧洲Anacad公司开发的HDL-A语言发展而来的。后来Anacad的仿真器成为Mentor的Eldo)。但当时还没有Verilog的AMS扩展(原因是VHDL主要在欧洲使用。而Verilog主要在美国使用)。Ken就想，好吧，我们也来做个标准的设计语言到Spectre里。这就是Verilog-AMS(Verilog的模拟电路及数模混合电路描述语言)。不过这事儿说起来容易做起来难。首先，既然你是标准，那就要大伙儿都同意。让大伙儿都同意的事是要花时间的，没那么快。其次更重要的，是你要让模拟电路设计者来学习并使用这个语言。这可是比登天还难的事儿。如果你是一个模拟电路设计者，你想想你在学校的课本上看到的是运放的电路还是它的描述语言？当然是电路了。至少到今天为止，还没有一本模拟电路的教科书是只用描述语言的。你再看看数字电路的教材，几乎全部都是VHDL或Verilog描述语言(呵呵，如果你还用晶体管来设计数字电路，那你的年龄够大了)。另外，当你做模拟设计的时候，你是在搭晶体管电路呢，还是在写描述语言？对模拟电路设计者来说，用语言而不用电路来做设计是不可想象的。反过来，对数字电路设计者来说，用电路而不用语言来做设计也是不可想象的。 Spectre-AMS做出来后，Ken发现当时的感兴趣者寥寥无几(呵呵，这哥们专找硬骨头啃)。那怎么办？在公司做产品是要卖钱的。Ken有点儿绝望了。这时，他想到了回去做他在学校的老本行：射频电路仿真。至少这个功能别的SPICE还没有。他把这个想法告诉了当时Cadence的市场经理Jim Hogan。Jim做了个市场调查。那时射频电路设计市场几乎不存在，只有几家做镓砷电路的算搭点边。当Jim把这调查结果告诉Ken，Ken也无可奈何的耸耸肩。Jim对Ken看了好一会儿，说，管它呢，你就做去吧。谁知道这一次却是歪打正着了。九十年代中后期正是无线通信市场腾飞的时候。很多在学校用Spectre-RF的毕业生加入了新的做射频电路芯片的设计公司。这些公司必须要用Spectre-RF做射频仿真。而Spectre-RF是Spectre的一个选项。因此，Spectre也就借着Spectre-RF的东风开始流行起来了。后来，HSPICE和Smart-Spice也跟风在自己的SPICE中加进了RF的选项。这也算是Spectre对SPICE的功能扩展做的贡献吧。 Ken Kundent Smart Spice Smart-Spice是Silvaco公司的产品。说道Silvaco，就不得不说它的创始人Ivan Pesic。Ivan来自黑山共和国(Montenegro，欧洲巴尔干半岛的一个小国家)。像所有第三世界国家的穷学生一样，通过自己的勤奋努力来到美国。来美国之后，他先开了一家修车店。知道攒够了钱，才在1984年成立了Silvaco。他有一个儿子，可能是年幼时受了老爸的修车店的熏陶，决定长大了当个汽车修理工。因此学习也不上进。怎么让这小子好好学习呢？简单。有一天，老Ivan把儿子带到了圣荷塞（SanJose，硅谷一大城市）一个最破的修车厂的马路对面，对儿子说：你就坐在这儿，看看汽车修理工一天的工作是什么样的。自从那一天结束以后，儿子的学习成绩就全变成A了。 说到Ivan Pesic，我们还不得不说他打官司的故事。Silvaco的历史上与N家公司打过官司(而且大部分都赢了)。在此我们只讲讲与Meta-Software(后被Avant并购)的官司。话说八十年代末到九十年代初，Meta-Software和它的HSPICE如日中天，这其中它自己的Level28模型起了重要作用。Silvaco最初的产品是TCAD(Technology CAD)，并不是SPICE。这时它也准备开发自己的Smart-Spice，但它拿不到HSPICE的Level28模型。怎么办？Silvaco采用了一个瞒天过海的迂回战术。Silvaco有个不错的模型参数提取软件叫Utmost。它就找到Meta-Software说，你看，如果把你们的Level28模型公式放到我们的Utmost中，就会有更多的用户用你们的HSPICE。Meta一想也对，就把Level28模型给了Silvaco。没成想，过了两年，Silvaco自己的Smart-Spice出来了，而且里面还带着Level28模型。这下Meta-Software气坏了。就把Silvaco告上了法庭。也就在这个前后，Avant并购了Meta-Software。但Avant只看到了HSPICE这只下金蛋的鸡，却忽略了Meta-Software跟Silvaco的官司。也许是因为Avant恰恰正在和Cadence打着一场更大的官司，从而忽略了这个小案子。不管是什么原因，当法庭开庭要宣判的那一天，Avant居然没有人出庭。这下法官可气坏了。好啊，竟然藐视本法庭，来啊，判Avant输，并赔Silvaco两千万！本来Silvaco上庭前战战兢兢的，盼望着和解就不错了。这下倒好，不光不用和解了，还得了一大笔钱。呵呵，人们都说国外重视知识产权。这种重视其实是来自于众多这样的动不动就成败上千万的官司。所以同学，如果你是学理工出身的，那你不妨去学学法律。如果你是学文科出身的，那你不妨去学学理工。估摸着在不久的将来，国内这样的涉及知识产权的大官司也会越来越多。作为一个懂高科技的律师(或者一个懂知识产权法律的工程师)会很抢手的。 但是，一个公司如果光靠打官司，那也是赢得不了客户的。说实话，Smart-Spice做得还是蛮不错的，价格又便宜。Smart-Spice还是第一个“基于使用时间许可证”(use-time based license)的工具。这对许多小公司或个人用户是个好消息。如果你没几万美元去买高大上的商业SPICE，或者你就只需要跑几次仿真，那就可以最少花十几美元用Smart-Spice完成你要做的事。这就像买车还是租车一样。卖车店能赚钱，租车店也会有很多顾客的。这不也是一个很好的商业模式吗？ Ivan Pesic于2012年因癌症在日本去世。如今，他本来想当汽车修理工的儿子已经继承了老爸的事业，接替掌管Silvaco了。 Aeolus-AS 我们应该感到骄傲—这是我们中国本土的SPICE。虽然名字叫起来很拗口。光从名字上也看不出这是SPICE。它是由华大九天开发的。至于为什么起这样一个名字，还是请华大的刘总来解答吧。本人并没有用过这个工具。下面的几句话是从华大的网页上摘下来的，也算给他们做个广告吧。“它是新一代高速高精度并行晶体管级电路仿真工具，能够在保持高精度的前提下突破目前验证大规模电路所遇到的容量、速度瓶颈。Aeolus-AS能够处理上千万个元器件规模的设计，仿真速度也比上一代晶体管级电路仿真工具有大幅提升，同时支持多核并行。” 还有一类是工业界但非商业(也就是不拿出来卖的)SPICE，通常它们都是公司内部开发使用的。一般只有拥有Fab的大公司(像Intel、前Infenion、前Motorola、Fujitsu等)才能负担得起一个开发团队。这种公司内部的SPICE基本都会有自己的器件模型。在这里我们就不多说了。 SPICE的变异与进化SPICE的变异与进化 SPICE最初是用来做小型电路仿真的。电路中的元器件数也就几十最多到几百个。随着电路规模越做越大，电路种类越来越多，人们会问：SPICE能不能跑得更快一些，能运行的电路更大一些？自然而然的，SPICE的变种就出现了。我们在这儿讲三个方面：第一是快速仿真；第二是数模混合仿真；第三是扩展应用。 先说说快速仿真(fast SPICE)。这也是市场最大，发展最多的一块儿。因为SPICE是把整个电路放到一个矩阵中来解。人们就想能不能把电路分成小块单独解，然后再把各块之间连接起来，这样不就快了吗？的确，对数字电路，确实可以用分割的方法。因为数字电路的信号是有方向的，我们可以在没有直流通路的地方把它分开(例如在两个串联的反相器中间)。另外就是数字信号是离散的，我们可以把它分成几段。分的段越大，时间步长也就能越大，需要解的次数就少了(当然结果也就没那么精确了)。还有就是器件模型。我们前面讲过如今的mosfet模型非常复杂，要花很多时间去算，那能不能把它简化呢？可以。事实证明对数字电路以及数模混合电路(像PLL、Memory、Serdes)来说，用表格模型(table model)来代替复杂的方程模型是个不错的选择。通过这些简化，快速仿真可以比原来的SPICE快几十到上百倍，而精度是在SPICE的5%~10%之内。像EPIC的PowerMill(后来成为Synopsys的NanoSim)，Anagram的ADM(后来成为Avant的StarSim)，Celestry(后来成为Cadence)的UltraSim，Nassda(后来成为Synopsys)的HSIM，等等。最近比较流行的是Magma(现在是Synopsys)的FineSim，BDA(现在是Mentor)的AFS，Proplus的NanoSpice。 其次来说说数模混合仿真。当一个系统中既有模拟电路，又有数字电路，人么自然就会想到把SPICE和数字仿真器(如Synopsys的VerilogVCS、Cadence的NC、Mentor的ModelSim)连在一起运行。SPICE去算模拟电路部分，数字仿真器去算数字电路部分，它们之间用数模/模数转换器(AD/DA)连接。注意这种运行方式跟上面的快速仿真不同。这样的混合仿真需要两个仿真器。而且这样的构架有缺点。主要的问题是数模转换没有一个标准。市面上有很多SPICE以及Verilog仿真工具，每一个工具的转换界面都不一样，这就造成混合仿真的界面非常复杂。因此，最近发展的混合仿真都采用数模一体化的构架，大大简化了转换界面，而且用户只需要再一个环境下就可以进行混合仿真。这样的工具有Cadence的Virtuoso-AMS、Synopsys的HSIM-plusHDL、Silvaco的Harmony、华大的Aeolus-ADS等。 最后再来说说SPICE的扩展应用。虽说SPICE是针对集成电路(IC)开发的，但它的应用已扩展到系统级(System Level)，主要是电路板(PCB)级的仿真。那系统级仿真与集成电路仿真有何区别呢？它们不都是电路吗？呵呵，没错，它们都是电路，但区别还是蛮大的。主要是它们的规模与尺寸的不同。我们知道，集成电路是集成在芯片上的。其器件尺寸现在已做到纳米级。而系统的尺寸还在毫米、厘米甚至米的数量级。学过电磁的同学都知道，当器件的尺寸大于信号波长的时候，就要考虑分布的场效应了。拿一段导线做例子。一段在芯片上的导线，你可以把它看做一个电阻。而一段电路板上的导线，你就必须用传输线(Transmission Line)来代表它，否则误差就太大了。如果信号的频率再高，那就要用S参数了(S-Parameter)。因此，电路仿真发展出一大分支，这就是所谓的“信号完整性”工具。像Agilent的ADS、Mentor的HyperLynx以及Cadence的OrCAD和Allegro SPICE今后的道路 从70年代初到如今的四十多年里，SPICE从只能仿真十几个节点/器件到今天可以仿真上百万个节点/器件的电路，这是一个非常惊人的成就。但这个成就的主要原因是摩尔定律。前面我们讲述过自从90年代中期，SPICE本身就没有太大的变化了。这怪就怪(不，应该是感谢才对)SPICE的先驱们。他们奠定了一个坚实的基础，使得我们后面的人都没什么可做的了。的确，要改变SPICE的基石，例如改进的节点分析法(Modified Nodal Analysis)，稀疏矩阵解法(Sparse Metrix Solver)，牛顿-拉夫逊迭代(Newton-Raphson Iteration)，隐形数值积分(Implicit Numberical Integration)，等等，确实不容易。说到底，SPICE是一个解非线性常微分方程的工具。你要想从根本上有个革命性的改变，那你还是从数学上着手吧。 SPICE是一个非常通用的工具。虽然集成电路是它的着重点，但我们看到它也被广泛应用到了系统级、电源级甚至延伸到了不同领域的仿真。我们前面讲到了数模混合(Mixed-Signal)，但它还是在电路的范畴内。可不可以把它扩展到其他领域(Mixed-Domain/Multiple Discipline)，比如机械、热力甚至生物领域？答案是可以的。例如，在电路领域中，我们解的是跨过两个节点的电压和通过一个支路的电流。而在机械领域中，我们解的是两个点的位置和力。从早期Saber的MAST语言，到现在的工业标准Verilog-AMS和VHDL-AMS都已经支持不同领域的描述。这就给跨领域的仿真带来了可能。虽然Verilog-AMS还没有被模拟电路设计者广泛采用，但它很可能先从另一个地方发扬光大。比如，微机电系统(MEMS)很有可能是下一个大的应用领域。 另一方面，虽然SPICE可以解很多类型的电路，但它的运算速度也因此受到了制约。每一种电路都有它自己的特点，比如数字电路信号的离散型，存储器(RAM)结构的重复性，等等。我们可以在SPICE的基础上，利用这些电路的特点来开发特制的“SPICE”以提高仿真的效率。前面说的快速SPICE仿真工具就属于这一类。它们的通用性不如SPICE，但它们针对某一类电路的仿真效率是非常高的。 最后一方面，我们从SPICE的发展可以清晰的看到，软件的发展是与硬件的发展密不可分的。现在的处理器基本上都是多核、多线程的，新一代的商业SPICE也利用了这些新的处理器架构。最新的图形处理器(GPU)更是达到了上百个核，上万个线程。并行的开发工具像开放计算语言(OpenCL)，CUDA也逐渐成熟。高性能计算(HPC)以及云计算也在日益普及。SPICE能否利用这些新的环境来提高仿真效率呢？呵呵，这个问题就需要你来解答了。下面的图给出了主要SPICE的发展过程。其中的代号如下： tr td,th{ border:2px solid lightgrey; } .mt{ border-collapse: collapse; } 代号 UCB gEDA Meta SNPS μSIM CDN MENT 意义 伯克利 GNU EDA Meta-Software Synopsys MicroSIM Cadence Mentor 下面的图给出了主要快速仿真工具的发展过程，“+”代表并购。 注意这些快速仿真工具都是商业化的。目前还没有一个开源的快速仿真工具具有像伯克利SPICE那样广泛的影响力。 哪里可以找到SPICE仿真模型？ 寻找SPICE模型最好的方法就是去浏览厂商或是制造商的网页。下面列出的是部分最常用的并且在其网站上提供SPICE模型的芯片制造商。|厂商|描述||——|——||Analog Devices |放大器和比较器、AD/DA、嵌入式处理与DSP、MEMS和传感器、RF/IF组件、开关/多路复用器、模拟微控制器、接口、电源与温度管理||Analog and RF Models|模拟与射频模型||Apex Microtechnology|线性放大器、PWM放大器||Christophe Basso|开关电源||Coilcraft, Inc.|功率磁技术、射频电感、EMI/RFI滤波器、宽带磁技术||Directed Energy|二极管、开关模式MOSFETs、HF/VHF线性MOSFET、MOSFET驱动IC||Duncan Amps|放大器、真空管||Fairchild Semiconductors|放大器与比较器、二极管与整流二极管、接口、数字逻辑设备、信号转换、电压频率转换器、微控制器、光电管、开关、功率控制器、功率驱动器、晶体管、滤波器、稳压器||Infineon Technologies AG|光纤、微控制器、功率半导体、小型信号离散原件||International Rectifier|HEXFET功率MOSFET、二极管、桥、晶闸管、继电器、高压IC、只能功率模块、只能功率开关、HiRel功率MOSFETs、HiRel高压门驱动器||Kemet|含有铝、陶瓷和钽的表面覆盖电容器与含有陶瓷和钽的贴片电容||Linear Technology|信号调理、数据转换、功率管理、接口、高频率与光学||Maxim|放大器与比较器、模拟开关与多路复用器、时钟、计数器、继电器线路、振荡器、RTC、数据转换器、采样与保持、数字电势剂、光纤通信、滤波器(模拟)、高频ASIC、热插拔与功率开关、接口与互联、内存：暂时、非暂时、多功能、温度管理、传感器、传感器调理、电压参考、无线、射频与电缆||National Semiconductor|放大器、功率管理、温度传感器、接口、LVDS、以太网、USB技术、Micro SMD||ON Semiconductor|功率管理、放大器、比较器、模拟开关、晶闸管、二极管、整流器、双极性晶体管、FET、标准逻辑、差分逻辑||Philips|模拟/线性、音频、汽车、连接器、数据/媒体/视频处理、离散、显示器、接口与控制、逻辑、微控制器、功率与功率管理、射频、传感器||Polyfet|Polyfet晶体管||Protek|瞬态电压抑止||SMPS Power Supplies|开关电源仿真||Supertex|混和信号半导体、高压接口产品||ST Microelectronics|放大器与线性IC、模拟与混和信号IC、二极管、EMI滤波与调理、逻辑、信号开关、内存、微控制器、电源管理、保护设备、传感器、智能卡IC、晶闸管与交流开关、晶体管||Texas Instruments|缓冲器、驱动器与收发器、触发器、锁存存器、门、计数器、解码器/编码器/多路复用器、数字比较器||Tyco Electronics(前身Amp)|电磁元件、无源元件、电源、射频与微波产品||Vishay|模拟开关、电容、二极管、电感、集成模块、功率IC、LED、功率MOSFET、电阻以及热敏电阻的制造商。||Zetex|直流—直流变换控制器、参考电压源、电流监控、电机控制、Acoustar™声音解决方案、线性稳压器|","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Spice","slug":"Spice","permalink":"http://shenguosai.github.io/tags/Spice/"}]},{"title":"放大器的谐波失真(THD)","slug":"放大器的谐波失真-THD","date":"2023-08-21T13:47:21.000Z","updated":"2024-08-27T15:27:56.126Z","comments":true,"path":"2023/08/21/放大器的谐波失真-THD/","link":"","permalink":"http://shenguosai.github.io/2023/08/21/%E6%94%BE%E5%A4%A7%E5%99%A8%E7%9A%84%E8%B0%90%E6%B3%A2%E5%A4%B1%E7%9C%9F-THD/","excerpt":"本文主要总结和收集关于放大器谐波失真的原因及改良方法。 一、什么是谐波失真 THD是英文Total Harmonic Distortion的缩写，译成中文即为总谐波失真。 谐波失真是什么？谐波失真的原因是电路电路的线性度不好。理想线性电路的输入x和输出y可以使用一次方程表示：$y=ax+b$","text":"本文主要总结和收集关于放大器谐波失真的原因及改良方法。 一、什么是谐波失真 THD是英文Total Harmonic Distortion的缩写，译成中文即为总谐波失真。 谐波失真是什么？谐波失真的原因是电路电路的线性度不好。理想线性电路的输入x和输出y可以使用一次方程表示：$y=ax+b$如果输出和输入的关系偏离了上述方程的直线我们称之为线性度差。下面是一个典型的线性度差的代表电路：Diode Clip电路。根据二极管的顺方向I-V特性可知，在±0.6V之外被clip，就是说当输入电压在±0.6V之外时，电路显现非线性特性，如下图：如果将正弦波作为此电路的输入信号，输出信号变为在原信号基础上叠加了“不存在”的信号。其输入即输出入下式所示：输入：$V_{in}=sinωt$输出：$V_{out}=a_1sin(ωt+φ_1)+a_2sin(ωt+φ_2)+a_3sin(ωt+φ_3)+…$输入输出的FFT(Fast Fourier Transform)结果如下图所示： 二、谐波失真的定量分析在进行谐波失真的定量分析时经常用到的指标为THD和THD+N。 THD+N即Total Harmonic Distortion + Noise的缩写。 通常我们所说的谐波失真都是叠加了输入信号的高次谐波。THD的定义即为在基波的高次谐波的平方和的平方根与基波的电压之比。即：$V_{THD}=\\frac{\\sqrt{V_2^2+V_3^2+V_4^2+…+V_N^2}}{V_1}$其中，$V_1$为基波电压成分，$V_2$、$V_3$、$V_4$···$V_N$为整数倍的谐波电压成分。高次谐波成分+噪声，即THD+N就是在高次谐波中再加入噪声：$V_{THD}=\\frac{\\sqrt{V_2^2+V_3^2+V_4^2+…+V_N^2+V_{Noise}^2}}{V_1}$ 三、通过反馈改善谐波失真改善THD方法中最一般的方法就是利用反馈，还是用上面的Diode Clip电路举例说明，在此电路中加入放大器及其反馈后电路结构如下： 我们使用LTSpice中的理想放大器，设置其直流增益为100dB，带宽为10MHz。则1kHz的输入信号的增益为80dB。 由于作为中间节点的放大器的输出可以对非线性进行抵消，所以整个电路的输入输出特性有了较大的改善。 使用1kHz的正弦波作为输入时可以看出只有少量的谐波成分的残留。 通过FFT结果可以看到奇数倍的高次谐波成分。$THD=3.2\\%$ 下面讨论如果进一步削减谐波失真应该怎么做首先为了加强反馈网络我们可以保持放大器带宽的情况下将放大器的增益提高到120dB以上。 可以看到THD完全没有改善还是3.2%，原因是1kHz的反馈量没有变化。 然后尝试保持放大器的直流增益不变将带宽增加到100MHz。由于是单极点放大器，所以1kHz时的增益约上升10倍。 THD改善了0.35%，约上升了1/10。所以， 改善AC的谐波失真需要重点关注带宽！！ 为确保放大器的稳定性，在高频阶段通常降低增益。也就是说在单位增益频率附近的信号无法使用反馈来改善THD。所以，一般来说高频信号的THD会比较差。 四、输出端形成的开关谐波失真经过妥当设计的放大器在规格范围内使用时，造成谐波失真的最多原因是输出端的谐波失真。通过使用射极跟随器驱动负载电路的电路举例说明： 射极跟随器通常对输入电压进行约1倍的放大输出(即，输出=输入)，但如果集电极的电流在接近0A附近工作时，线性度会发生恶化。 使用正弦波作为输入信号，在集电极电流为0(cut off)时输出波形出现严重失真。 现实中放大器则通常通过一个npn和一个pnp组成推挽式结构，在一侧无法正常工作时通过另一侧进行补偿。 即使使用合适的偏置在输入信号为0时两侧的三极管均不会发生cut off(Class AB)，在大振幅或大负载电流的情况下也会使一侧的三极管发生cut off，不可避免地导致THD指标恶化。 开关谐波失真在Class A结构中可以避免，但是会增加功耗及电路的复杂度。 五、耗尽层电容引起的失真去除开关因素导致的失真之后，剩余的就是耗尽层电容为起因导致的失真。由于耗尽层是绝缘的，所以在Si和耗尽层之间可以看做形成电容，这个电容称之为耗尽层电容。耗尽层的长度随两边的电压不同而变化，就是说随着两端电压的不同耗尽层电容值是发生变化的。可变容量二极管就是利用这一原理制作而成的。普通的小信号用PN结二极管以及晶体管的集电极和基电极之间的容值也会跟随两端电压而变化。耗尽层电容导致的失真由以下电路模型展示。虽然在直流区域有反馈，但是在100kHz时输出由G1的互导和Q1的寄生电容决定。Q1以外均使用理想器件，Q1为共基级放大电路，所以输出波形仅会受到由集电极电位影响的非线性度影响而导致失真。Q1的集极-基级之间的反向偏置，所以在集电极上形成耗尽层电容$C_{ob}$经电源V2连接GND。 若集电极电压发生变化，则$C_{ob}$的容值发生变化，导致$C_{ob}$的充电电流释放至GND而造成了失真发生。THD为0.47%。 其对策为增加射极跟随器使$C_{ob}$的充电电流能够回流。通过Q2可以使Q1的集电极==&gt; $C_{ob}$==&gt; GND释放的电流进行回流而抵消$C_{ob}$造成的非线性。为使开环增益相同增加C3. 此时，THD有了巨大的改善，变为0.0008%。 参考文献：Douglas Self, Small Signal Audio Design, 2010, Focal Press黒田徹, 解析OPアンプ&amp;トランジスタ活用, 2002, CQ出版","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"}],"tags":[]},{"title":"《我叫赵甲第》片尾名言及经典台词","slug":"《我叫赵甲第》片尾名言","date":"2023-08-19T06:04:53.000Z","updated":"2024-08-27T15:37:39.578Z","comments":true,"path":"2023/08/19/《我叫赵甲第》片尾名言/","link":"","permalink":"http://shenguosai.github.io/2023/08/19/%E3%80%8A%E6%88%91%E5%8F%AB%E8%B5%B5%E7%94%B2%E7%AC%AC%E3%80%8B%E7%89%87%E5%B0%BE%E5%90%8D%E8%A8%80/","excerpt":"片尾名言第1集 生活的道路是自由美好的，可是我们迷了路，贪婪毒害了任性，用仇恨分割了世界。 ——查理·卓别林《大独裁者》 第2集一切都是瞬息，一切都将会过去，而那过去了的，就会成为亲切的怀恋。 ——亚历山大·普希金《假如生活欺骗了你》 第3集我姑且举灰黑的手装作喝干一杯酒，我将在不知道时候的时候独立远行。 ——鲁迅《野草》 第4集一旦走进深处，人与人就是相互的迷宫。 ——史铁生《活出爱》","text":"片尾名言第1集 生活的道路是自由美好的，可是我们迷了路，贪婪毒害了任性，用仇恨分割了世界。 ——查理·卓别林《大独裁者》 第2集一切都是瞬息，一切都将会过去，而那过去了的，就会成为亲切的怀恋。 ——亚历山大·普希金《假如生活欺骗了你》 第3集我姑且举灰黑的手装作喝干一杯酒，我将在不知道时候的时候独立远行。 ——鲁迅《野草》 第4集一旦走进深处，人与人就是相互的迷宫。 ——史铁生《活出爱》 第5集爱情是叹息吹起的一阵烟。 ——威廉·莎士比亚《罗密欧与朱丽叶》 第6集当我猜到谜底，才发现，一切都已过去，岁月早已换了谜题。 ——席慕蓉《谜题》 第7集即使一切都已发生过，我也习惯了，不再流泪。 ——舒婷《路遇》 第8集孤独的人有他们自己的泥沼。 ——张爱玲《年轻的时候》 第9集有生命的种子绝不会悲观、叹气，它相信有了阻力才有磨炼。 ——夏衍《种子的力》 第10集我们飞翔得越高，我们在那些不能飞翔得人眼中的形象越是渺小。 ——费里德里希·尼采《查拉图斯特拉如是说》 第11集纵使黑暗吞噬了一切，太阳还可以重新回来。 ——汪国真《只要明天还在》 第12集我们的心是一座宝库，一下子倒空了，就会破产。 ——奥诺雷·德·巴尔扎克《高老头》 第13集人总是倾向于把自己生活的小圈子看作是世界的中心，并把自己特殊的个人生活当做宇宙的法则。 ——恩斯特·卡希尔《人论》 第14集从前有个古老的故事，一个猎人得到了无上的光荣和尊严，但他却长时间遇到极大的困难和生命的危险。 ——汉斯·安徒生《光荣的荆棘路》 第15集弓在紧张状态的顶点马上将直射出，最沉重而又最自由的一箭。 ——阿尔贝·加缪《适度与过度》 第16集我想无论是写作还是人生，正确的出发都是走进窄门，不要被宽阔的大门所迷惑，那里面的路没有多长。 ——余华《兄弟》 第17集未来不同于过去之处，在于它明确地留给人类充足的选择和行动的空间。 ——齐格蒙特·鲍曼《自由》 第18集要像一座卓立的塔，绝不因为暴雨而倾斜。 ——但丁·阿利吉耶里《神曲》 第19集你看不见你自己，你看见的只是你的影子。 ——泰戈尔《飞鸟集》 第20集君子成人之美，不成人之恶，小人反是。 ——孔子《论语》 第21集唯一能自慰的是，我们曾真诚而充满激情地在这个世界上生活过，竭尽全力的劳动过，并不计代价地将自己的血汗献给了不死的人类之树。 ——路遥《平凡的世界》 第22集一个不成熟的人的标志，是他愿意为了某个理由而轰轰烈烈的死去；而一个成熟的人的标志，是他愿意为了某个理由而谦恭的活下去。 ——杰罗姆·塞林格《麦田里的守望者》 第23集忘却了的梦，日后也无法重温。 ——川端康成《千只鹤》 第24集死并非生的对立面，而是作为生的一部分永存。 ——村上春树《挪威的森林》 第25集天亮的日子多着呢，太阳不过是一个晓星。 ——亨利·梭罗《瓦尔登湖》 第26集沙漠很美，是因为有个地方藏着一口井。 ——安托万·埃克苏佩里《小王子》 第27集我相信那一切都是种子，只有经过埋葬，才有生机。 ——顾城《给我的尊师安徒生》 第28集一个人自身能够成为什么样的人，取决于他在生命旅途中所遭遇到的他人以及召唤着他的信念。 ——卡尔·雅斯贝尔斯《时代的精神状况》 第29集生命对每个人都提出了问题，他必须通过对自己生命的理解来回答生命的提问。 ——维克多·弗兰克尔《活出生命的意义》 第30集人们所走的道路会预示某种结局。这就是说，如果他们坚持走他们的道路，他们就一定会到达那种结局。 ——查尔斯·狄更斯《圣诞颂歌》 经典台词 人必有所执，方能有所成。 说说为什么抽烟，为了等一个劝我戒烟的女人。 争取不要错过谁，错过的，就尽量去祝福。 人生为棋我为卒，行动虽慢，命运多舛，可谁曾见我后腿半步？ 一个人在山脚喊得再起劲，山腰和山头上的人都懒得理会。 耿直其实很多时候也是一种变相的圆融，成本低，收益却不低，是聪明人才知道的诀窍。 多读书，是腹有诗书气自华，看人待物能多几分透彻；多识人，是以人为镜，能够多自省自知。 任何一个好的作品，都只是作者在讲一个故事。任何一部被后来者冠上伟大的作品，都是一群好事者在挖掘作者自己都不懂的东西。 如果你是一个好人，那你也要知道世上总有没你好的坏人，你得保护好自己。不能把所有人都想象得太美好。付出没有回报，好心被误解，都不要对生活失去信心。如果你是一个坏人，那你也要相信世上总有一种东西叫良心，要相信报应。如果你是一个男人，就要知道女人的善良，珍惜她们的青春。如果你是一个女人，就要懂得男人的不易，理解他们的奔波。如果你是一个孩子，期待着精彩人生，请不要急着长大。如果你是一个老人，见多了风霜险恶，请不要把慈悲麻木。如果你是一个功成名就的夫人，请尊重人生。","categories":[{"name":"文学爱好","slug":"文学爱好","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/"},{"name":"名言名句","slug":"文学爱好/名言名句","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E5%90%8D%E8%A8%80%E5%90%8D%E5%8F%A5/"}],"tags":[{"name":"影视剧名言","slug":"影视剧名言","permalink":"http://shenguosai.github.io/tags/%E5%BD%B1%E8%A7%86%E5%89%A7%E5%90%8D%E8%A8%80/"}]},{"title":"日本鬼子名称的由来","slug":"日本鬼子名称的由来","date":"2023-08-17T13:39:53.000Z","updated":"2024-08-27T15:40:28.767Z","comments":true,"path":"2023/08/17/日本鬼子名称的由来/","link":"","permalink":"http://shenguosai.github.io/2023/08/17/%E6%97%A5%E6%9C%AC%E9%AC%BC%E5%AD%90%E5%90%8D%E7%A7%B0%E7%9A%84%E7%94%B1%E6%9D%A5/","excerpt":"中日甲午战争的记者会上，日本人想嘲讽和羞辱中国人，事先准备好了一副对联的上联让与会的中国代表当场对出下联。 上联：骑奇马、张长弓，琴瑟琵琶、八大王并肩居头上，单戈独战。","text":"中日甲午战争的记者会上，日本人想嘲讽和羞辱中国人，事先准备好了一副对联的上联让与会的中国代表当场对出下联。 上联：骑奇马、张长弓，琴瑟琵琶、八大王并肩居头上，单戈独战。 “骑奇马，张长弓”这两句是将第一个字本身拆开两个字组成的，而琴瑟琵琶这四个字共共有八个王字对应了后半部分“八大王并肩居头上”，末句“单戈独战”的“单戈”合成一个繁体的“战”字。日本人出这个对联的大意是自己骑着快马张着长弓，兵强马壮的兵临中国，赢得胜利，并以此鄙视和嘲讽中国。 正当日本人洋洋得意认为没有中国人对出下联时，一位负责谈判的清朝大臣拿起笔写出了下联。 下联：倭委人、袭龙衣，魑魅魍魉、四小鬼屈膝跪身旁，合手擒拿。 这个下联真是神来之笔，令日本人膛目结舌。下面每一句都工整的对应上联。倭委人袭龙衣对应骑齐马张长弓，魑魅魍魉对应琴瑟琵琶，且魑魅魍魉左偏旁都是鬼字而且有四个。从字形看鬼字末笔一横勾就像是在下跪故屈膝跪身旁，末句合手擒拿的合手就是拿字，正好对应上面的八大王并肩居头上、单戈独战，而且还反过来将了日本人一军。下联的意思是日本小人偷穿龙袍，只不过是魑魅魍魉四个小鬼而已，赶快下跪认错否则合手擒拿，这下联是句句工整字字珠玑。 从那以后中国人不在称日本人为倭寇而叫日本鬼子了。","categories":[{"name":"文学爱好","slug":"文学爱好","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/"},{"name":"名言名句","slug":"文学爱好/名言名句","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E5%90%8D%E8%A8%80%E5%90%8D%E5%8F%A5/"}],"tags":[]},{"title":"几种功率管","slug":"几种功率管","date":"2023-08-17T03:32:09.000Z","updated":"2024-08-27T15:39:23.625Z","comments":true,"path":"2023/08/17/几种功率管/","link":"","permalink":"http://shenguosai.github.io/2023/08/17/%E5%87%A0%E7%A7%8D%E5%8A%9F%E7%8E%87%E7%AE%A1/","excerpt":"DMOS：Double-Diffused MOSVDMOS：Virtical DMOS垂直扩散DMOS，VDMOS的漏极在硅片背面，沟道在两个维度上包围源极，所以叫“垂直”，实际上栅极依然是水平的。VDMOS是PowerMOS（大功率MOS器件）的一种，通过垂直设计减小沟道场强，可以使短沟道承受很高的电压和电流。缺点是漏极要从背面引出，很难用和主流集成电路工艺兼容。这种结构可以减小漏电流并提高开关速度，具有低导通电阻、高电压承受能力和低开关损耗的优点。它在功率电子器件中广泛应用，如逆变器、直流-直流转换器和交流电机驱动器等。主要缺点是存在体效应和漏电流，且制造过程较为复杂。","text":"DMOS：Double-Diffused MOSVDMOS：Virtical DMOS垂直扩散DMOS，VDMOS的漏极在硅片背面，沟道在两个维度上包围源极，所以叫“垂直”，实际上栅极依然是水平的。VDMOS是PowerMOS（大功率MOS器件）的一种，通过垂直设计减小沟道场强，可以使短沟道承受很高的电压和电流。缺点是漏极要从背面引出，很难用和主流集成电路工艺兼容。这种结构可以减小漏电流并提高开关速度，具有低导通电阻、高电压承受能力和低开关损耗的优点。它在功率电子器件中广泛应用，如逆变器、直流-直流转换器和交流电机驱动器等。主要缺点是存在体效应和漏电流，且制造过程较为复杂。 LDMOS：Lateral DMOS，常用于高电压大电流电路。水平扩散DMOS，也是PowerMOS的一种，和VDMOS的区别是去掉了背部的漏极引出，方便兼容其它工艺(CMOS工艺)，和其他集成电路整合在同一块芯片上。可以看到LDMOS把背部的Drain引出挪到了右边，代价是相对VDMOS面积变大了。LDMOS具有高电压承受能力和低导通电阻的优点。LDMOS主要应用于高频功率放大器、天线开关和发射机等领域。LDMOS的主要缺点是存在漏电流和温度效应，且不适用于高速开关应用。LDMOS由于更容易与CMOS工艺兼容而被广泛采用。LDMOS器件结构如上图所示，是一种双扩散结构的功率器件。这项技术是在相同的源/漏区域注入两次，一次注入浓度较大（典型注入剂量 1015cm-2）的砷（As），另一次注入浓度较小（典型剂量1013cm-2）的硼（B）。注入之后再进行一个高温推进过程，由于硼扩散比砷快，所以在栅极边界下会沿着横向扩散更远（上图中P阱），形成一个有浓度梯度的沟道，它的沟道长度由这两次横向扩散的距离之差决定。为了增加击穿电压，在有源区和漏区之间有一个漂移区。LDMOS中的漂移区是该类器件设计的关键，漂移区的杂质浓度比较低，因此，当LDMOS 接高压时，漂移区由于是高阻，能够承受更高的电压。图1所示LDMOS的多晶扩展到漂移区的场氧上面，充当场极板，会弱化漂移区的表面电场，有利于提高击穿电压。场极板的作用大小与场极板的长度密切相关。要使场极板能充分发挥作用，一要设计好SiO2层的厚度，二要设计好场极板的长度。 DEMOS：Drain-Extended MOS，常用于高电压小电流电路。SGT：Superjunction MOSFET采用多个交替的不同材料层构成，具有高电压承受能力和低导通电阻的优点。SGT主要应用于高压直流输电、电动汽车和太阳能发电等领域。SGT的主要缺点是制造成本较高。 Cool MOS英飞凌发明制造的功率管，是一种快速开关MOSFET，具有低开关损耗和低导通电阻的优点。主要应用于高效率电源、LED驱动器和电动汽车充电器等领域。主要缺点是存在体效应和漏电流，且制造成本较高。","categories":[{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"}],"tags":[{"name":"器件","slug":"器件","permalink":"http://shenguosai.github.io/tags/%E5%99%A8%E4%BB%B6/"}]},{"title":"Hexo设置博客文章加密","slug":"Hexo设置博客文章加密","date":"2023-08-10T05:53:55.000Z","updated":"2024-08-27T15:53:23.838Z","comments":true,"path":"2023/08/10/Hexo设置博客文章加密/","link":"","permalink":"http://shenguosai.github.io/2023/08/10/Hexo%E8%AE%BE%E7%BD%AE%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/","excerpt":"准备Hexo搭配使用hexo-blog-encrypt插件可以写一些比较私密的博客，通过密码验证的方式让其他人不能随意浏览。 安装插件在blog\\目录运行以下代码： npm install hexo-blog-encrypt","text":"准备Hexo搭配使用hexo-blog-encrypt插件可以写一些比较私密的博客，通过密码验证的方式让其他人不能随意浏览。 安装插件在blog\\目录运行以下代码： npm install hexo-blog-encrypt 一般配置 在根目录的配置文件_config.yml中添加以下代码：encrypt: enable: true 设置加密之后，需要在新建博文时在文章头部添加加密的信息设置：```config title: Hexo设置博客文章加密date: 1691646835000tags:categories:password: message: ```password```: 密码。 ```message```：输入密码界面的提示说明。 # 针对Tag的加密 将以下代码复制到根目录下的```_config.yml```: ```yml encrypt: #hexo-blog-encrypt enable: true abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码. tags: - &#123;name: TagName1, password: 密码A&#125; - &#123;name: TagName2, password: 密码B&#125; wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试. wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"}]},{"title":"Diary","slug":"Diary","date":"2023-08-10T05:44:16.000Z","updated":"2024-08-27T15:50:55.891Z","comments":true,"path":"2023/08/10/Diary/","link":"","permalink":"http://shenguosai.github.io/2023/08/10/Diary/","excerpt":"","text":"2023年8月14日 晴空万里 人到中年今天又来到北京出差，早晨6点20出发，坐7点53分的G202经过3个多小时的颠簸，来到了首都的北京南站。在北京南站坐上出租车，在下出租车的时候出了一点插曲，出租车司机停在了公司院区大门旁边的自行车道上，开门的时候没有注意观察，正好有一辆自行车逆行而过，擦到了出租车门。出租车司机还是很亲切的，让我走就可以，但是在我的坚持下最终还是给了司机师傅50元的赔偿。临行时在想：这点赔偿可能也不足以弥补司机师傅的损失，但为了自己的过失而进行补偿，心情还是蛮放松的。从日本回国已过7年，逐渐的适应了中国的生活。也开始慢慢地理解了自己祖国的人们那种浮躁心态的来源，在一个14亿人口的大国，就生存本身而言，身边的每个人都是竞争对手。所以大家必须在有限的资源中为自己争取，这就是为何大家要插队，为何大家说话声音大，时刻像在争吵……进入园区宾馆办完入住手续，正好12点多，去2楼吃了午饭，在房间休息了一会就去了办公室，匆匆一下午感觉什么都没有做。在晚饭的时候正好和领导聊了一会，感觉最近他又有一些心灰意冷，不再像上次那样意气风发。在日本也换过工作，现在是回国后找的第二份工作，这位领导身上有一种我一直想有却又达不到的特质，性格直率鲜明，但也并不缺迂回，但是主流还是向前冲的，头脑敏捷却没有城府，没有城府用在成年人身上可能有些贬义，也许这种性格的人不屑于城府。晚饭过后跟我讲了他们前一个项目如何与公司对赌然后最终失败，结果赔上了一年的奖金。我也挺喜欢这种意气风发，不顾后果的对赌，也许这就是赌博使人上瘾的原因所在吧。","categories":[],"tags":[]},{"title":"Ubuntu系统搭建FTP服务器","slug":"Ubuntu系统搭建FTP服务器","date":"2023-08-07T14:32:50.000Z","updated":"2024-08-27T15:59:06.933Z","comments":true,"path":"2023/08/07/Ubuntu系统搭建FTP服务器/","link":"","permalink":"http://shenguosai.github.io/2023/08/07/Ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"Ubuntu发行版本：20.04.6 LTS 安装 vsftpd 软件包sudo apt-get update sudo apt-get install vsftp","text":"Ubuntu发行版本：20.04.6 LTS 安装 vsftpd 软件包sudo apt-get update sudo apt-get install vsftp 查看版本确认是否安装成功：vsftpd -v 配置文件在终端打开vsftpd配置文件： sudo vim /etc/vsftpd.conf 修改配置如下： anonymous_enable=NO #禁止匿名用户 local_enable=YES #允许本地用户访问 chroot_local_user=YES #防止FTP用户访问其主目录之外的任何文件 write_enable=YES #上传与删除文件及文件夹权限 allow_writeable_chroot=YES #允许用户在FTP根目录下创建和修改文件夹及文件 port_enable=YES #开启主动模式 pasv_enable=YES #开启被动模式 #设置FTP端口范围，以便在打开了防火墙的情况下开放对应端口 pasv_min_port=39000 pasv_max_port=40000 保存文件，并重启vsftpd服务，使更改生效。 sudo systemctl restart vsftpd 防火墙设置如果是VPS要在网页控制面板中开启相应端口。防火墙打开FTP服务所需端口号。 添加FTP用户创建名为guest的用户并设置密码： sudo useradd -d /home/ftp -s /bin/bash guest #新建ftp用户,-d:指定目录，-s：指定shell sudo passwd guest #新建ftp用户密码 记得要将用户登录所在的文件夹的权限赋予ftp用户，否则无法进行上传和删除。 附录1：主动模式与被动模式的区别1.FTP有控制连接和数据连接控制连接标准端口为21，用于发送FTP命令信息。数据连接标准端口为20，用于上传、下载数据。FTP协议与其它协议不同之处就在于客户端访问FTP服务器需要建立两个TCP连接，一个用来传输FTP命令，一个用来传输数据。 2.PORT(主动)模式所谓主动模式，是指FTP服务器主动去连接客户端的数据端口来传输数据。第一步：客户端提交PORT命令访问服务端的21端口，并分配一个数据端口监听(1027端口)；第二步：服务器返回确认；第三步：FTP服务器向客户端发送TCP连接请求，目标端口为1027，源端口为20。建立起传输数据的连接。 3.PASV(被动)模式所谓被动模式，是指FTP服务器“被动”等待客户端来连接自己的数据端口。第一步：客户端的命令端口与服务器的命令端口建立连接，并发送命令“PAVS”；第二步：服务器返回命令“PORT 2024”告诉客户端服务器用来监听数据连接的端口；第三步：客户端初始化一个从自己的数据端口到服务器指定的数据端口的数据连接；第四步：服务器给客户端的数据端口返回一个“ACK”响应。 附录2：vsftpd配置文件翻译# 示例配置文件，地址： /etc/vsftpd.conf # # vsftpd的默认编译设置比较谨慎，这个示例文件会放宽一些限制，使ftp服务更加易用。 # 同时建议查看vsftpd.conf.5文件以了解所有编译默认值。 # # 特别提醒：这个示例文件并不包含vsftpd选项的所有内容，建议阅读vsftpd.conf.5手册页以充分了解vsftpd的功能。 # # # # 用来设置vsftpd是否以独立守护进程运行。 # 如果设置为&quot;listen=YES&quot;，则表示vsftpd将作为独立守护进程运行； # 如果设置为&quot;listen=NO&quot;，则表示vsftpd将不会以独立守护进程运行，而是通过inetd或者initscript启动。 listen=NO # # 设置vsftpd是否启用IPv6监听。 # 如果设置为&quot;listen_ipv6=YES&quot;，则表示vsftpd将启用IPv6监听； # 如果设置为&quot;listen_ipv6=NO&quot;，则表示vsftpd将不会启用IPv6监听。 # 默认情况下，IPv6监听地址为&quot;::&quot;，同时可以接受IPv6和IPv4客户端的连接。 # 如果你只需要监听IPv4或IPv6地址，则不需要同时启用两种监听，如果你需要同时监听特定的IPv4和IPv6地址，则需要运行两个vsftpd实例，并使用两个不同的配置文件来进行配置。 listen_ipv6=YES # # 设置是否允许匿名FTP登录。 anonymous_enable=NO # # 设置是否允许本地用户登录FTP服务器。 local_enable=YES # # 设置是否允许FTP用户执行写入操作。 # write_enable=YES # # 设置本地用户的默认umask值。 # umask是一个三位八进制数，用来控制新建文件或目录的访问权限。 # 在FTP服务器中，local_umask选项用来设置本地用户上传文件或创建目录时的默认权限。 # 默认情况下，local_umask的值为077，表示新建的文件或目录权限为只有所有者可读、可写、可执行，其他用户无权访问。 # 如果你的用户希望默认权限为所有者可读、可写、可执行，其他用户可读、可执行，则可以将local_umask的值设置为022。 local_umask=022 # # 设置是否允许匿名FTP用户上传文件。 # 如果将该选项的注释去掉（即将“#”删去），并将其值设置为YES，则表示允许匿名FTP用户上传文件。 # 但是，这个选项只有在全局写入权限被激活时才会生效。此外，你还需要创建一个由FTP用户可写的目录，以便匿名FTP用户可以上传文件。 # 需要注意的是，开启匿名FTP用户上传文件功能可能存在一定的安全风险，因此需要谨慎使用。 # anon_upload_enable=YES # # 设置是否允许匿名FTP用户创建新目录。 # 如果将该选项的注释去掉（即将“#”删去），并将其值设置为YES，则表示允许匿名FTP用户创建新目录。 # 需要注意的是，开启匿名FTP用户创建新目录功能可能存在一定的安全风险，因此需要谨慎使用。 # anon_mkdir_write_enable=YES # # 这段配置文件是用来设置是否启用目录消息功能。 # 如果设置为YES，则表示启用目录消息功能。当远程用户进入某个目录时，会显示该目录的消息。 dirmessage_enable=YES # # 设置是否启用本地时间功能。 # 启用本地时间功能后，vsftpd将会在目录列表中显示本地时间而非GMT时间。 use_localtime=YES # # 启用上传和下载日志记录功能。 # 启用该功能后，vsftpd会记录每个用户的上传和下载操作，并将其记录到指定的日志文件中。 xferlog_enable=YES # # 设置数据传输的端口号。 # 将其值设置为YES，则表示数据传输使用的端口号为20。 connect_from_port_20=YES # # 设置匿名用户上传的文件的所有者。 # 设置为YES，则表示上传的文件将会被转换为指定用户的所有权。 # chown_uploads=YES # 设置为指定的用户名。 # chown_username=whoever # # 设置vsftpd日志文件的路径。该路径必须具有可写权限，并且对于vsftpd进程来说，必须具有可访问权限。 # xferlog_file=/var/log/vsftpd.log # # 设置vsftpd日志文件的格式。设备为YES则存储为标准ftpd xferlog格式。 # xferlog_std_format=YES # # 设置vsftpd空闲会话超时的时间（以秒为单位）。 # idle_session_timeout=600 # # 设置vsftpd数据连接超时的时间（以秒为单位）。 # data_connection_timeout=120 # # vsftpd建议在系统中定义一个唯一的用户，供FTP服务器使用，作为完全隔离和无特权的用户。 # nopriv_user选项可以用来指定该用户的用户名。 # nopriv_user=ftpsecure # # 用于启用异步ABOR请求的识别。 # 异步ABOR请求是一种FTP客户端请求，用于取消当前正在进行的数据传输操作。 # 启用该选项可以提高FTP服务器的性能，但也会增加安全风险。因为异步ABOR请求的代码比较复杂，可能会被黑客利用进行恶意攻击。 # 所以，如果安全性是首要考虑因素，则不建议启用该选项。 # async_abor_enable=YES # # 用于控制FTP服务器是否启用ASCII模式下的文件转换功能。 # 默认情况下，FTP服务器会假装允许ASCII模式，但实际上会忽略该请求。 # 如果需要启用ASCII模式下的文件转换功能，则可以将ascii_upload_enable和ascii_download_enable选项的注释去掉，并将它们的值设置为YES。 # 在ASCII模式下，FTP服务器会将文本文件中的换行符和回车符进行转换，以便在不同操作系统之间进行传输。 # 但是，需要注意的是，ASCII模式下可能存在一些安全风险。例如，攻击者可以利用SIZE命令在ASCII模式下发送一个超大文件名，导致FTP服务器崩溃。 # 因此，建议谨慎使用ASCII模式，并确保FTP服务器已经做好了相应的安全措施。 # ascii_upload_enable=YES # ascii_download_enable=YES # # vsftpd的登录横幅的设置，你可以理解为登录成功后的欢迎词。 # ftpd_banner=Welcome to blah FTP service. # # 设备是否拒绝匿名电子邮件地址 # 有助于减轻利用匿名访问FTP服务器进行的拒绝服务（DoS）攻击。如果检测到被禁止的电子邮件地址，服务器将拒绝该用户的访问。 # deny_email_enable=YES # 如果启用了拒绝匿名电子邮件地址的选项，则通过从指定的文件“/etc/vsftpd.banned_emails”读取被禁止的电子邮件地址列表。 # banned_email_file=/etc/vsftpd.banned_emails # # 设备限制本地用户仅访问其home目录。 # 如果启用，则本地用户将仅访问其home目录和其子目录，无法访问其他目录。 # chroot_local_user=YES # # 是否允许本地用户，是否将本地用户限制在其主目录中，如果设置为YES，则不会将列在chroot_list_file中的用户限制在其主目录中。 # chroot_local_user=YES # 是否启用chroot_list_file列表，用于指定哪些用户不应该被限制在主目录中。 # chroot_list_enable=YES # 指定了chroot_list_file列表的路径和名称。一行一个用户名。 # chroot_list_file=/etc/vsftpd.chroot_list # # 否启用ls命令的递归选项“-R”，该选项可以在列出目录内容时递归地列出子目录。 # 默认情况下，该选项被禁用以避免远程用户在大型站点上引起过多的I/O。 # ls_recurse_enable=YES # # 自定义配置： # # 指定了一个空目录作为安全chroot() jail。 # 在某些情况下，vsftpd不需要访问文件系统，因此可以将FTP用户限制在这个空目录中，以增强安全性。该目录应该为空，并且不应该被FTP用户写入。 secure_chroot_dir=/var/run/vsftpd/empty # # 指定vsftpd将使用的PAM服务的名称。 # 默认情况下，pam_service_name的值为“vsftpd”，这意味着vsftpd将使用名为“vsftpd”的PAM服务来进行认证。 # 如果需要使用其他的PAM服务，可以修改该选项的值。 pam_service_name=vsftpd # # 用于指定在SSL加密连接中使用的RSA证书的位置。 # 通过设置rsa_cert_file和rsa_private_key_file选项来指定RSA证书和私钥的位置。 # 其中，rsa_cert_file选项用于指定证书文件的位置，而rsa_private_key_file选项用于指定私钥文件的位置。 rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key # 是否启用SSL加密连接。 ssl_enable=NO # # 指定是否在vsftpd中使用UTF-8编码的文件系统。 # utf8_filesystem=YES","categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"FTP","slug":"FTP","permalink":"http://shenguosai.github.io/tags/FTP/"}]}],"categories":[{"name":"技术兴趣","slug":"技术兴趣","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"},{"name":"软件应用","slug":"技术兴趣/软件应用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"},{"name":"网络服务","slug":"技术兴趣/网络服务","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"},{"name":"科普","slug":"技术兴趣/科普","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%A7%91%E6%99%AE/"},{"name":"杂学","slug":"杂学","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/"},{"name":"历史","slug":"杂学/历史","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E5%8E%86%E5%8F%B2/"},{"name":"设备及使用","slug":"技术兴趣/设备及使用","permalink":"http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"},{"name":"半导体专业","slug":"半导体专业","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/"},{"name":"模拟电路","slug":"半导体专业/模拟电路","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/%E6%A8%A1%E6%8B%9F%E7%94%B5%E8%B7%AF/"},{"name":"EDA工具","slug":"半导体专业/EDA工具","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/EDA%E5%B7%A5%E5%85%B7/"},{"name":"Fab","slug":"半导体专业/Fab","permalink":"http://shenguosai.github.io/categories/%E5%8D%8A%E5%AF%BC%E4%BD%93%E4%B8%93%E4%B8%9A/Fab/"},{"name":"社科教育等","slug":"杂学/社科教育等","permalink":"http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E7%A4%BE%E7%A7%91%E6%95%99%E8%82%B2%E7%AD%89/"},{"name":"文学爱好","slug":"文学爱好","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/"},{"name":"诗歌","slug":"文学爱好/诗歌","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E8%AF%97%E6%AD%8C/"},{"name":"名言名句","slug":"文学爱好/名言名句","permalink":"http://shenguosai.github.io/categories/%E6%96%87%E5%AD%A6%E7%88%B1%E5%A5%BD/%E5%90%8D%E8%A8%80%E5%90%8D%E5%8F%A5/"}],"tags":[{"name":"Adobe","slug":"Adobe","permalink":"http://shenguosai.github.io/tags/Adobe/"},{"name":"Windows","slug":"Windows","permalink":"http://shenguosai.github.io/tags/Windows/"},{"name":"MathType","slug":"MathType","permalink":"http://shenguosai.github.io/tags/MathType/"},{"name":"QNAP","slug":"QNAP","permalink":"http://shenguosai.github.io/tags/QNAP/"},{"name":"Aria2","slug":"Aria2","permalink":"http://shenguosai.github.io/tags/Aria2/"},{"name":"Zerotier","slug":"Zerotier","permalink":"http://shenguosai.github.io/tags/Zerotier/"},{"name":"Linux","slug":"Linux","permalink":"http://shenguosai.github.io/tags/Linux/"},{"name":"Pura 70","slug":"Pura-70","permalink":"http://shenguosai.github.io/tags/Pura-70/"},{"name":"iPhone","slug":"iPhone","permalink":"http://shenguosai.github.io/tags/iPhone/"},{"name":"DDNS","slug":"DDNS","permalink":"http://shenguosai.github.io/tags/DDNS/"},{"name":"儿童手表","slug":"儿童手表","permalink":"http://shenguosai.github.io/tags/%E5%84%BF%E7%AB%A5%E6%89%8B%E8%A1%A8/"},{"name":"Nginx","slug":"Nginx","permalink":"http://shenguosai.github.io/tags/Nginx/"},{"name":"Docker","slug":"Docker","permalink":"http://shenguosai.github.io/tags/Docker/"},{"name":"docker","slug":"docker","permalink":"http://shenguosai.github.io/tags/docker/"},{"name":"远程打印","slug":"远程打印","permalink":"http://shenguosai.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%89%93%E5%8D%B0/"},{"name":"小米","slug":"小米","permalink":"http://shenguosai.github.io/tags/%E5%B0%8F%E7%B1%B3/"},{"name":"器件","slug":"器件","permalink":"http://shenguosai.github.io/tags/%E5%99%A8%E4%BB%B6/"},{"name":"Virtuoso","slug":"Virtuoso","permalink":"http://shenguosai.github.io/tags/Virtuoso/"},{"name":"开关电源","slug":"开关电源","permalink":"http://shenguosai.github.io/tags/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/"},{"name":"反馈","slug":"反馈","permalink":"http://shenguosai.github.io/tags/%E5%8F%8D%E9%A6%88/"},{"name":"TVBox","slug":"TVBox","permalink":"http://shenguosai.github.io/tags/TVBox/"},{"name":"Calibre","slug":"Calibre","permalink":"http://shenguosai.github.io/tags/Calibre/"},{"name":"PDK","slug":"PDK","permalink":"http://shenguosai.github.io/tags/PDK/"},{"name":"VIM","slug":"VIM","permalink":"http://shenguosai.github.io/tags/VIM/"},{"name":"Sublime","slug":"Sublime","permalink":"http://shenguosai.github.io/tags/Sublime/"},{"name":"英语","slug":"英语","permalink":"http://shenguosai.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"Hexo","slug":"Hexo","permalink":"http://shenguosai.github.io/tags/Hexo/"},{"name":"监控","slug":"监控","permalink":"http://shenguosai.github.io/tags/%E7%9B%91%E6%8E%A7/"},{"name":"育儿","slug":"育儿","permalink":"http://shenguosai.github.io/tags/%E8%82%B2%E5%84%BF/"},{"name":"Spice","slug":"Spice","permalink":"http://shenguosai.github.io/tags/Spice/"},{"name":"影视剧名言","slug":"影视剧名言","permalink":"http://shenguosai.github.io/tags/%E5%BD%B1%E8%A7%86%E5%89%A7%E5%90%8D%E8%A8%80/"},{"name":"FTP","slug":"FTP","permalink":"http://shenguosai.github.io/tags/FTP/"}]}