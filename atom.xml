<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://shenguosai.github.io/atom.xml" rel="self"/>
  
  <link href="http://shenguosai.github.io/"/>
  <updated>2023-08-10T08:35:18.090Z</updated>
  <id>http://shenguosai.github.io/</id>
  
  <author>
    <name>乙未丁酉壬戌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo设置博客文章加密</title>
    <link href="http://shenguosai.github.io/2023/08/10/Hexo%E8%AE%BE%E7%BD%AE%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <id>http://shenguosai.github.io/2023/08/10/Hexo%E8%AE%BE%E7%BD%AE%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</id>
    <published>2023-08-10T05:53:55.000Z</published>
    <updated>2023-08-10T08:35:18.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>Hexo搭配使用<a href="https://www.npmjs.com/package/hexo-blog-encrypt">hexo-blog-encrypt</a>插件可以写一些比较私密的博客，通过密码验证的方式让其他人不能随意浏览。</p><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>在<code>blog\</code>目录运行以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure><h1 id="一般配置"><a href="#一般配置" class="headerlink" title="一般配置"></a>一般配置</h1><ol><li>在根目录的配置文件<code>_config.yml</code>中添加以下代码：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>设置加密之后，需要在新建博文时在文章头部添加加密的信息设置：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">password: </span><br><span class="line">message: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>密码。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">```message```：输入密码界面的提示说明。</span><br><span class="line"></span><br><span class="line"># 针对Tag的加密</span><br><span class="line">将以下代码复制到根目录下的```_config.yml```:</span><br><span class="line">```yml</span><br><span class="line">encrypt: #hexo-blog-encrypt</span><br><span class="line">  enable: true</span><br><span class="line">  abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">  message: 您好, 这里需要密码.</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: TagName1, password: 密码A&#125;</span><br><span class="line">  - &#123;name: TagName2, password: 密码B&#125;</span><br><span class="line">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;Hexo搭配使用&lt;a href=&quot;https://www.npmjs.com/package/hexo-blog-encrypt&quot;&gt;hexo</summary>
      
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>Diary</title>
    <link href="http://shenguosai.github.io/2023/08/10/Diary/"/>
    <id>http://shenguosai.github.io/2023/08/10/Diary/</id>
    <published>2023-08-10T05:44:16.000Z</published>
    <updated>2023-08-10T08:03:12.249Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e22229fc1811271847865c75cafb5ebd323b0341b5dca2c730882631b1c3bcd9">da0a26c26fdc3adc6c296250a94e3b4e37c3b1006ca99a84384837ba60666222433f5c5691174b7e60b8f89cce75220ed040beb8beea7db935b1a7dd82a97e0b505a59c1636bd71a5b1cdeab4f0b6a2130ded0a658bf1ec8dcb7c7752d41231b3a82b2662764d9981fa9736279858036</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="Article" scheme="http://shenguosai.github.io/categories/Article/"/>
    
    
    <category term="Privacy" scheme="http://shenguosai.github.io/tags/Privacy/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu系统搭建FTP服务器</title>
    <link href="http://shenguosai.github.io/2023/08/07/Ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://shenguosai.github.io/2023/08/07/Ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2023-08-07T14:32:50.000Z</published>
    <updated>2023-08-08T16:42:01.731Z</updated>
    
    <content type="html"><![CDATA[<p><code>Ubuntu发行版本：20.04.6 LTS</code></p><h2 id="安装-vsftpd-软件包"><a href="#安装-vsftpd-软件包" class="headerlink" title="安装 vsftpd 软件包"></a>安装 <a href="https://so.csdn.net/so/search?q=vsftpd&spm=1001.2101.3001.7020">vsftpd</a> 软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install vsftp</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20230807224413.png" alt="20230807224413"><br>查看版本确认是否安装成功：<code>vsftpd -v</code><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20230807224623.png" alt="20230807224623"></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在终端打开vsftpd配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/vsftpd.conf</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO             #禁止匿名用户</span><br><span class="line">local_enable=YES                #允许本地用户访问</span><br><span class="line">chroot_local_user=YES           #防止FTP用户访问其主目录之外的任何文件</span><br><span class="line">write_enable=YES                #上传与删除文件及文件夹权限</span><br><span class="line"></span><br><span class="line">allow_writeable_chroot=YES      #允许用户在FTP根目录下创建和修改文件夹及文件</span><br><span class="line">port_enable=YES                 #开启主动模式</span><br><span class="line">pasv_enable=YES                 #开启被动模式</span><br><span class="line">#设置FTP端口范围，以便在打开了防火墙的情况下开放对应端口</span><br><span class="line">pasv_min_port=39000</span><br><span class="line">pasv_max_port=40000</span><br></pre></td></tr></table></figure><p>保存文件，并重启vsftpd服务，使更改生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart vsftpd</span><br></pre></td></tr></table></figure><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><p>如果是VPS要在网页控制面板中开启相应端口。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20230808003301.png" alt="20230808003301"><br>防火墙打开FTP服务所需端口号。</p><h2 id="添加FTP用户"><a href="#添加FTP用户" class="headerlink" title="添加FTP用户"></a>添加FTP用户</h2><p>创建名为guest的用户并设置密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -d /home/ftp -s /bin/bash guest      <span class="comment">#新建ftp用户,-d:指定目录，-s：指定shell</span></span><br><span class="line">sudo passwd guest       <span class="comment">#新建ftp用户密码</span></span><br></pre></td></tr></table></figure><p>记得要将用户登录所在的文件夹的权限赋予ftp用户，否则无法进行上传和删除。</p><h2 id="附录1：主动模式与被动模式的区别"><a href="#附录1：主动模式与被动模式的区别" class="headerlink" title="附录1：主动模式与被动模式的区别"></a>附录1：主动模式与被动模式的区别</h2><h4 id="1-FTP有控制连接和数据连接"><a href="#1-FTP有控制连接和数据连接" class="headerlink" title="1.FTP有控制连接和数据连接"></a>1.FTP有控制连接和数据连接</h4><p>控制连接标准端口为21，用于发送FTP命令信息。<br>数据连接标准端口为20，用于上传、下载数据。<br>FTP协议与其它协议不同之处就在于客户端访问FTP服务器需要建立两个TCP连接，一个用来传输FTP命令，一个用来传输数据。</p><h4 id="2-PORT-主动-模式"><a href="#2-PORT-主动-模式" class="headerlink" title="2.PORT(主动)模式"></a>2.PORT(主动)模式</h4><p>所谓主动模式，是指FTP服务器主动去连接客户端的数据端口来传输数据。<br>第一步：客户端提交PORT命令访问服务端的21端口，并分配一个数据端口监听(1027端口)；<br>第二步：服务器返回确认；<br>第三步：FTP服务器向客户端发送TCP连接请求，目标端口为1027，源端口为20。建立起传输数据的连接。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/Port_Mode.jpg" alt="Port_Mode"></p><h4 id="3-PASV-被动-模式"><a href="#3-PASV-被动-模式" class="headerlink" title="3.PASV(被动)模式"></a>3.PASV(被动)模式</h4><p>所谓被动模式，是指FTP服务器“被动”等待客户端来连接自己的数据端口。<br>第一步：客户端的命令端口与服务器的命令端口建立连接，并发送命令“PAVS”；<br>第二步：服务器返回命令“PORT 2024”告诉客户端服务器用来监听数据连接的端口；<br>第三步：客户端初始化一个从自己的数据端口到服务器指定的数据端口的数据连接；<br>第四步：服务器给客户端的数据端口返回一个“ACK”响应。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/PASV_Mode.jpg" alt="PASV_Mode"></p><h2 id="附录2：vsftpd配置文件翻译"><a href="#附录2：vsftpd配置文件翻译" class="headerlink" title="附录2：vsftpd配置文件翻译"></a>附录2：vsftpd配置文件翻译</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"># 示例配置文件，地址： /etc/vsftpd.conf</span><br><span class="line">#</span><br><span class="line"># vsftpd的默认编译设置比较谨慎，这个示例文件会放宽一些限制，使ftp服务更加易用。</span><br><span class="line"># 同时建议查看vsftpd.conf.5文件以了解所有编译默认值。</span><br><span class="line">#</span><br><span class="line"># 特别提醒：这个示例文件并不包含vsftpd选项的所有内容，建议阅读vsftpd.conf.5手册页以充分了解vsftpd的功能。</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># </span><br><span class="line"># 用来设置vsftpd是否以独立守护进程运行。</span><br><span class="line"># 如果设置为&quot;listen=YES&quot;，则表示vsftpd将作为独立守护进程运行；</span><br><span class="line"># 如果设置为&quot;listen=NO&quot;，则表示vsftpd将不会以独立守护进程运行，而是通过inetd或者initscript启动。</span><br><span class="line">listen=NO</span><br><span class="line">#</span><br><span class="line"># 设置vsftpd是否启用IPv6监听。</span><br><span class="line"># 如果设置为&quot;listen_ipv6=YES&quot;，则表示vsftpd将启用IPv6监听；</span><br><span class="line"># 如果设置为&quot;listen_ipv6=NO&quot;，则表示vsftpd将不会启用IPv6监听。</span><br><span class="line"># 默认情况下，IPv6监听地址为&quot;::&quot;，同时可以接受IPv6和IPv4客户端的连接。</span><br><span class="line"># 如果你只需要监听IPv4或IPv6地址，则不需要同时启用两种监听，如果你需要同时监听特定的IPv4和IPv6地址，则需要运行两个vsftpd实例，并使用两个不同的配置文件来进行配置。</span><br><span class="line">listen_ipv6=YES</span><br><span class="line">#</span><br><span class="line"># 设置是否允许匿名FTP登录。</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#</span><br><span class="line"># 设置是否允许本地用户登录FTP服务器。</span><br><span class="line">local_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置是否允许FTP用户执行写入操作。</span><br><span class="line"># write_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置本地用户的默认umask值。</span><br><span class="line"># umask是一个三位八进制数，用来控制新建文件或目录的访问权限。</span><br><span class="line"># 在FTP服务器中，local_umask选项用来设置本地用户上传文件或创建目录时的默认权限。</span><br><span class="line"># 默认情况下，local_umask的值为077，表示新建的文件或目录权限为只有所有者可读、可写、可执行，其他用户无权访问。</span><br><span class="line"># 如果你的用户希望默认权限为所有者可读、可写、可执行，其他用户可读、可执行，则可以将local_umask的值设置为022。</span><br><span class="line">local_umask=022</span><br><span class="line">#</span><br><span class="line"># 设置是否允许匿名FTP用户上传文件。</span><br><span class="line"># 如果将该选项的注释去掉（即将“#”删去），并将其值设置为YES，则表示允许匿名FTP用户上传文件。</span><br><span class="line"># 但是，这个选项只有在全局写入权限被激活时才会生效。此外，你还需要创建一个由FTP用户可写的目录，以便匿名FTP用户可以上传文件。</span><br><span class="line"># 需要注意的是，开启匿名FTP用户上传文件功能可能存在一定的安全风险，因此需要谨慎使用。</span><br><span class="line"># anon_upload_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置是否允许匿名FTP用户创建新目录。</span><br><span class="line"># 如果将该选项的注释去掉（即将“#”删去），并将其值设置为YES，则表示允许匿名FTP用户创建新目录。</span><br><span class="line"># 需要注意的是，开启匿名FTP用户创建新目录功能可能存在一定的安全风险，因此需要谨慎使用。</span><br><span class="line"># anon_mkdir_write_enable=YES</span><br><span class="line">#</span><br><span class="line"># 这段配置文件是用来设置是否启用目录消息功能。</span><br><span class="line"># 如果设置为YES，则表示启用目录消息功能。当远程用户进入某个目录时，会显示该目录的消息。</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置是否启用本地时间功能。</span><br><span class="line"># 启用本地时间功能后，vsftpd将会在目录列表中显示本地时间而非GMT时间。</span><br><span class="line">use_localtime=YES</span><br><span class="line">#</span><br><span class="line"># 启用上传和下载日志记录功能。</span><br><span class="line"># 启用该功能后，vsftpd会记录每个用户的上传和下载操作，并将其记录到指定的日志文件中。</span><br><span class="line">xferlog_enable=YES</span><br><span class="line">#</span><br><span class="line"># 设置数据传输的端口号。</span><br><span class="line"># 将其值设置为YES，则表示数据传输使用的端口号为20。</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">#</span><br><span class="line"># 设置匿名用户上传的文件的所有者。</span><br><span class="line"># 设置为YES，则表示上传的文件将会被转换为指定用户的所有权。</span><br><span class="line"># chown_uploads=YES</span><br><span class="line"># 设置为指定的用户名。</span><br><span class="line"># chown_username=whoever</span><br><span class="line">#</span><br><span class="line"># 设置vsftpd日志文件的路径。该路径必须具有可写权限，并且对于vsftpd进程来说，必须具有可访问权限。</span><br><span class="line"># xferlog_file=/var/log/vsftpd.log</span><br><span class="line">#</span><br><span class="line"># 设置vsftpd日志文件的格式。设备为YES则存储为标准ftpd xferlog格式。</span><br><span class="line"># xferlog_std_format=YES</span><br><span class="line">#</span><br><span class="line"># 设置vsftpd空闲会话超时的时间（以秒为单位）。</span><br><span class="line"># idle_session_timeout=600</span><br><span class="line">#</span><br><span class="line"># 设置vsftpd数据连接超时的时间（以秒为单位）。</span><br><span class="line"># data_connection_timeout=120</span><br><span class="line">#</span><br><span class="line"># vsftpd建议在系统中定义一个唯一的用户，供FTP服务器使用，作为完全隔离和无特权的用户。</span><br><span class="line"># nopriv_user选项可以用来指定该用户的用户名。</span><br><span class="line"># nopriv_user=ftpsecure</span><br><span class="line">#</span><br><span class="line"># 用于启用异步ABOR请求的识别。</span><br><span class="line"># 异步ABOR请求是一种FTP客户端请求，用于取消当前正在进行的数据传输操作。</span><br><span class="line"># 启用该选项可以提高FTP服务器的性能，但也会增加安全风险。因为异步ABOR请求的代码比较复杂，可能会被黑客利用进行恶意攻击。</span><br><span class="line"># 所以，如果安全性是首要考虑因素，则不建议启用该选项。</span><br><span class="line"># async_abor_enable=YES</span><br><span class="line">#</span><br><span class="line"># 用于控制FTP服务器是否启用ASCII模式下的文件转换功能。</span><br><span class="line"># 默认情况下，FTP服务器会假装允许ASCII模式，但实际上会忽略该请求。</span><br><span class="line"># 如果需要启用ASCII模式下的文件转换功能，则可以将ascii_upload_enable和ascii_download_enable选项的注释去掉，并将它们的值设置为YES。</span><br><span class="line"># 在ASCII模式下，FTP服务器会将文本文件中的换行符和回车符进行转换，以便在不同操作系统之间进行传输。</span><br><span class="line"># 但是，需要注意的是，ASCII模式下可能存在一些安全风险。例如，攻击者可以利用SIZE命令在ASCII模式下发送一个超大文件名，导致FTP服务器崩溃。</span><br><span class="line"># 因此，建议谨慎使用ASCII模式，并确保FTP服务器已经做好了相应的安全措施。</span><br><span class="line"># ascii_upload_enable=YES</span><br><span class="line"># ascii_download_enable=YES</span><br><span class="line">#</span><br><span class="line"># vsftpd的登录横幅的设置，你可以理解为登录成功后的欢迎词。</span><br><span class="line"># ftpd_banner=Welcome to blah FTP service.</span><br><span class="line">#</span><br><span class="line"># 设备是否拒绝匿名电子邮件地址</span><br><span class="line"># 有助于减轻利用匿名访问FTP服务器进行的拒绝服务（DoS）攻击。如果检测到被禁止的电子邮件地址，服务器将拒绝该用户的访问。</span><br><span class="line"># deny_email_enable=YES</span><br><span class="line"># 如果启用了拒绝匿名电子邮件地址的选项，则通过从指定的文件“/etc/vsftpd.banned_emails”读取被禁止的电子邮件地址列表。</span><br><span class="line"># banned_email_file=/etc/vsftpd.banned_emails</span><br><span class="line">#</span><br><span class="line"># 设备限制本地用户仅访问其home目录。</span><br><span class="line"># 如果启用，则本地用户将仅访问其home目录和其子目录，无法访问其他目录。</span><br><span class="line"># chroot_local_user=YES</span><br><span class="line">#</span><br><span class="line"># 是否允许本地用户，是否将本地用户限制在其主目录中，如果设置为YES，则不会将列在chroot_list_file中的用户限制在其主目录中。</span><br><span class="line"># chroot_local_user=YES</span><br><span class="line"># 是否启用chroot_list_file列表，用于指定哪些用户不应该被限制在主目录中。</span><br><span class="line"># chroot_list_enable=YES</span><br><span class="line"># 指定了chroot_list_file列表的路径和名称。一行一个用户名。</span><br><span class="line"># chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line">#</span><br><span class="line"># 否启用ls命令的递归选项“-R”，该选项可以在列出目录内容时递归地列出子目录。</span><br><span class="line"># 默认情况下，该选项被禁用以避免远程用户在大型站点上引起过多的I/O。</span><br><span class="line"># ls_recurse_enable=YES</span><br><span class="line">#</span><br><span class="line"># 自定义配置：</span><br><span class="line">#</span><br><span class="line"># 指定了一个空目录作为安全chroot() jail。</span><br><span class="line"># 在某些情况下，vsftpd不需要访问文件系统，因此可以将FTP用户限制在这个空目录中，以增强安全性。该目录应该为空，并且不应该被FTP用户写入。</span><br><span class="line">secure_chroot_dir=/var/run/vsftpd/empty</span><br><span class="line">#</span><br><span class="line"># 指定vsftpd将使用的PAM服务的名称。</span><br><span class="line"># 默认情况下，pam_service_name的值为“vsftpd”，这意味着vsftpd将使用名为“vsftpd”的PAM服务来进行认证。</span><br><span class="line"># 如果需要使用其他的PAM服务，可以修改该选项的值。</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">#</span><br><span class="line"># 用于指定在SSL加密连接中使用的RSA证书的位置。</span><br><span class="line"># 通过设置rsa_cert_file和rsa_private_key_file选项来指定RSA证书和私钥的位置。</span><br><span class="line"># 其中，rsa_cert_file选项用于指定证书文件的位置，而rsa_private_key_file选项用于指定私钥文件的位置。</span><br><span class="line">rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem</span><br><span class="line">rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key</span><br><span class="line"># 是否启用SSL加密连接。</span><br><span class="line">ssl_enable=NO</span><br><span class="line">#</span><br><span class="line"># 指定是否在vsftpd中使用UTF-8编码的文件系统。</span><br><span class="line"># utf8_filesystem=YES</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;Ubuntu发行版本：20.04.6 LTS&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装-vsftpd-软件包&quot;&gt;&lt;a href=&quot;#安装-vsftpd-软件包&quot; class=&quot;headerlink&quot; title=&quot;安装 vsftpd 软件包&quot;&gt;&lt;/a&gt;安装 &lt;</summary>
      
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>在自己搭建的hexo博客上发布文章</title>
    <link href="http://shenguosai.github.io/2023/08/03/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/"/>
    <id>http://shenguosai.github.io/2023/08/03/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</id>
    <published>2023-08-02T16:19:02.735Z</published>
    <updated>2023-08-08T16:57:41.217Z</updated>
    
    <content type="html"><![CDATA[<ol><li>在<code>/source/_posts</code>目录下建立<code>.md</code>文件并撰写内容；<br>编辑文章时要在第一行中加上<code>title</code>，如果不按此格式来写的话在<code>hexo</code>博客中就会显示这篇文章没有名字。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章题目</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li>命名完成后，将终端当前目录更改为<code>/source/_posts</code><br>输入<code>hexo g</code>(完整命令为<code>hexo generate</code>)，生成静态文件；<br>输入<code>hexo s</code>(完整命令为<code>hexo server</code>)，启动local服务器，主要用于本地预览。完成后打开浏览器输入<a href="">http://localhost:4000</a>，就会发现多了刚才写的那篇博客。<br>输入<code>hexo d</code>(完整命令为<code>hexo deploy</code>)，将本地文件发布到github仓库上。</li><li>每次对hexo博客上的<code>.md</code>文件进行更改后都要重复步骤2，这样更改的内容才能在hexo博客上显示。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;/source/_posts&lt;/code&gt;目录下建立&lt;code&gt;.md&lt;/code&gt;文件并撰写内容；&lt;br&gt;编辑文章时要在第一行中加上&lt;code&gt;title&lt;/code&gt;，如果不按此格式来写的话在&lt;code&gt;hexo&lt;/code&gt;博客中就会显示这篇</summary>
      
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客挂载Github(未完)</title>
    <link href="http://shenguosai.github.io/2023/08/03/Hexo%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%82%E8%BD%BDgithub/"/>
    <id>http://shenguosai.github.io/2023/08/03/Hexo%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%82%E8%BD%BDgithub/</id>
    <published>2023-08-02T16:03:40.079Z</published>
    <updated>2023-08-08T16:41:00.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="1-Git"><a href="#1-Git" class="headerlink" title="1.Git"></a>1.Git</h2><p><a href="https://git-scm.com/downloads">Git官网下载</a><br>下载完成后，双击安装包，选项全部默认，一路Next安装完成。<br>测试安装成功，输入<code>git --version</code>显示版本信息即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L ~$ git --version</span><br><span class="line">git version 2.37.1</span><br></pre></td></tr></table></figure><h2 id="2-Node-js"><a href="#2-Node-js" class="headerlink" title="2.Node.js"></a>2.Node.js</h2><p><a href="https://nodejs.org/zh-cn/">Node官网下载</a><br>下载完成后，双击安装包，选项全部默认，一路Next安装完成。<br>测试安装成功，输入<code>node -v</code>显示版本信息即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L ~$ node -v</span><br><span class="line">v18.15.0</span><br></pre></td></tr></table></figure><h2 id="3-Gitee或GitHub-目前只成功挂载GitHub-2023-8-3"><a href="#3-Gitee或GitHub-目前只成功挂载GitHub-2023-8-3" class="headerlink" title="3.Gitee或GitHub(目前只成功挂载GitHub@2023&#x2F;8&#x2F;3)"></a>3.Gitee或GitHub(目前只成功挂载GitHub@2023&#x2F;8&#x2F;3)</h2><p>准备Gitee或GitHub账号，这个是用来托管的，可以不需要自己的服务器和域名就可以拥有自己的博客。<br><a href="https://gitee.com/">Gitee官网</a><br><a href="https://github.com/">GitHub官网</a><br>注册完成后，创建一个仓库，然后就可以将hexo挂载到这个仓库中了。<br>创建仓库的时候用 <em>YourName.github.io</em> 或 <em>YourNama.gitee.io</em> ，这样后面托管的域名比较好记。</p><h1 id="二、博客搭建"><a href="#二、博客搭建" class="headerlink" title="二、博客搭建"></a>二、博客搭建</h1><h2 id="1-Hexo下载"><a href="#1-Hexo下载" class="headerlink" title="1.Hexo下载"></a>1.Hexo下载</h2><p>新建一个文件夹作为博客的顶级目录。<br>打开cmd，进入到新建的文件夹目录，输入<code>npm install hexo-cli -g</code>以安装hexo。</p><h2 id="2-Hexo初始化"><a href="#2-Hexo初始化" class="headerlink" title="2.Hexo初始化"></a>2.Hexo初始化</h2><p>安装完成后，输入<code>hexo init blog</code>进行初始化。<br>注：blog就是<b><font color="red">步骤1</font></b>中新建的目录。<br>初始化后，文件夹下就会有下方形式的目录结构。<br><em><font color="grey" size=1 >设置好图床后添加</font></em><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/image-20230807153014796.png" alt="image-20230807153014796"></p><h2 id="3-启动博客"><a href="#3-启动博客" class="headerlink" title="3.启动博客"></a>3.启动博客</h2><p>使用终端将目录进入到blog下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ la</span><br><span class="line">total 245</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 18:38 .</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:13 ..</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  3 00:39 .deploy_git</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 .github</span><br><span class="line">-rw-rw-r--    1 shenguos 197121          82 Aug  2 15:14 .gitignore</span><br><span class="line">-rw-rw-r--    1 shenguos 197121           0 Aug  2 15:14 _config.landscape.yml</span><br><span class="line">-rw-rw-r--    1 shenguos 197121        2582 Aug  3 00:01 _config.yml</span><br><span class="line">-rwxrwxr-x    1 shenguos 197121      352551 Aug  3 00:38 db.json</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:34 node_modules</span><br><span class="line">-rwxrwxr-x    1 shenguos 197121       92731 Aug  2 15:34 package-lock.json</span><br><span class="line">-rw-rw-r--    1 shenguos 197121         655 Aug  2 15:34 package.json</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  3 00:08 public</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 scaffolds</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 source</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 23:53 themes</span><br><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本地静态网页就启动了，在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a>就能看到如下网页。<br><em><font color="grey" size=1 >设置好图床后添加</font></em></p><h1 id="三、挂载到GitHub上"><a href="#三、挂载到GitHub上" class="headerlink" title="三、挂载到GitHub上"></a>三、挂载到GitHub上</h1><h2 id="1-挂载须知"><a href="#1-挂载须知" class="headerlink" title="1.挂载须知"></a>1.挂载须知</h2><h3 id="a-git配置"><a href="#a-git配置" class="headerlink" title="a) git配置"></a>a) git配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;shenguosai&quot;</span>  //用户名</span><br><span class="line">git config --global user.email <span class="string">&quot;xxx@xx.com&quot;</span>  //邮箱</span><br></pre></td></tr></table></figure><p>用户名和邮箱根据注册github的信息自行修改。</p><h3 id="b-SSH密钥"><a href="#b-SSH密钥" class="headerlink" title="b) SSH密钥"></a>b) SSH密钥</h3><p>挂载到GitHub上时，为了方便，我们要创建<code>ssh</code>密钥，使用ssh连接更为方便的推送。<br>方法：<code>ssh-keygen -C &quot;xxxx@xxx.com&quot;</code>就会生成密钥，Linux用户在<code>~/.ssh/</code>中，Windows用户在<code>C:/Users/xxx/.ssh/</code>中。<br>在github上绑定公钥:<code>Settings-&gt;SSH and GPG keys-&gt;SSH keys-&gt;New SSH key</code><br>将生成的<code>id_rsa.pub</code>中的文本内容复制到<code>Key</code>框中，点击<code>Add SSH key</code>。<br><em><font color="grey" size=1 >此处说明需要添加图片，设置好图床后添加。</font></em><br>输入<code>ssh -T git@github.com</code>，如果如下所示，出现你的用户名即配置成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ ssh -T git@github.com</span><br><span class="line">X11 forwarding request failed on channel 0</span><br><span class="line">Hi shenguosai! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h3 id="c-Token"><a href="#c-Token" class="headerlink" title="c) Token"></a>c) Token</h3><h2 id="2-开始挂载"><a href="#2-开始挂载" class="headerlink" title="2.开始挂载"></a>2.开始挂载</h2><p>打开博客目录下的<code>.config.yml</code>(hexo的配置文件)，下拉到最下方。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://ghp_xxxxxx@github.com/shenguosai/shenguosai.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><code>ghp_xxxxxx</code>即使上面申请的token。<br>然后输入<code>hexo cl</code>清除缓存，完成代码为<code>hexo clean</code>。<br>清除缓存后输入<code>hexo g</code>生成静态网页，然后输入<code>hexo d</code>推送到<strong>GitHub</strong>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h1&gt;&lt;h2 id=&quot;1-Git&quot;&gt;&lt;a href=&quot;#1-Git&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
</feed>
