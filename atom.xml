<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小人驿站</title>
  
  <subtitle>模拟电路工程师</subtitle>
  <link href="http://shenguosai.github.io/atom.xml" rel="self"/>
  
  <link href="http://shenguosai.github.io/"/>
  <updated>2024-10-21T06:06:10.460Z</updated>
  <id>http://shenguosai.github.io/</id>
  
  <author>
    <name>市井一俗人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用photoshop24.5.0将照片底色改为纯白色</title>
    <link href="http://shenguosai.github.io/2024/10/21/%E4%BD%BF%E7%94%A8photoshop24-5-0%E5%B0%86%E7%85%A7%E7%89%87%E5%BA%95%E8%89%B2%E6%94%B9%E4%B8%BA%E7%BA%AF%E7%99%BD%E8%89%B2/"/>
    <id>http://shenguosai.github.io/2024/10/21/%E4%BD%BF%E7%94%A8photoshop24-5-0%E5%B0%86%E7%85%A7%E7%89%87%E5%BA%95%E8%89%B2%E6%94%B9%E4%B8%BA%E7%BA%AF%E7%99%BD%E8%89%B2/</id>
    <published>2024-10-21T03:20:07.000Z</published>
    <updated>2024-10-21T06:06:10.460Z</updated>
    
    <content type="html"><![CDATA[<ol><li>打开 Adobe Photoshop 24.5.0 软件；</li><li>文件 =&gt; 打开 =&gt; 选择要处理的图片；</li><li>点击图片下方的”移除背景”；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140008.png" alt="20241021140008"><br>移除背景后的图片如下:<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140104.png" alt="20241021140104"></li><li>点击右下角”创建新图层”；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140204.png" alt="20241021140204"></li><li>选择”油漆桶工具”，然后选择底色照片(这里是白色)，然后点击图片，就增加了纯白的图层；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140339.png" alt="20241021140339"><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140454.png" alt="20241021140454"></li><li>将新建的图层移到原图层下方，就得到了白底的照片。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20241021140602.png" alt="20241021140602"></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;打开 Adobe Photoshop 24.5.0 软件；&lt;/li&gt;
&lt;li&gt;文件 =&amp;gt; 打开 =&amp;gt; 选择要处理的图片；&lt;/li&gt;
&lt;li&gt;点击图片下方的”移除背景”；&lt;br&gt;&lt;img src=&quot;https://raw.githubuserconte</summary>
      
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="图片处理" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
    
    <category term="Adobe" scheme="http://shenguosai.github.io/tags/Adobe/"/>
    
  </entry>
  
  <entry>
    <title>关闭 Adobe Genuine Service Alert 正版验证</title>
    <link href="http://shenguosai.github.io/2024/09/09/%E5%85%B3%E9%97%AD-Adobe-Genuine-Service-Alert-%E6%AD%A3%E7%89%88%E9%AA%8C%E8%AF%81/"/>
    <id>http://shenguosai.github.io/2024/09/09/%E5%85%B3%E9%97%AD-Adobe-Genuine-Service-Alert-%E6%AD%A3%E7%89%88%E9%AA%8C%E8%AF%81/</id>
    <published>2024-09-09T01:10:18.000Z</published>
    <updated>2024-09-24T02:32:37.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自用方法"><a href="#自用方法" class="headerlink" title="自用方法"></a>自用方法</h1><ol><li>单击 Windows 键，输入”服务”或”Service”，打开服务选项。</li><li><span id="more"></span><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240909091647.png" alt="20240909091647"></li><li>在服务中找到 “Adobe Genuine Software Monitor Service” 服务。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240909091917.png" alt="20240909091917"></li><li>右键点击 =&gt; 左键属性，弹出属性对话框。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240909092020.png" alt="20240909092020"></li><li>将启动类型改为<strong>禁止</strong>，并在服务状态栏点击<strong>停止</strong>将服务状态改为<strong>已停止</strong>。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240909092245.png" alt="20240909092245"></li><li>防火墙设置规则让 Adobe Genuine Launcher.exe，AdobeGCClient.exe，AGMService.exe，AGSService.exe 无法联网。<br>打开 Windows 防火墙 =&gt; 入站规则 =&gt; 新建规则 =&gt; 程序(下一步) =&gt; 此程序路径中选择程序路径 (C:\Program Files (x86)\Common Files\Adobe\AdobeGCClient)并打开 =&gt; 操作:阻止连接 =&gt; 输入名称即可。<br>同样方法设置出站规则。<br>这样就不会再出现弹窗了。</li></ol><h1 id="网上博客中介绍的方法"><a href="#网上博客中介绍的方法" class="headerlink" title="网上博客中介绍的方法"></a>网上博客中介绍的方法</h1><p>网上介绍的方法都是要删掉 AdobeGCClient 正版检测文件并防止其重建，应为自用方法也可以实现，没有试过。</p><ol><li>在弹出 Adobe Genuine Service Alert 提示时打开任务管理器；</li><li>“任务管理器 =&gt; 进程 =&gt; 后台进程”中找到类似 “Adobe Genuine Software Client” 的进程；</li><li>右击上面的进程 =&gt; 打开文件所在位置；( 我的位置是:C:\Program Files (x86)\Common Files\Adobe\AdobeGCClient\ )</li><li>在任务管理器结束2中的进程并将以下文件移除，Adobe Genuine Launcher.exe，AdobeGCClient.exe，AGMService.exe，AGSService.exe，网上没有明确指出删除哪些文件，所以建议将其移动到一个专门地方进行备份，防止 Adobe 因缺少某些文件导致无法使用；</li><li>新建几个空的文本文件，文件名与上面移除的文件名相同并将后缀改为 exe，以防止程序自动生成上述文件；</li><li>可以在打开 Windows 的防火墙将 Adobe 相关的启动文件断网，我没有在防火墙中发现可能是以前关掉了。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240909093621.png" alt="20240909093621"></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;自用方法&quot;&gt;&lt;a href=&quot;#自用方法&quot; class=&quot;headerlink&quot; title=&quot;自用方法&quot;&gt;&lt;/a&gt;自用方法&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;单击 Windows 键，输入”服务”或”Service”，打开服务选项。&lt;/li&gt;
&lt;li&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="软件应用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Adobe" scheme="http://shenguosai.github.io/tags/Adobe/"/>
    
  </entry>
  
  <entry>
    <title>打开word时MathType报错:MathType has detected an error inAutoExecCls.Main: 文件未找到: MathPage.WLL.</title>
    <link href="http://shenguosai.github.io/2024/09/04/%E6%89%93%E5%BC%80word%E6%97%B6MathType%E6%8A%A5%E9%94%99-MathType-has-detected-an-error-inAutoExecCls-Main-%E6%96%87%E4%BB%B6%E6%9C%AA%E6%89%BE%E5%88%B0-MathPage-WLL/"/>
    <id>http://shenguosai.github.io/2024/09/04/%E6%89%93%E5%BC%80word%E6%97%B6MathType%E6%8A%A5%E9%94%99-MathType-has-detected-an-error-inAutoExecCls-Main-%E6%96%87%E4%BB%B6%E6%9C%AA%E6%89%BE%E5%88%B0-MathPage-WLL/</id>
    <published>2024-09-04T07:00:33.000Z</published>
    <updated>2024-09-24T02:33:04.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><p>不知道为什么打开 Work 时出现了 MathType 的报错。<br><span id="more"></span><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240904150316.png" alt="20240904150316"><br>连续点击两次”确定”报错对话框消失，如果点击 MathType 按钮会再次出现报错信息。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240904150429.png" alt="20240904150429"></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>找到 MathPage.wll 文件将其复制到 Office 指定目录下。</p><ol><li>MathPage.wll<br>如果是 64 位的 Office，就去复制<code>C:\Program Files (x86)\MathType\Office Support\64\</code>中的 <code>MathPage.wll</code>。<br>如果是 32 位的 Office，就去复制<code>C:\Program Files (x86)\MathType\Office Support\32\</code>中的 <code>MathPage.wll</code>。</li><li>Office 指定目录<br>将上面的文件复制到目录: <code>C:\Program Files\Microsoft Office\root\Office16</code>中即可正常。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;报错信息&quot;&gt;&lt;a href=&quot;#报错信息&quot; class=&quot;headerlink&quot; title=&quot;报错信息&quot;&gt;&lt;/a&gt;报错信息&lt;/h1&gt;&lt;p&gt;不知道为什么打开 Work 时出现了 MathType 的报错。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="软件应用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Windows" scheme="http://shenguosai.github.io/tags/Windows/"/>
    
    <category term="MathType" scheme="http://shenguosai.github.io/tags/MathType/"/>
    
  </entry>
  
  <entry>
    <title>QNAP安装Aria2并使用油猴网盘直链进行RPC推送下载网盘资源</title>
    <link href="http://shenguosai.github.io/2024/09/03/QNAP%E5%AE%89%E8%A3%85Aria2%E5%B9%B6%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E8%BF%9B%E8%A1%8CRPC%E6%8E%A8%E9%80%81%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"/>
    <id>http://shenguosai.github.io/2024/09/03/QNAP%E5%AE%89%E8%A3%85Aria2%E5%B9%B6%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E8%BF%9B%E8%A1%8CRPC%E6%8E%A8%E9%80%81%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/</id>
    <published>2024-09-03T02:37:18.000Z</published>
    <updated>2024-09-18T08:57:57.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QNAP-安装-Aria2"><a href="#QNAP-安装-Aria2" class="headerlink" title="QNAP 安装 Aria2"></a>QNAP 安装 Aria2</h1><h2 id="QNAP-型号"><a href="#QNAP-型号" class="headerlink" title="QNAP 型号"></a>QNAP 型号</h2><p>TS-464C<br><span id="more"></span></p><h2 id="加入第三方资源库"><a href="#加入第三方资源库" class="headerlink" title="加入第三方资源库"></a>加入第三方资源库</h2><ol><li>AppCenter =&gt; 设置 =&gt; 程序来源 =&gt; 添加</li><li>输入名称(MyQNAP)和URL(<a href="https://www.myqnap.org/repo.xml">https://www.myqnap.org/repo.xml</a>)</li><li>点击确定即可完成<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903104658.png" alt="20240903104658"><h2 id="下载并安装-Aria2"><a href="#下载并安装-Aria2" class="headerlink" title="下载并安装 Aria2"></a>下载并安装 Aria2</h2></li><li>在 AppCenter 中点击 MyQNAP =&gt; 所有应用 =&gt; 下载</li><li>找到 Aria2 1.37 并点击下载<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903104931.png" alt="20240903104931"><h1 id="配置并使用-Aria2"><a href="#配置并使用-Aria2" class="headerlink" title="配置并使用 Aria2"></a>配置并使用 Aria2</h1><h2 id="Aria2-命令行下载常用命令及选项"><a href="#Aria2-命令行下载常用命令及选项" class="headerlink" title="Aria2 命令行下载常用命令及选项"></a>Aria2 命令行下载常用命令及选项</h2>下载并安装完成后就可以使用命令行进行下载了，常用命令如下。<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3></li></ol><ul><li><code>aria2c url</code>: 下载文件，url代表文件下载链接</li><li><code>aria2c -S file.torrent</code>: 显示 file.torrent 文件的信息</li><li><code>aria2c –stop</code>: 停止所有下载</li><li><code>aria2c –pause</code>: 暂停所有下载</li><li><code>aria2c –resume</code>: 恢复暂停的下载</li><li><code>aria2c –version</code>: 显示版本信息<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3></li><li><code>-x n</code>: 最大使用 n 个线程下载文件</li><li><code>-s n</code>: 使用 n 个连接数进行下载</li><li><code>-o filename</code>: 指定下载文件的文件名</li><li><code>-d directory</code>: 指定文件的下载目录</li><li><code>-c</code>: 断点续传</li><li><code>-m n</code>: 最大下载连接数为 n</li><li><code>–max-download-limit=100K</code>: 限制下载速度为 100K/S</li></ul><p>以上是 Aria2 的常用命令和选项。你可以在终端中输入“man aria2c”命令来查看完整的命令和选项列表。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>直接下载<br><code>aria2c http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code></li><li>后台下载<br><code>aria2c -D url</code><br><code>aria2c –deamon=true url</code></li><li>重命名下载<br><code>aria2c --out=QQ http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code><br><code>aria2c -o QQ http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code></li><li>分段下载<br><code>aria2c -x 2 http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code></li><li>配合使用<br><code>aria2c -s 2 -x 2 -j 10 http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code><br>-s这个参数的意思是使用几个线程进行下载，-x是最大使用几个线程下载，-j就是同时下载几个文件。</li><li>断点续传<br><code>aria2c -c http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code></li><li>验证文件正确性<br><code>`aria2c -c -x16 -s20 -j20 --checksum=md5=xxxxxxxxxxxxx http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe</code></li><li>bt 下载<br><code>aria2c ‘path/xxx.torrnet‘</code></li><li>磁力链下载<ul><li>列出种子内容<br><code>aria2c -S target.torrent</code></li><li>下载种子内编号为 1、4、5、6、7 的文件<br><code>aria2c --select-file=1,4-7 target.torrent</code></li><li>设置 bt 端口<br><code>aria2c --listen-port=51413 ‘xxx.torrent’</code></li><li>设置 dht 端口<br><code>aria2c --dht-listen-port=51413 ‘xxx.torrent’</code><h2 id="Aria2-配置文件"><a href="#Aria2-配置文件" class="headerlink" title="Aria2 配置文件"></a>Aria2 配置文件</h2><h3 id="配置文件路径"><a href="#配置文件路径" class="headerlink" title="配置文件路径"></a>配置文件路径</h3>不同的系统可能会有所不同，按上述方法安装的 Aria2 的配置文件路径为: <code>/opt/AriaII/aria2.conf</code><h3 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h3></li></ul></li></ul><pre><code class="lang-bash">##此部分主要分为几部分###1、文件保存#2、下载链接#3、进度保存#4、RPC相关#5、BT\PT下载相关##===================================#### 文件保存相关 ####===================================### 文件保存目录dir=../download# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=16M# 断点续传continue=true#日志保存log=aria2.log# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc# falloc和trunc则需要文件系统和内核支持# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项file-allocation=prealloc##===================================#### 下载连接相关 ####===================================### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=100# 同一服务器连接数, 添加时可指定, 默认:1# 官方的aria2最高设置为16, 如果需要设置任意数值请重新编译aria2max-connection-per-server=16# 整体下载速度限制, 运行时可修改, 默认:0（不限制）max-overall-download-limit=0# 单个任务下载速度限制, 默认:0（不限制）max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0（不限制）max-overall-upload-limit=0# 单个任务上传速度限制, 默认:0（不限制）max-upload-limit=0# 禁用IPv6, 默认:falsedisable-ipv6=false# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=10M# 单个任务最大线程数, 添加时可指定, 默认:5# 建议同max-connection-per-server设置为相同值split=16##===================================#### 进度保存相关 ####===================================### 从会话文件中读取下载任务input-file=aria2.session# 在Aria2退出时保存错误的、未完成的下载任务到会话文件save-session=aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0save-session-interval=60##===================================#### RPC相关设置 ####此部分必须启用，否则无法使用WebUI##===================================### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许外部访问, 默认:falserpc-listen-all=true# RPC端口, 仅当默认端口被占用时修改rpc-listen-port=6800# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项rpc-secret=000789456# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-user=&lt;USER&gt;# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-passwd=&lt;PASSWD&gt;# 启动SSL# rpc-secure=true# 证书文件, 如果启用SSL则需要配置证书文件, 例如用https连接aria2# rpc-certificate=# rpc-private-key=##===================================#### BT/PT下载相关 ####===================================### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用enable-dht6=true# DHT网络监听端口, 默认:6881-6999dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50Kbt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-TR2770-user-agent=Transmission/2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=0# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件force-save=true# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:falsebt-save-metadata=true# 单个种子最大连接数, 默认:55 0表示不限制bt-max-peers=0# 最小做种时间, 单位:分# seed-time = 60# 分离做种任务bt-detach-seed-only=true#BT Tracker List ;下载地址：https://github.com/ngosang/trackerslistbt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.internetwarriors.net:1337/announce,udp://tracker.opentrackr.org:1337/announce</code></pre><h3 id="我的配置文件"><a href="#我的配置文件" class="headerlink" title="我的配置文件"></a>我的配置文件</h3><pre><code class="lang-bash">max-concurrent-downloads=100max-connection-per-server=16split=16min-split-size=10Menable-rpc=truerpc-listen-all=truerpc-allow-origin-all=true# 上面这行非常重要，默认为 false，如果不设置为 True 则只能从特定的 IP 或域名访问，一开始就是因为没有这句在 WebUI AriaNg 里面怎么设置都显示未连接。只有协议设置为websocket时才能连接，但是使用 WebUI 也无法下载到正确的文件。加上这句后 http 协议就可以连接并且进行 RPC 推送了。rpc-secret=7ixxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrIZ</code></pre><h1 id="WebUI-Aginx"><a href="#WebUI-Aginx" class="headerlink" title="WebUI(Aginx)"></a>WebUI(Aginx)</h1><ol><li>QNAP 中开启网站服务<br>控制台 =&gt; 应用程序 =&gt; Web 服务器 =&gt; 勾选”启用Web服务器”<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903151604.png" alt="20240903151604"><br>设置默认即可。<br>开启了网站服务之后，QNAP 的共享文件夹中就会多出一个 “Web” 的文件夹。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903152350.png" alt="20240903152350"></li><li>配置网站服务的虚拟机<br>虚拟主机 =&gt; 勾选”启用虚拟主机” =&gt; 点击”创建虚拟机”<br>主机名称: 可以自定义，这里使用 Aria2<br>根目录: 点击右部倒三角选择网页所在目录<br>协议: 选择 HTTP 即可<br>端口号: WebUI 的访问端口，注意与 Aria2 RPC 端口不同，要另外使用空闲端口，这里使用 6801。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903152044.png" alt="20240903152044"><br>这里单独说一下”根目录”，在按上述方法安装了 QNAP 之后，Arial 会被建立一个软链接 <code>/opt/AriaII</code>，其真实路径为<code>/share/CACHEDEV1_DATA/.qpkg/AriaII/</code>，在这个目录里面有一个 “www” 的文件夹，这就是 AriaNg 的网站文件，我开始时将它移动到了 “Web” 文件夹里，配置好之后就不想去动了。其实完全可以在虚拟机的”根目录”里直接指定这里的路径，即<code>/opt/AriaII/wwww</code>，这样指定的话我估计就可以直接使用安装的 App 的”打开”按钮(其访问地址为:<a href="http://192.168.3.74/AriaII)来进行访问。可能还需要一些配置，因为对建站不是很熟所以不确定，也没有尝试。">http://192.168.3.74/AriaII)来进行访问。可能还需要一些配置，因为对建站不是很熟所以不确定，也没有尝试。</a></li><li>配置 AriaNg<br>配置完网站服务后就可以使用在浏览器中打开控制页面了。(访问地址:<a href="http://192.168.3.74:6801">http://192.168.3.74:6801</a>)<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903153346.png" alt="20240903153346"><br>但是现在打开后”Aria2 状态”会显示红色的”未连接”。要进行一些配置来连接 Aria2 服务。<br>首先，点击 “AriaNg 设置” =&gt; 选择全局右边的 RPC<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903153732.png" alt="20240903153732"><br>Aria2 RPC 别名: 可自定义，也可以空着自己会变成”地址:端口”<br>Aria2 RPC 地址: 安装 Aria2 服务的主机地址或IP<br>Aria2 协议: 选择”Http”<br>Aria2 RPC Http 请求方法: POST<br>Aria2 RPC 请求头:这个不了解是什么，留空不影响使用<br>Aria2 RPC 秘钥: 这个秘钥在 Aria2 配置文件 <code>/opt/AriaII/aria2.conf</code> 中的 <code>rpc-secret=</code> 行中，可自定义设置，然后点击”重新加载 AriaNg”即可。<br>这里再重复一遍，要在配置文件<code>/opt/AriaII/aria2.conf</code>中加入<code>rpc-allow-origin-all=true</code>才可以在任何主机访问，我被这个地方卡了很长时间。</li><li>使用油猴脚本获取网盘资源直链<ul><li>首先要安装一个浏览器的油猴脚本管理插件，篡改猴或者暴力猴什么的都可以。我使用的是<a href="https://microsoftedge.microsoft.com/addons/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN">篡改猴</a>。在<a href="https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home?hl=zh-CN">Edge插件商店</a>中直接搜索”tampermonkey”，前三个应该都可以使用。</li><li>然后，到<a href="https://greasyfork.org/zh-CN">Greasyfork</a>中下载脚本，我选择的是<a href="https://greasyfork.org/zh-CN/scripts/436446-%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B">网盘直链下载助手</a></li><li>再打开网盘(这里以夸克网盘为例)的资源页就会开到多出一个”下载助手”的按钮。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903155210.png" alt="20240903155210"><br>点击按钮或者查看脚本说明就会知道:<br>API 下载: IDM 或浏览器自带下载。<br>Aria 下载: 这个可以得到资源链接使用命令行或者 Aria2 工具进行下载。<br>RPC 下载: 这个就是使用 RPC 远程推送下载链接进行下载，设置方法见”助手设置”。<br>cURL 下载: 使用终端命令行工具<code>curl</code>下载时的链接，直链地址与 Aria 下载的是一样的，只是前面命令变成了<code>curl</code>，而不是<code>aria2c</code>。<br>BC 下载: 这个使用比特彗星(BitCommet)下载的链接，没有用过。<br>助手设置: 这里就是 RPC 推送的设置选项了，与 AriaNg 上的设置基本一致，格式略有差别。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240903155907.png" alt="20240903155907"></li></ul></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;QNAP-安装-Aria2&quot;&gt;&lt;a href=&quot;#QNAP-安装-Aria2&quot; class=&quot;headerlink&quot; title=&quot;QNAP 安装 Aria2&quot;&gt;&lt;/a&gt;QNAP 安装 Aria2&lt;/h1&gt;&lt;h2 id=&quot;QNAP-型号&quot;&gt;&lt;a href=&quot;#QNAP-型号&quot; class=&quot;headerlink&quot; title=&quot;QNAP 型号&quot;&gt;&lt;/a&gt;QNAP 型号&lt;/h2&gt;&lt;p&gt;TS-464C&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="QNAP" scheme="http://shenguosai.github.io/tags/QNAP/"/>
    
    <category term="Aria2" scheme="http://shenguosai.github.io/tags/Aria2/"/>
    
  </entry>
  
  <entry>
    <title>相片尺寸</title>
    <link href="http://shenguosai.github.io/2024/08/28/%E7%9B%B8%E7%89%87%E5%B0%BA%E5%AF%B8/"/>
    <id>http://shenguosai.github.io/2024/08/28/%E7%9B%B8%E7%89%87%E5%B0%BA%E5%AF%B8/</id>
    <published>2024-08-27T16:03:45.000Z</published>
    <updated>2024-10-21T06:10:56.728Z</updated>
    
    <content type="html"><![CDATA[<p>最近想搞一个证件照片排版的小程序，上维基百科上查了相片尺寸。<br><span id="more"></span></p><h1 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h1><p>—————————————————————-Wiki—————————————————————-<br>相片尺寸是相片冲印时用到的标准尺寸。<br>这些尺寸会标示为 nR，n 是代表冲印出来相片较短一边的长度(以吋作单位)。相片的尺寸分为两类: 通常(Normal)和超级(Super)。<strong>通常</strong>类短边为十吋以内(即 10R 以内)的相片，长边会比短边长两吋。反之则会长三吋。而<strong>超级类</strong>的相片大小，则会呈大约 3:2 的比例，而尺寸会标示为 SnR。<br>这些冲印尺寸在日本有着不同的称呼，就例如 3R 在日本成为 L，两倍大的 2L 则与 5R 相符。除此以外，在日本，相片还有一些特别的尺寸和相应的称呼，就例如 KG 指日本明信片常见的大小(102x152 毫米)。而 nP 则是参照一张书写用纸张的尺寸(457x560毫米)所制订的称呼。<br>与 ISO 216 纸张尺寸不同，相片的长宽比并不标准。但是，相片的尺寸大小会有着对应，详见下表。</p><div class="table-container"><table><thead><tr><th>美国</th><th>日本</th><th>中国</th><th>大小(吋)</th><th>大小(毫米)</th><th>300ppi(像素/吋)</th><th>长宽比</th><th>备注</th></tr></thead><tbody><tr><td></td><td></td><td>1寸</td><td></td><td>25x35 mm</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>大1寸/小2寸</td><td></td><td>33x48 mm</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>2寸</td><td></td><td>37x49mm(证件照)/37x53 mm(标准2寸)</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td>2” x 2”</td><td>51x51 mm</td><td></td><td>1:1</td><td></td></tr><tr><td></td><td>E</td><td></td><td>3.25”x4.5”</td><td>82.5x120 mm</td><td></td><td>16:11(1.45)</td><td>约数</td></tr><tr><td>2R</td><td></td><td></td><td>2.5”x3.5”</td><td>63.5x89 mm</td><td>750x1050 px</td><td></td><td></td></tr><tr><td>3R</td><td>L</td><td>5寸</td><td>3.5”x5”</td><td>89x127mm</td><td>1051x1500 px</td><td>10:7(1.43)</td><td>又称为”9x13 cm”</td></tr><tr><td>4R</td><td>KG</td><td>6寸</td><td>4”x6”</td><td>102x152 mm</td><td>1205x1795 px</td><td>3:2(1.5)</td><td>标准 135 底片尺寸。美国，加拿大，澳洲及印度的标准相片尺寸。又称为”10x15 cm”</td></tr><tr><td>4D</td><td></td><td></td><td>4.5”x6”</td><td>114x152 mm</td><td>1350x1800 px</td><td>4:3(1.33)</td><td>为大部分大众化的数码相机及采用微4/3系统的相机的新尺寸</td></tr><tr><td>5R</td><td>2L</td><td>7寸</td><td>5”x7”</td><td>127x178 mm</td><td>1500x2102 px</td><td>7:5(1.4)</td><td>3R大小的两倍，又称为”13x18 cm”</td></tr><tr><td>6R</td><td>8P</td><td>8寸</td><td>6”x8”</td><td>152x203 mm</td><td>1795x2398 px</td><td>4:3(1.33)</td><td>4R大小的两倍</td></tr><tr><td>8R</td><td>6P</td><td></td><td>8”x10”</td><td>203x254 mm</td><td>2398x3000 px</td><td>5:4(1、/5)</td><td>又称为”20x25 cm”</td></tr><tr><td>S8R</td><td>6PW</td><td>小12寸</td><td>8”x12”</td><td>203x254 mm</td><td>2398x3602 px</td><td>3:2(1.5)</td><td>最接近 A4 纸的大小。6R 大小的两倍，又称为”20x30 cm”</td></tr><tr><td>10R</td><td>4P</td><td>大12寸</td><td>10”x12”</td><td>254x305 mm</td><td>3000x3602 px</td><td>6:5(1.2)</td><td></td></tr><tr><td>S10R</td><td>4PW</td><td></td><td>10”x15”</td><td>254x381 mm</td><td>3000x4500 px</td><td>3:2(1.5)</td><td></td></tr><tr><td>11R</td><td></td><td></td><td>11”x14”</td><td>279x356 mm</td><td>3295x4205 px</td><td>14:11(1.27)</td><td>又称为”28x36 cm”</td></tr><tr><td>S11R</td><td></td><td></td><td>11”x17”</td><td>279x432 mm</td><td>3295x5102 px</td><td>17:11(1.54)</td><td></td></tr><tr><td>12R</td><td></td><td></td><td>12”x15”</td><td>305x381 mm</td><td>3602x4500 px</td><td>5:4(1.25)</td><td></td></tr><tr><td>S12R</td><td></td><td></td><td>12”x18”</td><td>305x465 mm</td><td>3602x5492 px</td><td>3:2(1.5)</td><td></td></tr></tbody></table></div><p>—————————————————————-Wiki—————————————————————-<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240828003807.png" alt="20240828003807"></p><h1 id="国内常用"><a href="#国内常用" class="headerlink" title="国内常用"></a>国内常用</h1><div class="table-container"><table><thead><tr><th>名称</th><th>照片大小</th><th>像素大小</th><th>用途</th></tr></thead><tbody><tr><td>小1寸</td><td>2.2x3.3 cm</td><td></td><td>身份证、体检表</td></tr><tr><td>1寸照</td><td>2.5x3.5 cm</td><td>413x295</td><td>-</td></tr><tr><td>大1寸</td><td>3.3x4.8 cm</td><td></td><td>学位证书</td></tr><tr><td>身份证大头照</td><td>3.3x2.2 cm</td><td>390x260</td><td></td></tr><tr><td></td><td>2.6x3.2 cm</td><td></td><td>二代身份证</td></tr><tr><td>小2寸</td><td>3.3x4.8 cm</td><td>567x390</td><td>中国护照、港澳通行证</td></tr><tr><td>2寸照</td><td>3.5x5.3 cm</td><td>626x413</td><td>-</td></tr><tr><td></td><td>3.5x4.5 cm</td><td></td><td>入台证、新加坡签证、英国签证</td></tr><tr><td></td><td>3.5x4.8 cm</td><td></td><td>马来西亚签证</td></tr><tr><td></td><td>5.1x5.1 cm</td><td></td><td>美国签证</td></tr><tr><td></td><td>4.5x4.5 cm</td><td></td><td>日本签证</td></tr></tbody></table></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近想搞一个证件照片排版的小程序，上维基百科上查了相片尺寸。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="图片处理" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>中国历史顺序表</title>
    <link href="http://shenguosai.github.io/2024/08/22/%E4%B8%AD%E5%9B%BD%E5%8E%86%E5%8F%B2%E9%A1%BA%E5%BA%8F%E8%A1%A8/"/>
    <id>http://shenguosai.github.io/2024/08/22/%E4%B8%AD%E5%9B%BD%E5%8E%86%E5%8F%B2%E9%A1%BA%E5%BA%8F%E8%A1%A8/</id>
    <published>2024-08-22T07:54:59.000Z</published>
    <updated>2024-08-27T17:18:34.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中国历史顺序表"><a href="#中国历史顺序表" class="headerlink" title="中国历史顺序表"></a>中国历史顺序表</h1><h2 id="原始社会-170万年前-公元前21世纪"><a href="#原始社会-170万年前-公元前21世纪" class="headerlink" title="原始社会(170万年前~公元前21世纪)"></a>原始社会(170万年前~公元前21世纪)</h2><h3 id="旧石器时代-约170万年前-1万年前"><a href="#旧石器时代-约170万年前-1万年前" class="headerlink" title="旧石器时代(约170万年前~1万年前)"></a>旧石器时代(约170万年前~1万年前)</h3><ul><li>约 170 万年前，元谋人生活在云南元谋一带</li><li>约 80 万年前，蓝田人生活在山西蓝田一带</li><li>约 70~20 万年前，北京人生活在北京周口店一带</li><li>约 3 万年前，山顶洞人生活在北京周口店一带<span id="more"></span><h3 id="新石器时代-1万年前-4千年前"><a href="#新石器时代-1万年前-4千年前" class="headerlink" title="新石器时代(1万年前~4千年前)"></a>新石器时代(1万年前~4千年前)</h3></li><li>约 7000~5000 年前，河姆渡、半坡母系氏族公社</li><li>约 5000~4000 年前，大汶口文化中晚期—父系氏族公社<h3 id="三皇五帝"><a href="#三皇五帝" class="headerlink" title="三皇五帝"></a>三皇五帝</h3>三皇五帝已不可考，众说纷纭。<br>三皇:天皇、地皇、人皇<blockquote><blockquote><p>燧人、伏羲、神农 — 出自《尚书大传》<br>伏羲、女娲、神农 — 出自《春秋运斗枢》<br>伏羲、祝融、黄帝 — 出自《风俗通义》<br>伏羲　神农、黄帝 — 出自《三字经》<br>有巢氏、燧人氏 — 出自《庄子》、《纲鉴易知录》<br>五帝:东方青帝灵威仰、南方赤帝赤熛怒、中央黄帝含枢纽、西方白帝白招拒、北方黑帝汁光纪<br>太昊、炎帝、黄帝、少昊、颛顼 — 出自《吕氏春秋》<br>黄帝、颛顼、帝喾、尧、舜 — 出自《史记》《大戴礼记》<br>黄帝、少昊、颛顼、帝喾、尧 — 出自《资治通鉴外纪》</p></blockquote></blockquote></li></ul><h2 id="奴隶社会-公元前2070年-公元前476年"><a href="#奴隶社会-公元前2070年-公元前476年" class="headerlink" title="奴隶社会(公元前2070年~公元前476年)"></a>奴隶社会(公元前2070年~公元前476年)</h2><ul><li>夏: 公元前 2070 年 ~ 公元前 1600 年，禹之子启建夏，世袭取代禅让</li><li>商: 公元前 1601 年 ~ 公元前 1046 年，商汤灭夏，商朝建立</li><li>西周: 公元前 1046 年 ~ 公元前 771 年，周武王灭商，西周开始</li><li>东周: 公元前 770 年 ~ 公元前 476 年，俗称东周列国，分为前期和后期。<ul><li>东周前期俗称春秋时期，公元前 770 年 ~ 公元前 476 年，春秋时期诸侯争相称霸；</li><li>东周后期俗称战国时期，公元前 475 年 ~ 公元前 221 年。中国社会有奴隶制进入封建社会，出现战国七雄。<h2 id="封建社会-公元前475年-公元1840年"><a href="#封建社会-公元前475年-公元1840年" class="headerlink" title="封建社会(公元前475年~公元1840年)"></a>封建社会(公元前475年~公元1840年)</h2></li></ul></li><li>秦: 公元前 221 年 ~ 公元前 206 年，秦于战国七雄中崛起吞并六国，首建集权制帝国。</li><li>汉: 公元前 206 年 ~ 公元 220 年<ul><li>西汉: 公元前 206 年 ~ 公元 8 年，刘邦垓下之战灭项羽，称帝与长安。</li><li>新莽: 公元 9 年 ~ 公元 25 年，公元 8 年底，王莽篡位称帝，改国号为”新”。</li><li>东汉: 公元 25 年 ~ 公元 220 年，刘秀灭王莽，夺回政权，建都洛阳。</li></ul></li><li>三国: 公元 220 年 ~ 公元 280 年，东汉后期，曹操挟天子以令诸侯，出现三国鼎立。</li><li>西晋: 公元 266 年 ~ 公元 316年</li><li>东晋: 公元 317 年 ~ 公元 420 年</li><li>南北朝: 公元 420 年 ~ 公元 589 年</li><li>隋: 公元 581 年 ~ 公元 618 年</li><li>唐: 公元 618 年 ~ 公元 907 年</li><li>五代十国:<ul><li>五代: 公元 907 年 ~ 公元 960 年</li><li>十国: 公元 902 年 ~ 公元 979 年</li></ul></li><li>北宋: 公元 960 年 ~ 1127 年</li><li>南宋: 1127 年 ~ 1276 年</li><li>元: 1271 年 ~ 1368 年</li><li>明: 1368 年 ~ 1644 年</li><li>清: 1636 年 ~ 1911 年<h2 id="近代史"><a href="#近代史" class="headerlink" title="近代史"></a>近代史</h2>近代史从 1840 年鸦片战争开始。</li><li>民国: 1912 年 ~ 1949 年，中华民国成立。<h2 id="现代史"><a href="#现代史" class="headerlink" title="现代史"></a>现代史</h2>现代史从 1949 年中华人民共和国成立开始。</li><li>中华人民共和国: 1949 年 ~ 至今</li></ul><blockquote><blockquote><p>※※<br>三皇五帝始，尧舜禹相传。夏商与西周，东周分两段。春秋和战国，一统秦两汉。<br>三分魏蜀吴，二晋前后延。南北朝并立，隋唐五代传。宋元明清后，皇朝至此完。</p></blockquote></blockquote><h1 id="中国历史大事纪"><a href="#中国历史大事纪" class="headerlink" title="中国历史大事纪"></a>中国历史大事纪</h1><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;中国历史顺序表&quot;&gt;&lt;a href=&quot;#中国历史顺序表&quot; class=&quot;headerlink&quot; title=&quot;中国历史顺序表&quot;&gt;&lt;/a&gt;中国历史顺序表&lt;/h1&gt;&lt;h2 id=&quot;原始社会-170万年前-公元前21世纪&quot;&gt;&lt;a href=&quot;#原始社会-170万年前-公元前21世纪&quot; class=&quot;headerlink&quot; title=&quot;原始社会(170万年前~公元前21世纪)&quot;&gt;&lt;/a&gt;原始社会(170万年前~公元前21世纪)&lt;/h2&gt;&lt;h3 id=&quot;旧石器时代-约170万年前-1万年前&quot;&gt;&lt;a href=&quot;#旧石器时代-约170万年前-1万年前&quot; class=&quot;headerlink&quot; title=&quot;旧石器时代(约170万年前~1万年前)&quot;&gt;&lt;/a&gt;旧石器时代(约170万年前~1万年前)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;约 170 万年前，元谋人生活在云南元谋一带&lt;/li&gt;
&lt;li&gt;约 80 万年前，蓝田人生活在山西蓝田一带&lt;/li&gt;
&lt;li&gt;约 70~20 万年前，北京人生活在北京周口店一带&lt;/li&gt;
&lt;li&gt;约 3 万年前，山顶洞人生活在北京周口店一带</summary>
    
    
    
    <category term="杂学" scheme="http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/"/>
    
    <category term="历史" scheme="http://shenguosai.github.io/categories/%E6%9D%82%E5%AD%A6/%E5%8E%86%E5%8F%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>使用PS软件进行一寸证件照片打印排版</title>
    <link href="http://shenguosai.github.io/2024/08/17/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E8%BF%9B%E8%A1%8C%E4%B8%80%E5%AF%B8%E8%AF%81%E4%BB%B6%E7%85%A7%E7%89%87%E6%89%93%E5%8D%B0%E6%8E%92%E7%89%88/"/>
    <id>http://shenguosai.github.io/2024/08/17/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E8%BF%9B%E8%A1%8C%E4%B8%80%E5%AF%B8%E8%AF%81%E4%BB%B6%E7%85%A7%E7%89%87%E6%89%93%E5%8D%B0%E6%8E%92%E7%89%88/</id>
    <published>2024-08-16T16:13:02.000Z</published>
    <updated>2024-10-21T06:11:23.504Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>系统: Windows 11<br>软件: Adobe Photoshop 24.5.0 版<br><span id="more"></span></p><h1 id="打开要排版的照片"><a href="#打开要排版的照片" class="headerlink" title="打开要排版的照片"></a>打开要排版的照片</h1><p>用 PS 软件打开要排版的照片。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817002004.png" alt="20240817002004"><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817002207.png" alt="20240817002207"></p><h1 id="制作一寸证件照图案"><a href="#制作一寸证件照图案" class="headerlink" title="制作一寸证件照图案"></a>制作一寸证件照图案</h1><h2 id="设置画布给照片周围加上一圈白边"><a href="#设置画布给照片周围加上一圈白边" class="headerlink" title="设置画布给照片周围加上一圈白边"></a>设置画布给照片周围加上一圈白边</h2><p>图像 =&gt; 画布大小<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817002639.png" alt="20240817002639"><br>勾选相对，宽度和高度设置为 0.1 厘米，可根据实际情况调整，颜色选择白色，点击确定。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817002909.png" alt="20240817002909"></p><h2 id="裁剪图片"><a href="#裁剪图片" class="headerlink" title="裁剪图片"></a>裁剪图片</h2><p>图像 =&gt; 图像大小<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817003221.png" alt="20240817003221"><br>勾选重新采样，一寸照片的宽度为 2.6 厘米，高度为 3.6 厘米，分辨率填写 300 像素/英寸。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817003523.png" alt="20240817003523"><br>这样，照片就变为一寸大小了。</p><h2 id="定义图案"><a href="#定义图案" class="headerlink" title="定义图案"></a>定义图案</h2><p>编辑 =&gt; 定义图案<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817003819.png" alt="20240817003819"><br>图案名称根据自己需要填写，点击确定。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817003856.png" alt="20240817003856"><br>这样，图案就被定义并存在 PS 软件内备用了。</p><h1 id="制作画布"><a href="#制作画布" class="headerlink" title="制作画布"></a>制作画布</h1><p>文件 =&gt; 新建(画布)<br>主要填写图中框出的三个数值，即宽度、高度和分辨率。<br>如果要排版 3x3 的画布: 宽度 = 2.6厘米 x 3 = 7.8厘米；高度 = 3.6厘米 x 3 = 10.8厘米；分辨率填 300 像素/英寸。<br>如果要排版 4x2 的画布: 宽度 = 2.6厘米 x 4 = 10.4厘米；高度 = 3.6厘米 x 2 =7.2厘米；分辨率填 300 像素/英寸。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817004230.png" alt="20240817004230"><br>点击创建，画布就创建好了，下图为 3x3 画布。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817004638.png" alt="20240817004638"></p><h1 id="将照片嵌入画布"><a href="#将照片嵌入画布" class="headerlink" title="将照片嵌入画布"></a>将照片嵌入画布</h1><p>如上图，点击右下角中间位置的圆圈图标”创建新的填充或调整图层”，然后点击”图案”。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817005017.png" alt="20240817005017"><br>选择刚刚定义好的图案，一般会在最后一个。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817005110.png" alt="20240817005110"><br>点击”确定”，这样排版就制作好了。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817005413.png" alt="20240817005413"></p><h1 id="导出照片"><a href="#导出照片" class="headerlink" title="导出照片"></a>导出照片</h1><p>文件 =&gt; 导出 =&gt; 导出为<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240817005454.png" alt="20240817005454"><br>这里基本上没有什么需要设置的，点击”导出”，选择希望保存的位置和文件名即可。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;系统: Windows 11&lt;br&gt;软件: Adobe Photoshop 24.5.0 版&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="图片处理" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
    
    <category term="Adobe" scheme="http://shenguosai.github.io/tags/Adobe/"/>
    
  </entry>
  
  <entry>
    <title>通过 ZeroTier 访问所在局域网的其它设备</title>
    <link href="http://shenguosai.github.io/2024/08/15/%E9%80%9A%E8%BF%87-ZeroTier-%E8%AE%BF%E9%97%AE%E6%89%80%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E7%9A%84%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87/"/>
    <id>http://shenguosai.github.io/2024/08/15/%E9%80%9A%E8%BF%87-ZeroTier-%E8%AE%BF%E9%97%AE%E6%89%80%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E7%9A%84%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87/</id>
    <published>2024-08-15T03:18:14.000Z</published>
    <updated>2024-08-27T17:18:01.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>硬件: QNAP TS-464C<br>系统: iStore OS 虚拟机(Zerotier虚拟局域网网关)<br>软件: Zerotier<br>Zerotier 网段: 10.147.18.0/24<br>局域网网段: 192.168.3.0/24<br><span id="more"></span></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="配置-Zerotier-设置"><a href="#配置-Zerotier-设置" class="headerlink" title="配置 Zerotier 设置"></a>配置 Zerotier 设置</h2><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240815112603.png" alt="20240815112603"></p><h2 id="配置-Zerotier-网关"><a href="#配置-Zerotier-网关" class="headerlink" title="配置 Zerotier 网关"></a>配置 Zerotier 网关</h2><ol><li>插件设置<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240815112706.png" alt="20240815112706"></li><li>配置网关开启内核转发<br>先 ssh 登录到 iStore OS(Zerotier虚拟局域网网关，执行以下命令:<pre><code class="lang-bash">echo &#39;net.ipv4.ip_forward=1&#39; &gt;&gt; /etc/sysctl.confsysctl -p</code></pre><h2 id="访问方法"><a href="#访问方法" class="headerlink" title="访问方法"></a>访问方法</h2></li><li>重启一下使用的外网设备的 Zerotier 服务；</li><li>跟在局域网内访问相同，使用局域网地址访问即可。<h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1></li><li>网上说需要开启 Zerotier 网关的地址伪装，即<code>MASQUERADE</code>；<pre><code class="lang-bash">iptables -t nat -A POSTROUTING -s 10.10.10.0/24 -j MASQUERADE</code></pre></li><li>配置静态路由表；</li><li>防火墙放行 <code>9933</code> 端口。<br>上述三个步骤本次配置没有使用到，可能是 iStore OS 简化了配置，如果以后有需要使用 Linux 标准系统来使用的需求时再研究。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;硬件: QNAP TS-464C&lt;br&gt;系统: iStore OS 虚拟机(Zerotier虚拟局域网网关)&lt;br&gt;软件: Zerotier&lt;br&gt;Zerotier 网段: 10.147.18.0/24&lt;br&gt;局域网网段: 192.168.3.0/24&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="Zerotier" scheme="http://shenguosai.github.io/tags/Zerotier/"/>
    
  </entry>
  
  <entry>
    <title>Debian 12.6 - 安装TCP测试工具TCPing</title>
    <link href="http://shenguosai.github.io/2024/08/14/Debian-12-6-%E5%AE%89%E8%A3%85TCP%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7TCPing/"/>
    <id>http://shenguosai.github.io/2024/08/14/Debian-12-6-%E5%AE%89%E8%A3%85TCP%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7TCPing/</id>
    <published>2024-08-14T05:00:46.000Z</published>
    <updated>2024-08-27T15:49:54.781Z</updated>
    
    <content type="html"><![CDATA[<p><code>TCPing</code>是基于 TCP 协议的一种<code>ping</code>命令，用来测试数据包能否通过 TCP 协议到达目标主机。他的一大特点，就是可以在禁<code>ping</code>的时候检测网络连通率。<br><span id="more"></span></p><h1 id="安装tcptraceroute"><a href="#安装tcptraceroute" class="headerlink" title="安装tcptraceroute"></a>安装<code>tcptraceroute</code></h1><p><code>TCPing</code>本质上是一个 shell 脚本，依赖<code>tcptraceroute</code>运行。</p><pre><code class="lang-bash">sudo apt install tcptraceroute</code></pre><h1 id="下载-TCPing"><a href="#下载-TCPing" class="headerlink" title="下载 TCPing"></a>下载 TCPing</h1><pre><code class="lang-bash">sudo wget http://www.vdberg.org/~richard/tcpping -O /usr/bin/tcping</code></pre><h1 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h1><pre><code class="lang-bash">sudo chmod +x /usr/bin/tcping</code></pre><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><pre><code class="lang-bash">tcping 目标IP 目标端口</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;TCPing&lt;/code&gt;是基于 TCP 协议的一种&lt;code&gt;ping&lt;/code&gt;命令，用来测试数据包能否通过 TCP 协议到达目标主机。他的一大特点，就是可以在禁&lt;code&gt;ping&lt;/code&gt;的时候检测网络连通率。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="软件应用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Linux" scheme="http://shenguosai.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>QNAP安装zerotier进行异地组网</title>
    <link href="http://shenguosai.github.io/2024/08/14/QNAP%E5%AE%89%E8%A3%85zerotier%E8%BF%9B%E8%A1%8C%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/"/>
    <id>http://shenguosai.github.io/2024/08/14/QNAP%E5%AE%89%E8%A3%85zerotier%E8%BF%9B%E8%A1%8C%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/</id>
    <published>2024-08-14T02:56:19.000Z</published>
    <updated>2024-08-27T15:55:30.859Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>在 App Center 中安装 QVPN Service</li><li><span id="more"></span><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814122823.png" alt="20240814122823"></li><li>去 <a href="https://www.zerotier.com/download/">ZeroTier 官网</a> 下载相关的安装包<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814123138.png" alt="20240814123138"><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814123221.png" alt="20240814123221"><h1 id="从本地安装-ZeroTier"><a href="#从本地安装-ZeroTier" class="headerlink" title="从本地安装 ZeroTier"></a>从本地安装 ZeroTier</h1><h2 id="允许没有有效数字签名的程序安装"><a href="#允许没有有效数字签名的程序安装" class="headerlink" title="允许没有有效数字签名的程序安装"></a>允许没有有效数字签名的程序安装</h2><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814123719.png" alt="20240814123719"><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2></li><li>打开 App Center，右上角”手动安装”；</li><li>点击”浏览”，选中安装包；</li><li>点击”安装”。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814124524.png" alt="20240814124524"><br>安装完成后，可以在所有应用中找到 Zerotier，但是和群晖不同，威联通上的 Zerotier 是无法点击打开的。(不明白为什么在”我的应用程序”中无法找到 Zerotier。)<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814124911.png" alt="20240814124911"></li></ol><h1 id="加入网络"><a href="#加入网络" class="headerlink" title="加入网络"></a>加入网络</h1><p>Zerotier 的注册及申请方法不在此赘述，威联通安装好 Zerotier 软件后需要使用命令行来加入网络。且必须获取管理员权限才能安装。</p><pre><code class="lang-bash">[user@QNAP ~]$ zerotier-cli join xxxxxxxxxxxxxxxxzerotier-cli: authtoken.secret not found or readable in /share/CACHEDEV1_DATA/.qpkg/zerotier (try again as root)[user@QNAP ~]$ sudo zerotier-cli join xxxxxxxxxxxxxxxxWe trust you have received the usual lecture from the local SystemAdministrator. It usually boils down to these three things:    #1) Respect the privacy of others.    #2) Think before you type.    #3) With great power comes great responsibility.Password:200 join OK</code></pre><p>看到<code>200 join OK</code>，即意味着这台 NAS 已经加入了 zerotier 网络，然后就可以返回 zerotier 的网页管理端对这台设备进行授权。</p><h1 id="设置防火墙允许访问"><a href="#设置防火墙允许访问" class="headerlink" title="设置防火墙允许访问"></a>设置防火墙允许访问</h1><p>如果 QNAP 安装了防火墙<code>QuFirewall</code>，则需要添加一条规则允许 ZeroTier 虚拟局域网网段允许访问。</p><ol><li>打开<code>QuFirewall</code></li><li>点击”编辑”修改规则<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814150010.png" alt="20240814150010"></li><li>点击”添加规则”；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814170631.png" alt="20240814170631"></li><li>输入虚拟局域网的网段地址，子网掩码选<code>255.255.255.0/24</code>即可。其它设置不用更改，点击”应用”，防火墙就允许虚拟局域网网段访问了。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240814170809.png" alt="20240814170809"></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在 App Center 中安装 QVPN Service&lt;/li&gt;
&lt;li&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="QNAP" scheme="http://shenguosai.github.io/tags/QNAP/"/>
    
    <category term="Zerotier" scheme="http://shenguosai.github.io/tags/Zerotier/"/>
    
  </entry>
  
  <entry>
    <title>QNAP虚拟机映像转换问题</title>
    <link href="http://shenguosai.github.io/2024/08/12/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%98%A0%E5%83%8F%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/"/>
    <id>http://shenguosai.github.io/2024/08/12/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%98%A0%E5%83%8F%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/</id>
    <published>2024-08-12T01:05:48.000Z</published>
    <updated>2024-08-27T15:56:15.099Z</updated>
    
    <content type="html"><![CDATA[<p>QNAP 的虚拟机必须要使用自己转换出的<code>.img</code>，下面记录一下自己安装虚拟机的映像转换过程。<br><span id="more"></span></p><h1 id="IMG文件"><a href="#IMG文件" class="headerlink" title="IMG文件"></a>IMG文件</h1><p>QNAP 上安装了iStoreOS 系统的旁路由虚拟机，先使用 <a href="https://www.starwindsoftware.com/starwind-v2v-converter#download">StarWind V2V Convertor</a> 软件将<code>IMG</code>文件转换为 QNAP Virtual Station 中可以使用的 <code>.vdi</code> 或 <code>.vdmk</code> 文件，然后使用 QNAP Vistual Station 内置的转换工具进行转换，转换完就是其可以使用的 <code>.img</code> 文件了。</p><blockquote><p>这个系统已安装成功！</p></blockquote><h1 id="ISO文件"><a href="#ISO文件" class="headerlink" title="ISO文件"></a>ISO文件</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><code>.iso</code> 文件网上的信息很少，唯一有点用处的如下<a href="https://blog.csdn.net/LiniLing/article/details/119864889">将ISO镜像转换成VDI、VDH和VMDK格式</a>:</p><ol><li>首先，要先下载两个软件: <a href="https://downloads2.broadcom.com/?file=VMware-workstation-full-17.5.2-23775571.exe&amp;oid=30581048&amp;id=sQ9ZBRmMMB_QK60kfaL-tcNlwWCDromgou84_F7-Mkxcey9zd6BIhyhHVbcjvGfqYxM=&amp;verify=1722998592-oxwenmxozDwNlEOLBkXvPXCUcQOw2EOmWEej20K6%2FeU%3D">VMWare</a> 和 <a href="https://download.virtualbox.org/virtualbox/7.0.20/VirtualBox-7.0.20-163906-Win.exe">VirtualBox</a></li><li>在 VMWare 中使用<code>.iso</code>映像安装好虚拟机；</li><li>选中安装好的虚拟机，文件=&gt;导出为OVF，然后会生成 4 个文件；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240812092446.png" alt="20240812092446"></li><li>打开 VirtualBox 软件，</li><li>上述方法由于还没有实践过，未验证成功，等验证成功后再补充完整步骤。<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><strong>.iso</strong>的文件大概介绍如下：iso格式，ISO是一种光盘镜像文件，无法直接使用，需要利用一些工具进行解压后才能使用。ISO一般都是将光盘文件做成一个文件，而有一些光盘软件设定只能从光驱进行安装，那么直接解压后还是不能使用，需要用到虚拟光驱软件（虚拟光驱的软件很多，Daemon Tools是一款不错的虚拟光驱软件）<br><strong>.img</strong>文件大概介绍如下：img格式，IMG是一种文件压缩格式（archive format），.IMG这个文件格式可视为.ISO格式的一种超集合。由于.ISO只能压缩使用ISO9660和UDF这两种文件系统的存储媒介，意即.ISO只能拿来压缩CD或DVD，因此才发展出了.IMG，它是以.ISO格式为基础另外新增可压缩使用其它文件系统的存储媒介的能力，.IMG可向后兼容于.ISO，如果是拿来压缩CD或DVD，则使用.IMG和.ISO这两种格式所压缩出来的内容是一样的。<br>从上面的介绍，可以看出.img是.iso的一种超集合，两者解压得到的东西是一样的，所以将一个.iso转化为.img，可以直接将.iso重命名为.img即可。<br>重命名为<code>.img</code>之后确实可以通过 StarWind V2V Convertor 软件转化为 <code>.vmdk</code> 文件了，并且也能够通过 QNAP Virtual Station 的转换工具转换为其可以使用的 <code>.img</code> 文件，也能开始引导安装，但是安装(Debian 12.6 和 Ubuntu 18.04)到磁盘分区的时候出现错误无法识别到硬盘，可能是设置哪里有问题，后续尝试成功后补充。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;QNAP 的虚拟机必须要使用自己转换出的&lt;code&gt;.img&lt;/code&gt;，下面记录一下自己安装虚拟机的映像转换过程。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="QNAP" scheme="http://shenguosai.github.io/tags/QNAP/"/>
    
  </entry>
  
  <entry>
    <title>QNAP虚拟机安装ubuntu 18.04 无法登录远程桌面</title>
    <link href="http://shenguosai.github.io/2024/08/08/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu-18-04-%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    <id>http://shenguosai.github.io/2024/08/08/QNAP%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu-18-04-%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/</id>
    <published>2024-08-08T07:10:29.000Z</published>
    <updated>2024-08-27T15:55:54.657Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在-QNAP-上安装-Ubuntu-Linux-工作站"><a href="#在-QNAP-上安装-Ubuntu-Linux-工作站" class="headerlink" title="在 QNAP 上安装 Ubuntu Linux 工作站"></a>在 QNAP 上安装 Ubuntu Linux 工作站</h1><p>本来想在 QNAP 上使用 “Vitualization Station 虚拟化工作站”中安装一个 Linux 服务器版系统跑一些服务，但是尝试了 Debian 12.6 和 Ubuntu 18.04 都卡在了磁盘分区的设置上，感觉像是识别不到硬盘，无法安装文件系统。<br>没有办法只有转战 QNAP 自带的 Ubuntu Linux 工作站了，通过跟客服咨询，这个 App 只有桌面版无法安装 Server 版。<br>既然安装了桌面版，那当然要设置成能够远程登录了。<br><span id="more"></span></p><h1 id="安装-xrdp-服务器等软件"><a href="#安装-xrdp-服务器等软件" class="headerlink" title="安装 xrdp 服务器等软件"></a>安装 xrdp 服务器等软件</h1><p>由于一直登录不上，所以搞清楚原因之前杂七杂八装了很多，也不知道哪个是非必需的，总之目前安装上的软件如下:(安装命令从上到下为个人感觉必要性高低)</p><pre><code class="lang-bash">sudo apt-get updatesudo apt-get install xrdpsudo apt-get install xfce4 xfce4-goodiessudo apt-get install vnc4server tightvncsudo apt-get install xorg</code></pre><p>刚开始的时候只安装了 xrdp 和 xfce4，感觉只用这两个就可以了，但是由于后面一直登录不上不知道原因所以又装了一大堆。<br>还有好像可以不用 xfce4，直接连接 GNOME 的远程桌面，那样的话我感觉才 xfce4 都不需要安装，没有详细研究先不讨论。</p><p>安装完之后打开服务，由于使用 zerotier 进行组网，所以没有进行端口映射和防火墙的设置。</p><pre><code class="lang-bash">sudo systemctl start xrdp</code></pre><h1 id="无法登录远程桌面及解决方法"><a href="#无法登录远程桌面及解决方法" class="headerlink" title="无法登录远程桌面及解决方法"></a>无法登录远程桌面及解决方法</h1><p>通过 Win11 连接远程桌面的时候发现输入完登录信息点击”OK”按钮之后就一直没有任何反应，通过查看服务状态<code>systemctl status xdrp</code>。发现错误信息:<code>[ERROR] xrdp_wm_log_msg: Error connecting to sesman: 127.0.0.1 port: 3350</code> 。<br>通过搜索，在 Github 上找到了<a href="https://github.com/neutrinolabs/xrdp/issues/1777">答案</a>，虽然对原理不是很理解，但是觉得说的很有道理于是开始尝试。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240808153629.png" alt="20240808153629"><br>这是在设置的时候有点问题，本人设置步骤如下:</p><pre><code class="lang-bash">sysctl -a | grep disable_ipv6</code></pre><blockquote><p>sysctl: reading key “net.ipv6.conf.all.stable_secret”<br>net.ipv6.conf.all.disable_ipv6 = 1<br>sysctl: reading key “net.ipv6.conf.default.stable_secret”<br>net.ipv6.conf.default.disable_ipv6 = 1<br>sysctl: reading key “net.ipv6.conf.eth0.stable_secret”<br>net.ipv6.conf.eth0.disable_ipv6 = 0<br>sysctl: reading key “net.ipv6.conf.eth1.stable_secret”<br>net.ipv6.conf.eth1.disable_ipv6 = 0<br>sysctl: reading key “net.ipv6.conf.eth2.stable_secret”<br>net.ipv6.conf.eth2.disable_ipv6 = 0<br>sysctl: reading key “net.ipv6.conf.lo.stable_secret”<br>net.ipv6.conf.lo.disable_ipv6 = 1<br>sysctl: reading key “net.ipv6.conf.ztjlhq7oim.stable_secret”<br>net.ipv6.conf.ztjlhq7oim.disable_ipv6 = 1</p></blockquote><p>于是根据上面的解答解答需要将<code>net.ipv6.conf.eth0.disable_ipv6</code>、<code>net.ipv6.conf.eth1.disable_ipv6</code>、<code>net.ipv6.conf.eth2.disable_ipv6</code>的值设为 1。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><pre><code class="lang-bash">sudo sysctl -w net.ipv6.conf.eth0.disable_ipv6=1sudo sysctl -w net.ipv6.conf.eth1.disable_ipv6=1sudo sysctl -w net.ipv6.conf.eth2.disable_ipv6=1</code></pre><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>设置<code>/etc/sysctl.conf</code>文件</p><pre><code class="lang-bash">sudo vi /etc/sysctl.conf</code></pre><p>在文件末尾加入下面三行:</p><pre><code class="lang-bash">net.ipv6.conf.all.disable_ipv6=0net.ipv6.conf.default.disable_ipv6=0net.ipv6.conf.lo.disable_ipv6=0</code></pre><p>使配置修改生效</p><pre><code class="lang-bash">sudo sysctl -p</code></pre><p>经实验，上述两种方法只能暂时禁用<code>ipv6</code>，重启之后就会失效。长期生效方法:<a href="https://linux.cn/article-12689-1.html">如何在 Ubuntu Linux 上禁用 IPv6</a></p><p>然后就登录进去了，虽然是 xfce 桌面。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240808154353.png" alt="20240808154353"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;在-QNAP-上安装-Ubuntu-Linux-工作站&quot;&gt;&lt;a href=&quot;#在-QNAP-上安装-Ubuntu-Linux-工作站&quot; class=&quot;headerlink&quot; title=&quot;在 QNAP 上安装 Ubuntu Linux 工作站&quot;&gt;&lt;/a&gt;在 QNAP 上安装 Ubuntu Linux 工作站&lt;/h1&gt;&lt;p&gt;本来想在 QNAP 上使用 “Vitualization Station 虚拟化工作站”中安装一个 Linux 服务器版系统跑一些服务，但是尝试了 Debian 12.6 和 Ubuntu 18.04 都卡在了磁盘分区的设置上，感觉像是识别不到硬盘，无法安装文件系统。&lt;br&gt;没有办法只有转战 QNAP 自带的 Ubuntu Linux 工作站了，通过跟客服咨询，这个 App 只有桌面版无法安装 Server 版。&lt;br&gt;既然安装了桌面版，那当然要设置成能够远程登录了。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="QNAP" scheme="http://shenguosai.github.io/tags/QNAP/"/>
    
  </entry>
  
  <entry>
    <title>部署私有KMS激活服务器激活Office</title>
    <link href="http://shenguosai.github.io/2024/06/14/%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%89KMS%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BF%80%E6%B4%BBOffice/"/>
    <id>http://shenguosai.github.io/2024/06/14/%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%89KMS%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BF%80%E6%B4%BBOffice/</id>
    <published>2024-06-14T11:17:19.000Z</published>
    <updated>2024-08-27T15:24:39.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建-iStoreOS-虚拟机"><a href="#创建-iStoreOS-虚拟机" class="headerlink" title="创建 iStoreOS 虚拟机"></a>创建 iStoreOS 虚拟机</h1><p>今年 618 入坑威联通，终于知道为什么大家都推荐群晖了，软件使用还好但是配置方法确实不太人性化。话归正传:</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>QTS 中要安装有 <code>Virtualization Station 虚拟化工作站</code>；</li><li>下载 iStoreOS 映像文件，本次使用的是 <code>istoreos-22.03.6-2024052410-x86-64-squashfs-combined.vmdk</code>，可以到<a href="https://fw.koolcenter.com/iStoreOS/x86_64/">这里</a>下载。我下载的 vmdk 文件，然后发现威联通不认 vmdk，又用威联通自带的工具转成了 img 映像。感觉应该是可以直接使用下载的 img 映像来安装。<span id="more"></span><h2 id="安装-iStoreOS-虚拟机系统"><a href="#安装-iStoreOS-虚拟机系统" class="headerlink" title="安装 iStoreOS 虚拟机系统"></a>安装 iStoreOS 虚拟机系统</h2>打开 Virtualization Station，点击”建立”，弹出如下对话框；<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/iStoreOS1.png" alt="iStoreOS1"><br>虚拟机名称自己起一个喜欢的名字就可以，文件位置是虚拟机要安装的位置。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/iStoreOS2.png" alt="iStoreOS2"><br>自定义设置里选择”使用现有映像”，然后指定转换好的的 img 映像存放路径。<br>其它默认即可，最后会出来配置总览，确认无误后点击”建立”，iStoreOS 的虚拟机系统就建立成功了。<h2 id="配置-iSoreOS"><a href="#配置-iSoreOS" class="headerlink" title="配置 iSoreOS"></a>配置 iSoreOS</h2>由于我是使用 iStoreOS 作为旁路网关，除了配置以下网络之外其它默认即可:<br>首先在主路由中确认 iStoreOS 的 IP 地址，然后在浏览器中输入就可以进入到 iStaoreOS 的管理界面。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240615125041.png" alt="20240615125041"><br>点击”网络向导”根据个人需求选择上网方式即可，这里选择”配置为旁路由”。<br>然后将 IP 地址、子网掩码、网关、DNS 依次输入即可。<blockquote><p>IP 地址: 192.168.50.73 (设置 iStorOS 的访问地址)<br>子网掩码: 255.255.255.0<br>网关: 192.168.50.1 (主路由的 IP 地址)<br>DNS: 192.168.50.1 (主路由的 IP 地址)<br>也可 ssh 登录使用命令<code>vi /etc/config/network</code>编辑。<br>编辑方法:<br>找到带有<code>lan</code>字符的位置，添加如下文本:</p><pre><code class="lang-vi">option ipaddr &#39;192.168.50.73&#39;option netmask &#39;255.255.255.0&#39;option gateway &#39;192.168.50.1&#39;</code></pre><p>旁路网关其它设置默认即可。</p><h1 id="安装-KMS-服务器插件"><a href="#安装-KMS-服务器插件" class="headerlink" title="安装 KMS 服务器插件"></a>安装 KMS 服务器插件</h1><p>点击”iStore”，找到”KMS服务器”插件，点击右下角的”安装”按钮。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240615144400.png" alt="20240615144400"><br>安装完成后就可以在”iStore”的已安装中看到，点击打开，看到绿色的”KMS 运行中”就说明已经可以了。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240615144523.png" alt="20240615144523"></p><h1 id="激活Office"><a href="#激活Office" class="headerlink" title="激活Office"></a>激活Office</h1><p>激活 Office 这里出了一点小问题，由于以前通过激活软件进行的激活，现在到期了，如果激活时出现<code>0x80080005</code>错误码需要设置一下把原来的配置清空。<br>参照:<a href="https://github.com/YerongAI/Office-Tool/issues/216">[IDEA] 增加修复0x80080005错误的功能 #216</a><br>问题描述:<br>目前发现 服务器运行失败 (0x80080005) 是由于KMS工具劫持 SppExtComObj.exe 程序，而未能正确运行导致，因此可以在Office Tool 中增加对此劫持的检测，并进行修复。<br>如运行 C:\WINDOWS\system32\SppExtComObj.exe，正常情况应会无任何提示的返回，失效的KMS劫持会导致弹窗报错如下图<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240615144857.png" alt="20240615144857"><br>解决方法:</p></blockquote></li><li>检测注册表是否存在配置项 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SppExtComObj.exe<br>如存在，则将其删除</li><li>运行 C:\WINDOWS\system32\SppExtComObj.exe，如正常则会立刻返回，退出码应为0</li><li>提示用户尝试再次激活</li></ol><p>上述操作完成之后，如为安装可以先使用 <a href="https://otp.landian.vip/zh-cn/download.html">Office Tool Plus.exe</a> 选择需要的版本进行部署。<br>本文以 office 2021 举例:<br>开始 =&gt; CMD =&gt; 使用管理员打开，分别输入以下命令进行激活:</p><pre><code class="lang-bash">cd /d &quot;%ProgramFiles%\Microsoft Office\Office16&quot; #进入指定目录cscript OSPP.VBS /sethst: 192.168.50.73:1688 #指定 kms 服务器地址和端口，默认端口 1688，如采用默认可不指定，如外网需要则要将端口映射出去cscript OSPP.VBS /act #激活当前安装的Office。cscript OSPP.VBS /dstatus #显示当前已安装产品密钥的许可证信息。可以查看到自已安裝的版本有多少个序列号。</code></pre><p>输入上面命令后的输出分别如下:</p><pre><code class="lang-bash">c:\Windows\System32&gt;cd /d &quot;%ProgramFiles%\Microsoft Office\Office16&quot;C:\Program Files\Microsoft Office\Office16&gt;cscript OSPP.VBS /sethst:kms-server addr.Microsoft (R) Windows Script Host Version 5.812版权所有(C) Microsoft Corporation。保留所有权利。---Processing-----------------------------------------------------------------Successfully applied setting.------------------------------------------Exiting-----------------------------C:\Program Files\Microsoft Office\Office16&gt;cscript OSPP.VBS /actMicrosoft (R) Windows Script Host Version 5.812版权所有(C) Microsoft Corporation。保留所有权利。---Processing-----------------------------------------------------------------Installed product key detected - attempting to activate the following product:SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxLICENSE NAME: Office 21, Office21VisioPro2021VL_KMS_Client_AE editionLICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channelLast 5 characters of installed product key: XXXXX&lt;Product activation successful&gt;---------------------------------------Installed product key detected - attempting to activate the following product:SKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxLICENSE NAME: Office 21, Office21ProPlus2021VL_KMS_Client_AE editionLICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channelLast 5 characters of installed product key: XXXXX&lt;Product activation successful&gt;---------------------------------------------------------------------------------Exiting-----------------------------C:\Program Files\Microsoft Office\Office16&gt;cscript OSPP.VBS /dstatusMicrosoft (R) Windows Script Host Version 5.812版权所有(C) Microsoft Corporation。保留所有权利。---Processing-----------------------------------------------------------------PRODUCT ID: XXXXX-XXXXX-XXXXX-XXXXXSKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxLICENSE NAME: Office 21, Office21VisioPro2021VL_KMS_Client_AE editionLICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channelBETA EXPIRATION: 1601/1/1LICENSE STATUS:  ---LICENSED---REMAINING GRACE: 179 days  (259172 minute(s) before expiring)Last 5 characters of installed product key: K2HT4Activation Type Configuration: ALL        DNS auto-discovery: KMS name not available        KMS machine registry override defined: kms-server addr:1688        Activation Interval: 120 minutes        Renewal Interval: 10080 minutes        KMS host caching: Enabled---------------------------------------PRODUCT ID: XXXXX-XXXXX-XXXXX-XXXXXSKU ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxLICENSE NAME: Office 21, Office21ProPlus2021VL_KMS_Client_AE editionLICENSE DESCRIPTION: Office 21, VOLUME_KMSCLIENT channelBETA EXPIRATION: 1601/1/1LICENSE STATUS:  ---LICENSED---REMAINING GRACE: 179 days  (259172 minute(s) before expiring)Last 5 characters of installed product key: 6F7THActivation Type Configuration: ALL        DNS auto-discovery: KMS name not available        KMS machine registry override defined: kms-server addr:1688        Activation Interval: 120 minutes        Renewal Interval: 10080 minutes        KMS host caching: Enabled---------------------------------------------------------------------------------Exiting-----------------------------</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;创建-iStoreOS-虚拟机&quot;&gt;&lt;a href=&quot;#创建-iStoreOS-虚拟机&quot; class=&quot;headerlink&quot; title=&quot;创建 iStoreOS 虚拟机&quot;&gt;&lt;/a&gt;创建 iStoreOS 虚拟机&lt;/h1&gt;&lt;p&gt;今年 618 入坑威联通，终于知道为什么大家都推荐群晖了，软件使用还好但是配置方法确实不太人性化。话归正传:&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;QTS 中要安装有 &lt;code&gt;Virtualization Station 虚拟化工作站&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;下载 iStoreOS 映像文件，本次使用的是 &lt;code&gt;istoreos-22.03.6-2024052410-x86-64-squashfs-combined.vmdk&lt;/code&gt;，可以到&lt;a href=&quot;https://fw.koolcenter.com/iStoreOS/x86_64/&quot;&gt;这里&lt;/a&gt;下载。我下载的 vmdk 文件，然后发现威联通不认 vmdk，又用威联通自带的工具转成了 img 映像。感觉应该是可以直接使用下载的 img 映像来安装。</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="Windows" scheme="http://shenguosai.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>QNAP-海报墙可刮削IP</title>
    <link href="http://shenguosai.github.io/2024/06/12/QNAP-%E6%B5%B7%E6%8A%A5%E5%A2%99%E5%8F%AF%E5%88%AE%E5%89%8AIP/"/>
    <id>http://shenguosai.github.io/2024/06/12/QNAP-%E6%B5%B7%E6%8A%A5%E5%A2%99%E5%8F%AF%E5%88%AE%E5%89%8AIP/</id>
    <published>2024-06-12T07:25:21.000Z</published>
    <updated>2024-08-27T15:54:42.600Z</updated>
    
    <content type="html"><![CDATA[<p>目前解决海报墙不可刮削问题的方法基本都是修改 hosts，因为墙屏蔽的是特殊 IP，而不是 themovie 等网站本身。</p><ol><li>修改 QNAP 的 hosts 文件:<br>这种方法比较简单方便，缺点就是每次威联通重启就会重置 hosts 文件。<br><code>sudo vi /etc/hosts</code><br>在 hosts 文件中指定域名的 IP 地址: <code>13.226.238.82 api.themoviedb.org</code></li><li>修改路由器的 hosts 文件:<br>这种方法一劳永逸，但是需要能够 ssh 路由器并取得 root 权限。<br>操作方法及添加内容与 1. 相同。</li></ol><p>在网上看到一个刮削网站的 IP 清单，将测试通过的记录如下:(摘自:<a href="https://post.smzdm.com/p/az6x9m00/">NAS干货分享 篇一：一招解决影片削挂问题，打造完美海报墙</a>)</p><pre><code class="lang-hosts">13.224.161.90 api.themoviedb.org104.16.61.155 image.themoviedb.org13.35.67.86 api.themoviedb.org54.192.151.79 www.themoviedb.org13.249.175.212 api.thetvdb.com13.35.161.120 api.thetvdb.com13.226.238.76 api.themoviedb.org13.35.7.102 api.themoviedb.org13.226.191.85 api.themoviedb.org52.85.79.89 api.themoviedb.org13.225.41.40 api.themoviedb.org13.226.251.88 api.themoviedb.org</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前解决海报墙不可刮削问题的方法基本都是修改 hosts，因为墙屏蔽的是特殊 IP，而不是 themovie 等网站本身。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改 QNAP 的 hosts 文件:&lt;br&gt;这种方法比较简单方便，缺点就是每次威联通重启就会重置 hosts 文件。&lt;br</summary>
      
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="QNAP" scheme="http://shenguosai.github.io/tags/QNAP/"/>
    
  </entry>
  
  <entry>
    <title>Debian Linux 使用 -- 远程桌面黑屏并闪退</title>
    <link href="http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E9%BB%91%E5%B1%8F%E5%B9%B6%E9%97%AA%E9%80%80/"/>
    <id>http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E9%BB%91%E5%B1%8F%E5%B9%B6%E9%97%AA%E9%80%80/</id>
    <published>2024-05-11T02:39:11.000Z</published>
    <updated>2024-08-27T15:50:44.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-Xrdp-使用-Xorg-进行远程登录"><a href="#安装-Xrdp-使用-Xorg-进行远程登录" class="headerlink" title="安装 Xrdp 使用 Xorg 进行远程登录"></a>安装 Xrdp 使用 Xorg 进行远程登录</h1><p>网上有很多远程桌面的登录方法，如 VNC、X11 转发等等，由于不喜欢安装太多软件，想使用 Windoews 自带的远程桌面。</p><pre><code class="lang-bash">sudo apt install xrdp</code></pre><span id="more"></span><p>安装完成后该服务将自动开启，可通过下面命令确认是否开启:</p><pre><code class="lang-bash">sudo systemctl status xrdp</code></pre><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240511104423.png" alt="20240511104423"><br>红框处显示 <code>active(running)</code> 则说明已开启。</p><h1 id="解决远程桌面连接上之后黑屏并闪退问题"><a href="#解决远程桌面连接上之后黑屏并闪退问题" class="headerlink" title="解决远程桌面连接上之后黑屏并闪退问题"></a>解决远程桌面连接上之后黑屏并闪退问题</h1><p>这个经常会有人说更换 test 版本的 xrdp 来解决，但是通过以下办法可以正常登录。<br>编辑<code>/etc/xrdp/startwm.sh</code></p><pre><code class="lang-bash">sudo vi /etc/xrdp/startwm.sh</code></pre><p>加入下面三行内容:</p><pre><code class="lang-bash">unset DBUS_SESSION_BUS_ADDRESSunset XDG_RUNTIME_DIR. $HOME/.profile</code></pre><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240511104947.png" alt="20240511104947"><br>然后就可以通过 Xorg 登录看到桌面了。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240511105324.png" alt="20240511105324"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;安装-Xrdp-使用-Xorg-进行远程登录&quot;&gt;&lt;a href=&quot;#安装-Xrdp-使用-Xorg-进行远程登录&quot; class=&quot;headerlink&quot; title=&quot;安装 Xrdp 使用 Xorg 进行远程登录&quot;&gt;&lt;/a&gt;安装 Xrdp 使用 Xorg 进行远程登录&lt;/h1&gt;&lt;p&gt;网上有很多远程桌面的登录方法，如 VNC、X11 转发等等，由于不喜欢安装太多软件，想使用 Windoews 自带的远程桌面。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;sudo apt install xrdp
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="软件应用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Linux" scheme="http://shenguosai.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Debian Linux 使用 -- 系统安装</title>
    <link href="http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>http://shenguosai.github.io/2024/05/11/Debian-Linux-%E4%BD%BF%E7%94%A8-%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</id>
    <published>2024-05-11T00:32:17.000Z</published>
    <updated>2024-08-27T15:50:34.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机器配置"><a href="#机器配置" class="headerlink" title="机器配置"></a>机器配置</h1><p>这台机器比较老，是200x年在日本买的富士通的 FMV-DESKPOWER，型号是 FMVFB70T。<br>配置如下:</p><div class="table-container"><table><thead><tr><th>配件名称</th><th>型号</th><th>规格</th></tr></thead><tbody><tr><td>主板</td><td>FJNB023</td><td></td></tr><tr><td>CPU</td><td>Core(TM)2 Duo P8400</td><td>2.26GHz 2核2线程</td></tr><tr><td>Chipset</td><td>Intel GM45 Express</td><td>1066MHz</td></tr><tr><td>内存</td><td>型号不明，看实物为尔必达颗粒</td><td>DDR3-1066 PC3-8500 1G x2</td></tr><tr><td>硬盘</td><td>Seagate ST3500820AS</td><td>500G容量，7200转/s，5V 0.65A，12V 0.42A</td></tr><tr><td>LAN</td><td>Marvell 88E8055</td><td>1000BASE-T/100BASE-TX/10BASE-T,支持WOL</td></tr><tr><td>WIFI</td><td>Qualcomm Atheros AR928X</td><td>IEEE802.11/a/b/g/n</td></tr><tr><td>USB</td><td></td><td>USB2.0(4pin x5)</td></tr><tr><td>显示器</td><td></td><td>19inch，1440 x 900</td></tr></tbody></table></div><span id="more"></span><blockquote><p>官网建议最大内存 4G(2G x2)，是因为当时预装的 Windows Vista Home 是 32 位系统，最大支持 4G 内存，而根据 GN45 Express 的 Chipset 规格最大可支持 8G(4G x2) 内存。</p></blockquote><p>相关命令:</p><pre><code class="lang-bash">lscpu #使用程序将 sysfs 和 /proc/cpuinfo 中的详细 CPU 信息输出到屏幕sudo dmidecode -t 2 #主板信息sudo dmidecode -t 16 #内存信息lspci | grep Ethernet #有线网卡lspci | greo Wireless #无线网卡iwconfig #无线网卡</code></pre><h1 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h1><p>Debian 有很多版本，由于机器比较老，我使用的是 32 位的 dvd 映像进行的安装。<br>下载地址: <a href="https://cdimage.debian.org/debian-cd/current/i386/bt-dvd/">debian-12.5.0-i386-DVD-1.iso.torrent</a></p><h1 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h1><p>使用 Ventoy 正常安装即可。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>由于使用的 DVD 映像进行的系统安装，在后续安装软件时会优先使用介质安装，需要在 <code>/etc/apt/source.list</code> 中关闭映像安装，如下在第一行中添加 <code>#</code> 进行注释(我在安装系统时选择的是华为的镜像源)。</p><pre><code class="lang-bash"># deb cdrom:[Debian GNU/Linux 12.5.0 _Bookworm_ - Official i386 DVD Binary-1 with firmware 20240210-11:28]/ bookworm contrib main non-free-firmwaredeb http://mirrors.huaweicloud.com/debian/ bookworm main non-free-firmwaredeb-src http://mirrors.huaweicloud.com/debian/ bookworm main non-free-firmwaredeb http://security.debian.org/debian-security bookworm-security main non-free-firmwaredeb-src http://security.debian.org/debian-security bookworm-security main non-free-firmware# bookworm-updates, to get updates before a point release is made;# see https://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_updates_and_backportsdeb http://mirrors.huaweicloud.com/debian/ bookworm-updates main non-free-firmwaredeb-src http://mirrors.huaweicloud.com/debian/ bookworm-updates main non-free-firmware</code></pre><h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><p>在安装系统时会设置两个用户，一个 root 用户，一个普通用户，而使用普通用户时默认无法使用<code>sudo</code>，所以需要安装<code>sudo</code>并添加权限。</p><ol><li>安装<code>sudo</code><br>切换至 root 用户并安装<code>sudo</code>:<pre><code class="lang-bash">su rootapt install sudo</code></pre></li><li>添加权限<br>网上介绍了两种方法，但我使用方法一的时候没有成功，建议直接使用方法二。<br>方法一: 切换至 root 用户并执行下面的命令。<pre><code class="lang-bash">sudo usermod -aG sudo username</code></pre>上面命令中的 username 换成自己的用户名。<br>方法二: 切换至 root 用户，在 <code>/etc/sudoer.d/</code> 目录下新建一个以自己用户名为文件名的文件。<pre><code class="lang-bash">touch /etc/sudoer.d/usernamenano /etc/sudoer.d/username</code></pre>添加以下内容:<pre><code class="lang-bash">username ALL=(ALL)ALL</code></pre>注意上面的 username 需要换成自己的用户名，然后 Ctrl+X 保存退出并切换回自己的用户就可以了。</li></ol><h2 id="配置语言"><a href="#配置语言" class="headerlink" title="配置语言"></a>配置语言</h2><p>在安装过程中如果选择系统语言为英语进行安装的话进入系统后还要设置语言为中文并安装中文输入法，折腾了一番成功了但是具体的步骤不知道是否合理。</p><ol><li>安装语言包<pre><code class="lang-bash">sudo apt updatesudo apt install locales</code></pre></li><li>配置 <code>locale</code><pre><code class="lang-bash">sudo dpkg-reconfigure locales</code></pre>在出现的对话框的表里一直下拉选择 <code>zh_CN.UTF-8</code> 。然后在下一个界面中选择 <code>zh_CN.UTF-8</code> 作为默认的 <code>locale</code> 。</li><li>安装中文字体(非必需)<pre><code class="lang-bash">sudo apt install fonts-wqy-microhei fonts-wqy-zenhei xfonts-wqy</code></pre></li><li>安装中文输入法<br>(1) 如果原来有安装先卸载<pre><code class="lang-bash">sudo apt purge fcitx* ibus*</code></pre>(2) 安装 fcitx5 中文拼音输入法<pre><code class="lang-bash">sudo apt install fcitx5 fcitx5-chinese-addons</code></pre>(3) 然后重启系统打开 fcitx 配置根据自己的需要进行配置即可。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;机器配置&quot;&gt;&lt;a href=&quot;#机器配置&quot; class=&quot;headerlink&quot; title=&quot;机器配置&quot;&gt;&lt;/a&gt;机器配置&lt;/h1&gt;&lt;p&gt;这台机器比较老，是200x年在日本买的富士通的 FMV-DESKPOWER，型号是 FMVFB70T。&lt;br&gt;配置如下:&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配件名称&lt;/th&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;规格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;主板&lt;/td&gt;
&lt;td&gt;FJNB023&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;Core(TM)2 Duo P8400&lt;/td&gt;
&lt;td&gt;2.26GHz 2核2线程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chipset&lt;/td&gt;
&lt;td&gt;Intel GM45 Express&lt;/td&gt;
&lt;td&gt;1066MHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内存&lt;/td&gt;
&lt;td&gt;型号不明，看实物为尔必达颗粒&lt;/td&gt;
&lt;td&gt;DDR3-1066 PC3-8500 1G x2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;硬盘&lt;/td&gt;
&lt;td&gt;Seagate ST3500820AS&lt;/td&gt;
&lt;td&gt;500G容量，7200转/s，5V 0.65A，12V 0.42A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LAN&lt;/td&gt;
&lt;td&gt;Marvell 88E8055&lt;/td&gt;
&lt;td&gt;1000BASE-T/100BASE-TX/10BASE-T,支持WOL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIFI&lt;/td&gt;
&lt;td&gt;Qualcomm Atheros AR928X&lt;/td&gt;
&lt;td&gt;IEEE802.11/a/b/g/n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;USB&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;USB2.0(4pin x5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示器&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;19inch，1440 x 900&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="软件应用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Linux" scheme="http://shenguosai.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Pura 70系列四款机型区别</title>
    <link href="http://shenguosai.github.io/2024/04/28/Pura-70%E7%B3%BB%E5%88%97%E5%9B%9B%E6%AC%BE%E6%9C%BA%E5%9E%8B%E5%8C%BA%E5%88%AB/"/>
    <id>http://shenguosai.github.io/2024/04/28/Pura-70%E7%B3%BB%E5%88%97%E5%9B%9B%E6%AC%BE%E6%9C%BA%E5%9E%8B%E5%8C%BA%E5%88%AB/</id>
    <published>2024-04-28T05:49:31.000Z</published>
    <updated>2024-08-27T15:54:23.898Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>机型</th><th>Pura 70</th><th>Pura 70 Pro</th><th>Pura 70 Pro+</th><th>Pura 70 Ultra</th></tr></thead><tbody><tr><td>颜色</td><td>羽纱黑/雪域白/樱玫红/冰晶蓝</td><td>羽纱黑/雪域白/罗兰紫</td><td>光织银/弦乐白/魅影黑</td><td>香颂绿/摩卡棕/星芒白/星芒黑</td></tr><tr><td>屏幕外观</td><td>直屏/6.6英寸/第二代昆仑玻璃</td><td>等深四曲设计/6.8英寸/第二代昆仑玻璃</td><td>等深四曲设计/6.8英寸/玄武钢化昆仑玻璃</td><td>等深四曲设计/6.8英寸/玄武钢化昆仑玻璃</td></tr><tr><td>屏幕规格</td><td>1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度</td><td>1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度</td><td>1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度</td><td>1~120Hz自适应刷新率、2500nits峰值亮度、460ppi像素密度</td></tr><tr><td>后置摄像头</td><td>5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/1200万5倍光学变焦潜望式长焦摄像头/1300万超广角摄像头</td><td>5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/4800万5倍光学变焦潜望式长焦摄像头/1250万超广角摄像头</td><td>5000万新一代超聚光主摄(F1.4~F4.0可变光圈)/4800万5倍光学变焦潜望式长焦摄像头/1250万超广角摄像头</td><td>5000万新一代超聚光主摄(F1.6~F4.0可变光圈)/5000万5倍光学变焦潜望式长焦摄像头/4000万超广角摄像头</td></tr><tr><td>前置摄像头</td><td>1300万摄像头</td><td>1300万摄像头 支持自动对焦</td><td>1300万摄像头 支持自动对焦</td><td>1300万摄像头 支持自动对焦</td></tr><tr><td>内存</td><td>12G+256G、12G+512G、12G+1TB</td><td>12G+256G、12G+512G、12G+1TB</td><td>16G+512G、16G+1TB</td><td>16G+512G、16G+1TB</td></tr><tr><td>价格</td><td>5499元 5999元 6999元</td><td>6499元 6999元 7999元</td><td>7999元 8999元</td><td>9999元 10999元</td></tr><tr><td>电池容量</td><td>4900mAh(典型值)</td><td>5050mAh(典型值)</td><td>5050mAh(典型值)</td><td>5200mAh(典型值)</td></tr><tr><td>充电功率</td><td>有线66W、无线50W、无线反向7.5W</td><td>有线100W、无线80W、无线反向20W</td><td>有线100W、无线80W、无线反向20W</td><td>有线100W、无线80W、无线反向20W</td></tr><tr><td>防水等级</td><td>IP68 1.5m</td><td>IP68 2m</td><td>IP68 2m</td><td>IP68 2m</td></tr><tr><td>卫星通信</td><td>/</td><td>北斗卫星通信</td><td>北斗卫星通信+天通卫星通信</td><td>北斗卫星通信+天通卫星通信</td></tr></tbody></table></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;机型&lt;/th&gt;
&lt;th&gt;Pura 70&lt;/th&gt;
&lt;th&gt;Pura 70 Pro&lt;/th&gt;
&lt;th&gt;Pura 70 Pro+&lt;/th&gt;
&lt;th&gt;Pura 70 Ultra</summary>
      
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="设备及使用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Pura 70" scheme="http://shenguosai.github.io/tags/Pura-70/"/>
    
  </entry>
  
  <entry>
    <title>使用越狱iPhone部署ddns服务</title>
    <link href="http://shenguosai.github.io/2024/04/15/%E4%BD%BF%E7%94%A8%E8%B6%8A%E7%8B%B1iPhone%E9%83%A8%E7%BD%B2ddns%E6%9C%8D%E5%8A%A1/"/>
    <id>http://shenguosai.github.io/2024/04/15/%E4%BD%BF%E7%94%A8%E8%B6%8A%E7%8B%B1iPhone%E9%83%A8%E7%BD%B2ddns%E6%9C%8D%E5%8A%A1/</id>
    <published>2024-04-15T12:21:42.000Z</published>
    <updated>2024-09-23T13:15:35.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iPhone-越狱并获取root权限"><a href="#iPhone-越狱并获取root权限" class="headerlink" title="iPhone 越狱并获取root权限"></a>iPhone 越狱并获取root权限</h1><p>此处略，可以使用爱思助手 8.0 通过 Chimera 进行的越狱，此越狱方式并不完美，每次iPhone重启后所有越狱安装的app都会闪退，需要重新越狱一次才行。</p><h1 id="在-CloudFlare-上建立一个二级域名"><a href="#在-CloudFlare-上建立一个二级域名" class="headerlink" title="在 CloudFlare 上建立一个二级域名"></a>在 CloudFlare 上建立一个二级域名</h1><p>首先，在 Cloudflare 上申请一个域名或者在其他网站申请托管到 Cloudflare 上，并建立用来作为 DDNS 用的 A 记录和 AAAA 记录。假设是:<br>A 记录:     ddns.example.com      1.1.1.1<br>AAAA 记录   ddns.example.com      2606:4700:4700::1111<br>IP 地址先可以随便填。<br><span id="more"></span></p><h1 id="取得所需的-ZONE-ID、API-Token-和-RECORD-ID"><a href="#取得所需的-ZONE-ID、API-Token-和-RECORD-ID" class="headerlink" title="取得所需的 ZONE_ID、API_Token 和 RECORD_ID"></a>取得所需的 ZONE_ID、API_Token 和 RECORD_ID</h1><p>ZONE_ID 就在域名概述页的右下侧，名字为区域 ID。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240415210230.png" alt="20240415210230"><br>然后在同一页面的下方点击获取 API 令牌。<br>点击创建令牌，使用“编辑区域 DNS”的模板，选择相应的域名，点击显示摘要，并创建令牌。<br>把生成的 API_Token 保存好。<br>接着打开一个 Linux 终端，执行以下代码:</p><pre><code class="lang-bash">ZONE_ID=&quot;你的 Zone ID&quot;API_TOKEN=&quot;你的API Token&quot;curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records?name=ddns.example.com&quot; \-H &quot;Authorization: Bearer $API_TOKEN&quot; \-H &quot;Content-Type: application/json&quot;</code></pre><p>注意替换上述代码中的 ZONE_ID，API_Token，二级域名。<br>在返回的结果中，找到“name”与相应二级域名相符的 RECORD_ID。</p><h1 id="建立-Shell-脚本"><a href="#建立-Shell-脚本" class="headerlink" title="建立 Shell 脚本"></a>建立 Shell 脚本</h1><p>在你想运行的位置比如<code>root</code>目录建立一个脚本文件:</p><pre><code class="lang-bash">mkdir cfddns &amp;&amp; cd cfddnstouch ddns.sh</code></pre><p>然后用编辑器打开:</p><pre><code class="lang-bash">vim ddns.sh</code></pre><p>复制一下代码并保存退出:</p><pre><code class="lang-bash">#!/bin/shNEW_IP=`curl -s http://ipv4.ddnspod.com`CURRENT_IP=`cat $(dirname &quot;$0&quot;)/current_ip.txt`CURRENT_TIME=$(date +&quot;%F %T&quot;)DDNS=&quot;home.starnest.eu.org&quot;ZONE_ID=&quot;1234567890abcdef1234567890abcdef&quot;API_TOKEN=&quot;1234567890abcdef1234567890abcdef&quot;RECORD_ID=&quot;1234567890abcdef1234567890abcdef&quot;if [ &quot;$NEW_IP&quot; = &quot;$CURRENT_IP&quot; ]then        echo &quot;[$CURRENT_TIME] No Change in IP Adddress&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txtelsecurl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \     -H &quot;Authorization: Bearer $API_TOKEN&quot; \     -H &quot;Content-Type: application/json&quot; \     --data &#39;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IP&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/nullecho $NEW_IP &gt; $(dirname &quot;$0&quot;)/current_ip.txtecho &quot;[$CURRENT_TIME] IP changed to $NEW_IP&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txtfi</code></pre><p>若想同时适用对 ipv6 有效则使用下面的脚本(未测试):</p><pre><code class="lang-bash">#!/bin/sh# 简单的使用Clodflare API来实现DDNS的脚本NEW_IPv4=$(curl -s http://ipv4.icanhazip.com)NEW_IPv6=$(curl -s http://ipv6.icanhazip.com)CURRENT_IPv4=$(cat $(dirname &quot;$0&quot;)/current_ipv4.txt)CURRENT_IPv6=$(cat $(dirname &quot;$0&quot;)/current_ipv6.txt)CURRENT_TIME=$(date +&quot;%F %T&quot;)# 填入DDNS域名DDNS=&quot;ddns.example.com&quot;# ZONE_ID在Clouflare域名页面上获取ZONE_ID=&quot;1234567890abcdef1234567890abcdef&quot;# API_TOKEN在Clouflare个人资料页面上创建API_TOKEN=&quot;1234567890abcdef1234567890abcdef&quot;# RECORD_ID获取应执行以下代码：# ZONE_ID=&quot;你的 Zone ID&quot;# API_TOKEN=&quot;你的API Token&quot;# curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records?name=example.com&quot; \#     -H &quot;Authorization: Bearer $API_TOKEN&quot; \#     -H &quot;Content-Type: application/json&quot;RECORD_ID=&quot;1234567890abcdef1234567890abcdef&quot;if [ -z &quot;$NEW_IPv4&quot; ] &amp;&amp; [ -z &quot;$NEW_IPv6&quot; ]; then  echo &quot;[$CURRENT_TIME] Failed to get IP address&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt  exit 1elif [ &quot;$NEW_IPv4&quot; = &quot;$CURRENT_IPv4&quot; ] &amp;&amp; [ &quot;$NEW_IPv6&quot; = &quot;$CURRENT_IPv6&quot; ]; then  echo &quot;[$CURRENT_TIME] No change in IP address&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txtelse  if [ -n &quot;$NEW_IPv4&quot; ] &amp;&amp; [ &quot;$NEW_IPv4&quot; != &quot;$CURRENT_IPv4&quot; ]; then    curl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \      -H &quot;Authorization: Bearer $API_TOKEN&quot; \      -H &quot;Content-Type: application/json&quot; \      --data &#39;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IPv4&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/null    echo &quot;$NEW_IPv4&quot; &gt; $(dirname &quot;$0&quot;)/current_ipv4.txt    echo &quot;[$CURRENT_TIME] IPv4 address changed to $NEW_IPv4&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt  fi  if [ -n &quot;$NEW_IPv6&quot; ] &amp;&amp; [ &quot;$NEW_IPv6&quot; != &quot;$CURRENT_IPv6&quot; ]; then    curl -k -X PUT &quot;https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID&quot; \      -H &quot;Authorization: Bearer $API_TOKEN&quot; \      -H &quot;Content-Type: application/json&quot; \      --data &#39;&#123;&quot;type&quot;:&quot;AAAA&quot;,&quot;name&quot;:&quot;&#39;$DDNS&#39;&quot;,&quot;content&quot;:&quot;&#39;$NEW_IPv6&#39;&quot;,&quot;ttl&quot;:1,&quot;proxied&quot;:false&#125;&#39; &gt; /dev/null    echo &quot;$NEW_IPv6&quot; &gt; $(dirname &quot;$0&quot;)/current_ipv6.txt    echo &quot;[$CURRENT_TIME] IPv6 address changed to $NEW_IPv6&quot; &gt;&gt; $(dirname &quot;$0&quot;)/crontab_log.txt  fifi</code></pre><h1 id="执行-Shell-脚本并设置定时任务"><a href="#执行-Shell-脚本并设置定时任务" class="headerlink" title="执行 Shell 脚本并设置定时任务"></a>执行 Shell 脚本并设置定时任务</h1><h2 id="手动执行确认"><a href="#手动执行确认" class="headerlink" title="手动执行确认"></a>手动执行确认</h2><p>先手动执行一次脚本，然后检查 Cloudflare 解析记录和同文件夹下生成的 crontab_log.txt，确认 IP 是否正确更新。</p><pre><code class="lang-bash">/bin/sh ddns.sh</code></pre><h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><p>若上述脚本执行无误，则使用 plist 设置定时任务。<br>首先，要新增被管理项需要新增一个<code>.plist</code>放入苹果的管理文件夹下，然后使其被加载后执行。苹果根据用户的角色提供了不同的 Launtch 存放位置。</p><pre><code class="lang-bash">~/Library/LaunchAgents          # 当前用户定义的任务/Library/LaunchAgents           # 系统管理员定义的任务/Library/LaunchDaemons          # 管理员定义的系统守护进程任务/System/Library/LaunchAgents    # 苹果定义的任务/System/Library/LaunchDaemons   # 苹果定义的系统守护进程任务</code></pre><p>很显然，我们最好不要使用下面两个位置的，我这里使用的是<code>/Library/LaunchDaemons</code>。</p><pre><code class="lang-bash">cd /Library/LaunchDaemonstouch starnest.ddns.plist   #前面的名字随便起，最后以`.plist`结尾</code></pre><p>然后编辑<code>starnest.ddns.plist</code>文件:</p><pre><code class="lang-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple Computer//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt;    &lt;key&gt;Label&lt;/key&gt;    &lt;string&gt;starnest.ddns&lt;/string&gt;    &lt;key&gt;ProgramArguments&lt;/key&gt;    &lt;array&gt;      &lt;string&gt;/bin/sh&lt;/string&gt;      &lt;string&gt;/var/root/script_service/ddns/ddns.sh&lt;/string&gt;    &lt;/array&gt;    &lt;key&gt;RunAtLoad&lt;/key&gt;    &lt;true/&gt;    &lt;key&gt;StartInterval&lt;/key&gt;    &lt;integer&gt;180&lt;/integer&gt;&lt;/dict&gt;&lt;/plist&gt;</code></pre><blockquote><p>上面的 StartInterval 中的时间不是很确定，使用<code>date</code>命令测试时 interger 设置为 1 会没 10 秒执行一次任务，但是 ddns 脚本中设置 180 应该是 30 分钟执行一次，但根据日志结果来看是 1 小时 3~4 次，时间不是太固定。但对 ddns 来说每小时 3~4 的频度足够了。</p><h2 id="启动定时任务"><a href="#启动定时任务" class="headerlink" title="启动定时任务"></a>启动定时任务</h2><pre><code class="lang-bash">launchctl load /Library/LaunchDaemons/starnest.ddns.plist</code></pre><p>确认是否启动成功</p><pre><code class="lang-bash">launchctl list | grep starnest</code></pre><pre><code>-       0       starnest.ddns</code></pre><p>第一列的 PID，第二列是 status，当 status 显示为 0 时表示任务正常进行。<br>我刚开始 status 显示 127，这个可以用以下命令来初步确认问题。</p><pre><code class="lang-bash">launchctl error 127</code></pre><pre><code>127: The specified service did not ship with the operating system</code></pre><p>最后发现是<code>plist</code>文件中脚本路径发生的错误。</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;iPhone-越狱并获取root权限&quot;&gt;&lt;a href=&quot;#iPhone-越狱并获取root权限&quot; class=&quot;headerlink&quot; title=&quot;iPhone 越狱并获取root权限&quot;&gt;&lt;/a&gt;iPhone 越狱并获取root权限&lt;/h1&gt;&lt;p&gt;此处略，可以使用爱思助手 8.0 通过 Chimera 进行的越狱，此越狱方式并不完美，每次iPhone重启后所有越狱安装的app都会闪退，需要重新越狱一次才行。&lt;/p&gt;
&lt;h1 id=&quot;在-CloudFlare-上建立一个二级域名&quot;&gt;&lt;a href=&quot;#在-CloudFlare-上建立一个二级域名&quot; class=&quot;headerlink&quot; title=&quot;在 CloudFlare 上建立一个二级域名&quot;&gt;&lt;/a&gt;在 CloudFlare 上建立一个二级域名&lt;/h1&gt;&lt;p&gt;首先，在 Cloudflare 上申请一个域名或者在其他网站申请托管到 Cloudflare 上，并建立用来作为 DDNS 用的 A 记录和 AAAA 记录。假设是:&lt;br&gt;A 记录:     ddns.example.com      1.1.1.1&lt;br&gt;AAAA 记录   ddns.example.com      2606:4700:4700::1111&lt;br&gt;IP 地址先可以随便填。&lt;br&gt;</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="设备及使用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="iPhone" scheme="http://shenguosai.github.io/tags/iPhone/"/>
    
    <category term="DDNS" scheme="http://shenguosai.github.io/tags/DDNS/"/>
    
  </entry>
  
  <entry>
    <title>2024孩子电话手表更换方案</title>
    <link href="http://shenguosai.github.io/2024/04/01/2024%E5%AD%A9%E5%AD%90%E7%94%B5%E8%AF%9D%E6%89%8B%E8%A1%A8%E6%9B%B4%E6%8D%A2%E6%96%B9%E6%A1%88/"/>
    <id>http://shenguosai.github.io/2024/04/01/2024%E5%AD%A9%E5%AD%90%E7%94%B5%E8%AF%9D%E6%89%8B%E8%A1%A8%E6%9B%B4%E6%8D%A2%E6%96%B9%E6%A1%88/</id>
    <published>2024-04-01T11:47:16.000Z</published>
    <updated>2024-08-27T15:24:58.549Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>配置项</th><th>Y3</th><th>Y3C</th><th>Y3 pro</th></tr></thead><tbody><tr><td>内存</td><td>1G</td><td>1G</td><td>1G</td></tr><tr><td>容量</td><td>8G</td><td>16G</td><td>8G</td></tr><tr><td>摄像头像素</td><td>200w</td><td>200w</td><td>500w</td></tr><tr><td>儿童手表版微信、支付</td><td>√</td><td>√</td><td>√</td></tr><tr><td>防水等级</td><td>2ATM</td><td>IPX8</td><td>2ATM</td></tr><tr><td>背单词</td><td>√</td><td>√</td><td>√</td></tr></tbody></table></div><p>NFC公交和乘车码对儿童手表来说目前是个伪需求，因为无法使用学生卡。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配置项&lt;/th&gt;
&lt;th&gt;Y3&lt;/th&gt;
&lt;th&gt;Y3C&lt;/th&gt;
&lt;th&gt;Y3 pro&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;内存&lt;</summary>
      
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="设备及使用" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E8%AE%BE%E5%A4%87%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="儿童手表" scheme="http://shenguosai.github.io/tags/%E5%84%BF%E7%AB%A5%E6%89%8B%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Nginx反向代理实现访问路由器控制界面</title>
    <link href="http://shenguosai.github.io/2024/03/28/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E8%AE%BF%E9%97%AE%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8E%A7%E5%88%B6%E7%95%8C%E9%9D%A2/"/>
    <id>http://shenguosai.github.io/2024/03/28/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E8%AE%BF%E9%97%AE%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8E%A7%E5%88%B6%E7%95%8C%E9%9D%A2/</id>
    <published>2024-03-28T01:54:56.000Z</published>
    <updated>2024-09-24T02:41:31.740Z</updated>
    
    <content type="html"><![CDATA[<p>前两天把家里空闲的手机翻出来想着干点什么，两个小米 Note，一个 iPhone4，两个 iPhone6，一个三星 Galaxy A9 Pro和一个三星 Galaxy A32。</p><ul><li>iPhone4 被我手残升级 iOS 搞成了砖，现在只能看白苹果了。。。</li><li>两个小米 Note 折腾了半天也没法解锁 BootLoader, 先放置了</li><li>一台 iPhone6 安装了“掌上看家” APP 在家里做个监控用来看孩子有没有玩电子设备</li><li>另一台 iPhone6 越狱出来做了一些小处理，本文重点来讲这个</li><li>三星 Galaxy A9 Pro 已经解锁 BootLoader 成功还没想好干什么</li><li>三星 Galaxy A32 还没折腾<span id="more"></span></li></ul><p>废话少说，今天来聊聊用越狱的 iPhone6 安装 nginx 实现反向代理访问华为路由器 AX3 Pro 的管理界面。</p><h1 id="iPhone6-越狱"><a href="#iPhone6-越狱" class="headerlink" title="iPhone6 越狱"></a>iPhone6 越狱</h1><p>这个没有记录，等后期越狱另外一台 iPhone6 的时候再详细描述。</p><h1 id="配置一下越狱的-iPhone6"><a href="#配置一下越狱的-iPhone6" class="headerlink" title="配置一下越狱的 iPhone6"></a>配置一下越狱的 iPhone6</h1><p>这个跟本篇设置关联不大，主要是配置了 bash 和 Vim。<br>越狱后的 iPhone 系统内核是 Drawin，使用 Linux 命令<code>uname -a</code>就可以查看:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@iPhone ~]<span class="hljs-comment">#uname -a</span><br>Darwin iPhone 18.7.0 Darwin Kernel Version 18.7.0: Fri Aug 19 23:28:26 PDT 2022; root:xnu-4903.272.5~1/RELEASE_ARM64_T7000 iPhone7,1 arm Darwin<br></code></pre></td></tr></table></figure></p><h2 id="bash设置"><a href="#bash设置" class="headerlink" title="bash设置"></a>bash设置</h2><p>iPhone 越狱后默认的 shell 是 zsh，由于一直习惯于使用 bash，就换成了 bash。</p><h3 id="使用命令cat-etc-shells查看系统支持的-shell"><a href="#使用命令cat-etc-shells查看系统支持的-shell" class="headerlink" title="使用命令cat /etc/shells查看系统支持的 shell:"></a>使用命令<code>cat /etc/shells</code>查看系统支持的 shell:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@iPhone ~]<span class="hljs-comment">#cat /etc/shells</span><br><span class="hljs-comment"># /etc/shells: valid login shells</span><br>/bin/sh<br>/usr/bin/sh<br>/bin/zsh<br>/usr/bin/zsh<br>/bin/bash<br>/usr/bin/bash<br>/usr/bin/dash<br></code></pre></td></tr></table></figure><h3 id="将默认-shell-更改为-bash"><a href="#将默认-shell-更改为-bash" class="headerlink" title="将默认 shell 更改为 bash:"></a>将默认 shell 更改为 bash:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chsh -s /bin/bash<br></code></pre></td></tr></table></figure><h3 id="查看当前用户-shell"><a href="#查看当前用户-shell" class="headerlink" title="查看当前用户 shell"></a>查看当前用户 shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@iPhone ~]<span class="hljs-comment">#echo $SHELL</span><br>/bin/bash<br></code></pre></td></tr></table></figure><h3 id="更改命令行提示符-PS1-及-常用命令"><a href="#更改命令行提示符-PS1-及-常用命令" class="headerlink" title="更改命令行提示符 PS1 及 常用命令"></a>更改命令行提示符 PS1 及 常用命令</h3><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs conf">export PATH=&#x27;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11:/usr/games&#x27;<br># export PS1=&#x27;\h:\w \u\$ &#x27;<br>export PS1=&#x27;[\u@\h \W]\$&#x27;<br>umask 022<br><br>export EDITOR=/usr/bin/editor<br>export PAGER=/usr/bin/pager<br><br>for i in /etc/profile.d/*.sh ; do<br>    if [ -r &quot;$i&quot; ]; then<br>        . $i<br>    fi<br>done<br><br>export LS_COLORS=&#x27;no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;35:*.exe=01;35:*.com=01;35:*.btm=01;35:*.bat=01;35:*.sh=01;35:*.csh=01;35:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:&#x27;<br>alias la=&#x27;ls -al&#x27;<br>alias ll=&#x27;ls -l&#x27;<br></code></pre></td></tr></table></figure></code></pre><blockquote><p>将第3行注释掉；<br>添加第3行；<br>添加15、16、17行；<br>其它都是默认的。<br><strong>注:不知道原因，但是在这个系统里只能修改这个文件(/etc/profile)来配置 bash，在用户目录下使用<code>.bashrc</code>修改没有效果，应该是默认不 load <code>.bashrc</code>文件。</strong></p></blockquote><h2 id="配置-VIM"><a href="#配置-VIM" class="headerlink" title="配置 VIM"></a>配置 VIM</h2><p>这个就在用户目录下使用<code>touch .vimrc</code>和<code>mkdir .vim</code>创建相关的配置文件和目录即可。<br>.vimrc 配置如下:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> <span class="hljs-keyword">nu</span><br><span class="hljs-keyword">set</span> backspace=<span class="hljs-built_in">indent</span>,eol,start<br><span class="hljs-comment">&quot;set cursorline</span><br><span class="hljs-comment">&quot;hi cursorline ctermbg=lightgray guibg=lightblue</span><br><br><span class="hljs-keyword">set</span> nobackup<br><span class="hljs-keyword">set</span> noswapfile<br><span class="hljs-keyword">set</span> nowritebackup<br><span class="hljs-keyword">set</span> noundofile<br><br><span class="hljs-keyword">set</span> nocompatible<br><span class="hljs-keyword">set</span> wrap<br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> statusline=%<span class="hljs-keyword">f</span>%<span class="hljs-keyword">m</span>%r%h%<span class="hljs-keyword">w</span>\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%<span class="hljs-keyword">l</span>,%v][%<span class="hljs-keyword">p</span>%%]\ [LEN=%L]<br><span class="hljs-keyword">set</span> ruler<br><span class="hljs-keyword">set</span> mouse=<span class="hljs-keyword">a</span><br><span class="hljs-keyword">set</span> showcmd<br><span class="hljs-keyword">set</span> cmdheight=<span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">history</span>=<span class="hljs-number">1000</span><br><br><span class="hljs-keyword">set</span> completeopt=preview,<span class="hljs-keyword">menu</span><br><span class="hljs-keyword">set</span> clipboard+=unnamed<br><span class="hljs-keyword">set</span> autoindent<br><span class="hljs-keyword">set</span> tabstop=<span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> softtabstop=<span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">shiftwidth</span>=<span class="hljs-number">2</span><br><span class="hljs-keyword">set</span> noexpandtab<br><br><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-keyword">on</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">version</span> &gt;= <span class="hljs-number">603</span><br>    <span class="hljs-keyword">set</span> helplang=<span class="hljs-keyword">cn</span><br>    <span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span><br><span class="hljs-keyword">endif</span><br><br><span class="hljs-keyword">inoremap</span> ( ()<span class="hljs-symbol">&lt;ESC&gt;</span>i<br><span class="hljs-keyword">inoremap</span> [ []<span class="hljs-symbol">&lt;ESC&gt;</span>i<br><span class="hljs-keyword">inoremap</span> &#123; &#123;&#125;<span class="hljs-symbol">&lt;ESC&gt;</span>i<br><span class="hljs-keyword">inoremap</span> &lt; &lt;&gt;<span class="hljs-symbol">&lt;ESC&gt;</span>i<br><span class="hljs-keyword">inoremap</span> <span class="hljs-string">&#x27; &#x27;</span><span class="hljs-string">&#x27;&lt;ESC&gt;i</span><br><span class="hljs-string">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br></code></pre></td></tr></table></figure><h1 id="在越狱的-iPhone6-上安装-OpenSSH"><a href="#在越狱的-iPhone6-上安装-OpenSSH" class="headerlink" title="在越狱的 iPhone6 上安装 OpenSSH"></a>在越狱的 iPhone6 上安装 OpenSSH</h1><p>这个属于常规操作，在越狱的市场里下载就行。(略)</p><h1 id="在越狱的-iPhone6-上安装-Nginx"><a href="#在越狱的-iPhone6-上安装-Nginx" class="headerlink" title="在越狱的 iPhone6 上安装 Nginx"></a>在越狱的 iPhone6 上安装 Nginx</h1><p>使用命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install nginx<br></code></pre></td></tr></table></figure><br>就会下载软件和相应的依赖包，当时没有记录，应该是下载了<code>nginx</code>，<code>nginx-common</code>，<code>nginx-core</code>等文件。</p><h1 id="配置-Nginx-使其访问当前设备时指向路由器管理界面"><a href="#配置-Nginx-使其访问当前设备时指向路由器管理界面" class="headerlink" title="配置 Nginx 使其访问当前设备时指向路由器管理界面"></a>配置 Nginx 使其访问当前设备时指向路由器管理界面</h1><h2 id="修改-Nginx-配置文件"><a href="#修改-Nginx-配置文件" class="headerlink" title="修改 Nginx 配置文件"></a>修改 Nginx 配置文件</h2><p>安装完成后在<code>/etc/nginx</code>目录中会有<code>nginx.conf</code>和<code>nginx.conf.defaut</code>两个文件，其中<code>nginx.conf</code>是 Nginx 实际运行时使用的配置文件，<code>nginx.conf.default</code>应该是个模板示例。</p><ol><li><code>cp nginx.conf.default nginx.conf</code>使用模板覆盖原来的<code>nginx.conf</code>；</li><li>在 http 模块的 server 里加入语句: <code>proxy_pass http://192.168.3.1/; #即反向代理要访问的地址</code>。<br>示例如下:<br>/etc/nginx/nginx.conf 文件设置如下:<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br><span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br><span class="hljs-attribute">server_name</span>  localhost;<br><span class="hljs-comment">#charset koi8-r;</span><br><span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><span class="hljs-section">location</span> / &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://192.168.3.1/;<br>    <span class="hljs-attribute">root</span>   html;<br>    <span class="hljs-attribute">index</span>  index.html index.htm;<br>&#125;<br></code></pre></td></tr></table></figure>其实其它都是 nginx.conf.default 中的内容，只要在<code>location</code>里面加入<code>proxy_pass http://192.168.3.1/;</code>这一句就可以，这样当访问此台设备的<code>80</code>端口时就会直接指向到路由器管理台的<code>192.168.3.1</code>了。</li></ol><h2 id="Nginx-常用命令"><a href="#Nginx-常用命令" class="headerlink" title="Nginx 常用命令"></a>Nginx 常用命令</h2><p>因为没有找到 Nginx 的 plist 文件来启停服务，所以需要使用软件命令来进行操作。<br>首先可以使用<code>nginx -h</code>来查询命令使用方法。<br>常用命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx <span class="hljs-comment"># 启动 Nginx</span><br>nginx -s reopen <span class="hljs-comment"># 重新启动 Nginx</span><br>nginx -s reload <span class="hljs-comment"># 在不关闭 Nginx 的情况下重新加载 /etc/nginx/nginx.conf 配置文件</span><br>nginx -s stop <span class="hljs-comment"># 关闭 Nginx</span><br>nginx -t <span class="hljs-comment"># 测试配置文件 /etc/nginx/nginx.conf</span><br>nginx -T <span class="hljs-comment"># 测试 配置文件 /etc/nginx/nginx.conf 并将其输出到屏幕</span><br>nginx -v <span class="hljs-comment"># 输出版本信息</span><br></code></pre></td></tr></table></figure></p><h1 id="外网访问路由器管理台"><a href="#外网访问路由器管理台" class="headerlink" title="外网访问路由器管理台"></a>外网访问路由器管理台</h1><p>将设置了 nginx 的设备端口<code>80</code>映射到外网即可，比如当前设备的局域网 ip 为<code>192.168.3.111</code>，映射外网端口为<code>11111</code>。<br>这样在外网访问时只要输入网址: <code>http://domain或者IP:1111</code> 就可以实现外网直接访问路由器管理后台了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;前两天把家里空闲的手机翻出来想着干点什么，两个小米 Note，一个 iPhone4，两个 iPhone6，一个三星 Galaxy A9 Pro和一个三星 Galaxy A32。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iPhone4 被我手残升级 iOS 搞成了砖，现在只能看白苹果了。。。&lt;/li&gt;
&lt;li&gt;两个小米 Note 折腾了半天也没法解锁 BootLoader, 先放置了&lt;/li&gt;
&lt;li&gt;一台 iPhone6 安装了“掌上看家” APP 在家里做个监控用来看孩子有没有玩电子设备&lt;/li&gt;
&lt;li&gt;另一台 iPhone6 越狱出来做了一些小处理，本文重点来讲这个&lt;/li&gt;
&lt;li&gt;三星 Galaxy A9 Pro 已经解锁 BootLoader 成功还没想好干什么&lt;/li&gt;
&lt;li&gt;三星 Galaxy A32 还没折腾</summary>
    
    
    
    <category term="技术兴趣" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/"/>
    
    <category term="网络服务" scheme="http://shenguosai.github.io/categories/%E6%8A%80%E6%9C%AF%E5%85%B4%E8%B6%A3/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="Nginx" scheme="http://shenguosai.github.io/tags/Nginx/"/>
    
    <category term="iPhone" scheme="http://shenguosai.github.io/tags/iPhone/"/>
    
  </entry>
  
</feed>
