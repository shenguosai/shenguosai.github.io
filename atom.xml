<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乙未丁酉</title>
  
  <subtitle>模拟工程师</subtitle>
  <link href="http://shenguosai.github.io/atom.xml" rel="self"/>
  
  <link href="http://shenguosai.github.io/"/>
  <updated>2024-02-04T02:15:28.986Z</updated>
  <id>http://shenguosai.github.io/</id>
  
  <author>
    <name>sgs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用curl命令行工具查询本地公网IP地址</title>
    <link href="http://shenguosai.github.io/2024/02/04/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E6%9F%A5%E8%AF%A2%E6%9C%AC%E5%9C%B0%E5%85%AC%E7%BD%91IP%E5%9C%B0%E5%9D%80/"/>
    <id>http://shenguosai.github.io/2024/02/04/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E6%9F%A5%E8%AF%A2%E6%9C%AC%E5%9C%B0%E5%85%AC%E7%BD%91IP%E5%9C%B0%E5%9D%80/</id>
    <published>2024-02-04T01:46:39.000Z</published>
    <updated>2024-02-04T02:15:28.986Z</updated>
    
    <content type="html"><![CDATA[<p>在 Linux 中 curl 是一个利用 URL 规则在命令行下工作的文件传输工具，同时也可以查询本机公网 IP 地址，具体使用方法如下:</p><ol><li>使用<code>curl ipinfo.io</code>查询:<pre>curl ipinfo.io</pre>返回值<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"> [root@MiWiFi-R3D-srv ~]<span class="hljs-comment"># curl ipinfo.io</span><br>&#123;<br> <span class="hljs-string">&quot;ip&quot;</span>: <span class="hljs-string">&quot;1.203.179.218&quot;</span>,// 此处是本机公网ip地址<br> <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;Beijing&quot;</span>,// 城市名<br> <span class="hljs-string">&quot;region&quot;</span>: <span class="hljs-string">&quot;Beijing&quot;</span>,// 区域名<br> <span class="hljs-string">&quot;country&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,// 国家代号<br> <span class="hljs-string">&quot;loc&quot;</span>: <span class="hljs-string">&quot;39.9075,116.3972&quot;</span>,// 经纬度坐标<br> <span class="hljs-string">&quot;org&quot;</span>: <span class="hljs-string">&quot;AS4847 China Networks Inter-Exchange&quot;</span>,// 运营商信息<br> <span class="hljs-string">&quot;timezone&quot;</span>: <span class="hljs-string">&quot;Asia/Shanghai&quot;</span>,// 时区<br> <span class="hljs-string">&quot;readme&quot;</span>: <span class="hljs-string">&quot;https://ipinfo.io/missingauth&quot;</span>//提示ipinfo.io官网地址<br>&#125;<br></code></pre></td></tr></table></figure></li><li>使用<code>curl ifconfig.me</code>查询<pre>curl ifconfig.me</pre>返回值<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@MiWiFi-R3D-srv ~]<span class="hljs-comment"># curl ifconfig.me</span><br>1.203.179.218 //只显示本机公网IP地址<br>[root@MiWiFi-R3D-srv ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure></li><li>使用<code>ipinfo.io</code>加<code>ip</code>地址，可查血这个 ip 的信息<pre>curl ipinfo.io/192.168.32.84</pre>返回值<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"> [root@MiWiFi-R3D-srv ~]<span class="hljs-comment"># curl  ipinfo.io/103.208.15.138</span><br>&#123;<br> <span class="hljs-string">&quot;ip&quot;</span>: <span class="hljs-string">&quot;103.208.15.138&quot;</span>,//被查询的IP地址<br> <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;Beijing&quot;</span>,//所属城市<br> <span class="hljs-string">&quot;region&quot;</span>: <span class="hljs-string">&quot;Beijing&quot;</span>,//所属区域<br> <span class="hljs-string">&quot;country&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,//国家代码<br> <span class="hljs-string">&quot;loc&quot;</span>: <span class="hljs-string">&quot;39.9075,116.3972&quot;</span>,//经纬度坐标<br> <span class="hljs-string">&quot;org&quot;</span>: <span class="hljs-string">&quot;AS9808 China Mobile Communications Group Co., Ltd.&quot;</span>,//运营商信息<br> <span class="hljs-string">&quot;timezone&quot;</span>: <span class="hljs-string">&quot;Asia/Shanghai&quot;</span>,//时区<br> <span class="hljs-string">&quot;readme&quot;</span>: <span class="hljs-string">&quot;https://ipinfo.io/missingauth&quot;</span>//ipinfo.io官网地址<br>&#125;<br></code></pre></td></tr></table></figure></li><li>此命令在 Windows 的命令提示符中也可以使用<br>使用方法如下:<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function"> C:\<span class="hljs-title">Users</span>\<span class="hljs-title">User</span>&gt;<span class="hljs-title">curl</span> <span class="hljs-title">ipinfo.io</span></span><br><span class="hljs-function">&#123;</span><br><span class="hljs-function"> &quot;<span class="hljs-title">ip</span>&quot;: &quot;1.203.179.218&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">city</span>&quot;: &quot;<span class="hljs-title">Beijing</span>&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">region</span>&quot;: &quot;<span class="hljs-title">Beijing</span>&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">country</span>&quot;: &quot;<span class="hljs-title">CN</span>&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">loc</span>&quot;: &quot;39.9075,116.3972&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">org</span>&quot;: &quot;<span class="hljs-title">AS4847</span> <span class="hljs-title">China</span> <span class="hljs-title">Networks</span> <span class="hljs-title">Inter</span>-<span class="hljs-title">Exchange</span>&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">timezone</span>&quot;: &quot;<span class="hljs-title">Asia</span>/<span class="hljs-title">Shanghai</span>&quot;,</span><br><span class="hljs-function"> &quot;<span class="hljs-title">readme</span>&quot;: &quot;<span class="hljs-title">https</span>://<span class="hljs-title">ipinfo.io</span>/<span class="hljs-title">missingauth</span>&quot;</span><br><span class="hljs-function">&#125;</span><br></code></pre></td></tr></table></figure></li><li>最简单的是使用 <a href="https://ip138.com/">https://ip138.com/</a> 网址进行本机公网IP地址查询<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240204101450.png" alt="20240204101450"></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Linux 中 curl 是一个利用 URL 规则在命令行下工作的文件传输工具，同时也可以查询本机公网 IP 地址，具体使用方法如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;curl ipinfo.io&lt;/code&gt;查询:&lt;pre&gt;curl ipinfo.io&lt;/p</summary>
      
    
    
    
    <category term="Note" scheme="http://shenguosai.github.io/categories/Note/"/>
    
    <category term="Linux" scheme="http://shenguosai.github.io/categories/Note/Linux/"/>
    
    
    <category term="Linux" scheme="http://shenguosai.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>关于半导体工艺中电容器件</title>
    <link href="http://shenguosai.github.io/2024/02/01/%E5%85%B3%E4%BA%8E%E5%8D%8A%E5%AF%BC%E4%BD%93%E5%B7%A5%E8%89%BA%E4%B8%AD%E7%94%B5%E5%AE%B9%E5%99%A8%E4%BB%B6/"/>
    <id>http://shenguosai.github.io/2024/02/01/%E5%85%B3%E4%BA%8E%E5%8D%8A%E5%AF%BC%E4%BD%93%E5%B7%A5%E8%89%BA%E4%B8%AD%E7%94%B5%E5%AE%B9%E5%99%A8%E4%BB%B6/</id>
    <published>2024-02-01T09:15:36.000Z</published>
    <updated>2024-02-01T09:36:37.662Z</updated>
    
    <content type="html"><![CDATA[<p>半导体设计中常用的电容有: MIM, MOM, Varactor, NCAP, N&#x2F;P MOS</p><h3 id="MIM"><a href="#MIM" class="headerlink" title="MIM"></a>MIM</h3><p>MIM 电容是利用异层金属制备:</p><ol><li>是使用特殊H -K 材料制作的高密度电容，比较薄，耐击穿性不好，比较贵，增加了新的工艺，需要额外的 mask(MIM 层间金属介质层)。</li><li>逻辑电路中本身存在较多的金属层，可以将奇数层金属连接在一起，偶数层金属连接在一起，形成层间 MIM 电容，但是层间距离比较大，一次电容密度比较小。</li><li>寄生电容大。</li></ol><h3 id="MOM"><a href="#MOM" class="headerlink" title="MOM"></a>MOM</h3><p>同层金属插指形成:</p><ol><li>比较占面积；</li><li>容值高；</li><li>工艺兼容，单独划分区域即可；</li><li>寄生电容小；</li><li>28nm 以下工艺固定使用 MOM 。</li></ol><h3 id="Varactor"><a href="#Varactor" class="headerlink" title="Varactor"></a>Varactor</h3><p>Poly-oxide-NWell，S&#x2F;D NP+ 作为bulk，是一种电压控制的电容，电容是反偏积累工作状态，其电容与电压的关系完全取决于 NWell 掺杂浓度梯度，工艺难度较大。<br>Varactor 一般操作在 accumulation (积累)区，C-V 曲线较线性，常用在需要电压调整电容的控制回路中。</p><p>在 Psub 的工艺中，Varactor 和 NCAP 是坐在 NWell 中，S&#x2F;D 是 N+ 重掺杂作为BULK，当 GATE 和 BULK 压差越大时，沟道积累负电荷越多，相当于 GATE 和 BULK 这两个极板离得越近，电容越大。</p><h3 id="NCAP"><a href="#NCAP" class="headerlink" title="NCAP"></a>NCAP</h3><h3 id="N-P-MOS-Poly-cap"><a href="#N-P-MOS-Poly-cap" class="headerlink" title="N&#x2F;P MOS(Poly cap)"></a>N&#x2F;P MOS(Poly cap)</h3><p>MOS 电容，对比 Varactor NWell 情况，Poly Cap 使用 PMOS。所以 S&#x2F;D 使用 PP+ 而不是 NP+。<br>MOS Cap 一般操作在 inversion (反型)区， C-V 曲线不线性且陡峭，通常用在固定 Gate Voltage 做稳压电容。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;半导体设计中常用的电容有: MIM, MOM, Varactor, NCAP, N&amp;#x2F;P MOS&lt;/p&gt;
&lt;h3 id=&quot;MIM&quot;&gt;&lt;a href=&quot;#MIM&quot; class=&quot;headerlink&quot; title=&quot;MIM&quot;&gt;&lt;/a&gt;MIM&lt;/h3&gt;&lt;p&gt;MIM 电容</summary>
      
    
    
    
    <category term="Knowledge Share" scheme="http://shenguosai.github.io/categories/Knowledge-Share/"/>
    
    
    <category term="Semicondcutor" scheme="http://shenguosai.github.io/tags/Semicondcutor/"/>
    
    <category term="Device" scheme="http://shenguosai.github.io/tags/Device/"/>
    
  </entry>
  
  <entry>
    <title>EDA工具使用备忘</title>
    <link href="http://shenguosai.github.io/2024/02/01/EDA%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/"/>
    <id>http://shenguosai.github.io/2024/02/01/EDA%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</id>
    <published>2024-02-01T00:49:38.000Z</published>
    <updated>2024-02-01T09:14:37.584Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cadence"><a href="#Cadence" class="headerlink" title="Cadence"></a>Cadence</h2><h4 id="Virtuoso"><a href="#Virtuoso" class="headerlink" title="Virtuoso"></a>Virtuoso</h4><ol><li>.cdsinit: 负责Cadence软件的初始化配置，包括加载快捷方式、嵌入Calibre软件接口等。<span id="more"></span><ul><li>示例存放目录:<code>Candence安装目录/tools/dfII/samples/local/cdsinit</code></li><li>读取顺序: <blockquote><p><em><font color="#d3d3d3">Cadence安装目录</font></em>&#x2F;tools&#x2F;dfII&#x2F;samples&#x2F;local&#x2F;cdsinit &#x3D;&gt; <em><font color="#d3d3d3">用户home目录</font></em>&#x2F;.cdsinit &#x3D;&gt; <em><font color="#d3d3d3">virtuoso启动目录</font></em>&#x2F;.cdsinit</p></blockquote></li><li>设置默认读取的display.drf文件:    <pre>drLoadDrf(<em>filePath</em>)</pre></li><li>设置默认快捷键文件:<ul><li>添加单个快捷键文件 <pre>load("/home/IC/Desktop/workspace/analog_ic/set_env/bindKeys_ICSkillSharing.il")</pre></li><li>添加多个快捷键文件 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs skill">let((bindKeyFileList file path saveSkillPath)<br>    bindKeyFileList = &#x27;(<br>        &quot;leBindKeys.il&quot;<br>        &quot;schBindKey.il&quot;<br>        &quot;bindKeys_ICSkillSharing.il&quot;<br>    )<br>)<br>; This is the path that is searched for the files<br>    path = strcat(<br>; If you want to add another path add it here as a string<br>        &quot;. ~/home/IC/Desktop/workspace/analog_ic/set_env &quot;<br>        prependInstallPath(&quot;local&quot;)<br>        prependInstallPath(&quot;samples/local&quot;)<br>    )<br>saveSkillPath = getSkillPath()<br>saveSkillPath(path)<br><br>foreach(file bindKeyFileList<br>    if(isFile(file) then<br>        loadi(file)<br>    )<br>)<br>setSkillPath(saveSkillPath)<br></code></pre></td></tr></table></figure></li></ul></li><li>快捷键设置:<ul><li>设置快捷键“0”消除高亮net|按“0”后鼠标点击欲消除的net: <pre>hiSetBindKey("Schematics" "<Key>0" "geEnterDeleteNetProbe()")</pre></li><li>设置快捷键“-”消除所有高亮net:  <pre>hiSetBindkey("Schematics" "<Key>-" "geDeleteAllProbe(getCurrentWindow() t)")</pre></li><li>设置快捷键“F6”打开Library Manager(启动Virtuoso后): <pre>hiSetBindKey("Command Interpreter" "<Key>F6" "ddsOpenLibManager()")</pre></li><li>设置快捷键“Shift+S”在上层schematic界面下编辑Symbol: <pre>hiSetBindKey("Schematics" "Shift<Ket>S" "schHiEditInPlace()")</pre></li></ul></li><li>设置仿真结果默认存放目录为“&#x2F;DATA&#x2F;shenguosai&#x2F;simulasion”:  <pre>envSetVal("asimenv.startup" "projectDir" 'string "/DATA/shenguosai/simulasion")</pre></li><li>调用其它软件接口:<ul><li>Calibre<pre>load("<em>Calibre_install_dir</em>/lib/calibre.skl")</li><li>HSPICE<pre>load("<em>HSPICE_install_dir</em>/interface/HSPICE.ile")</li></ul></li></ul></li><li>.cdsenv: 包含了Cadence软件的变量设置，用户通过对变量赋值，改变软件设置。<ul><li>示例存放目录: <code>Candence安装目录/tools/dfII/samples/.cdsenv</code></li><li>读取顺序: <blockquote><p><em><font color="#d3d3d3">Cadence安装目录</font></em>&#x2F;tools&#x2F;dfII&#x2F;samples&#x2F;.cdsenv &#x3D;&gt; <em><font color="#d3d3d3">用户home目录</font></em>&#x2F;.cdsenv &#x3D;&gt; <em><font color="#d3d3d3">virtuoso启动目录</font></em>&#x2F;.cdsenv</p></blockquote></li><li>设置仿真结果显示有效位数:(示例文件中有，通过搜索改变赋值即可,以下同)   <pre>auCore.misc labelDigits int 6</pre></li><li>改变仿真结果保存路径:   <pre>asimenv.startup projectDir string" ./simulation"</pre></li><li>按Library名称设置仿真结果保存路径:   <pre>asimenv.startup appendLibNameToProjectDir boolean t</li><li>设置原理图和版图中的 label 默认字体改为 roman:   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs skill">schematic createLabelFontStyle cyclic &quot;roman&quot;<br>layout labelFontStyle cyclic &quot;roman&quot;<br></code></pre></td></tr></table></figure></li><li>设置版图网格点默认值:视工艺而定   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs skill">layout xSnapSpacing float 0.005<br>layout ySnapSpacing float 0.005<br></code></pre></td></tr></table></figure></li><li>设置仿真波形与坐标显示:   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs skill">viva.graph  titleFont  string  &quot;Default,14,-1,5,75,0,0,0,0,0&quot;<br>viva.rectGraph    background  string  &quot;white&quot;<br>viva.axis     font   string   &quot;Default,14,-1,5,75,0,0,0,0,0&quot;<br>viva.horizMarker font    string   &quot;Default,14,-1,5,75,0,0,0,0,0&quot;<br>viva.vertMarker     font    string   &quot;Default,14,-1,5,75,0,0,0,0,0&quot;<br>viva.referenceLineMarker    font  string    &quot;Default,14,-1,5,75,0,0,0,0,0&quot;<br>...<br>viva.trace  lineThickness  string  &quot;Thick&quot;<br>viva.trace  lineStyle  string  &quot;solid&quot;<br>wavescan.trace  lineThickness  string  &quot;Thick&quot;<br>wavescan.trace  lineStyle  string  &quot;solid&quot;<br></code></pre></td></tr></table></figure>   其中<code>viva.axis font string &quot;Defaut,14,-1,5,75,0,0,0,0,0&quot;</code>中的 14 为字号；75 为颜色深度，可以理解为是否加粗，取值在0-99之间。<blockquote><p><b>注意</b>:仿真波形显示方法会与 PDK 中环境变量设置和 display.drf 文件中的设置有关，如果按照上面的方法设置完后不能达到实际效果，首先考虑是否是 PDK 自带脚本加载了其它软件变量或者使用的 display.drf 文件中做了相应修改，如果发现有问题可以修改 PDK 中环境变量或者 display.drf 文件的相应设置。</p></blockquote></li><li>实现在 Library Manager 界面双击 view 以只读方式打开:   <pre>cdsLibManager.main dblClickEditCellView boolean nil</pre><blockquote><p><b>特别注意</b>: 可能按照上面的方法设置完.cdsenv文件之后，发现设置并未生效，这时候需要注意一个问题，<b>Cadence每次启动时都会加载 .cdsinit 文件，然而对于 .cdsenv 文件并非如此，而且 .cdsenv文件中的变量值会被覆盖，具体软件加载 .cdsenv 文件的顺序需要再用户的环境变量设置文件中定义。</b>一般叫做 .bashrc (使用 export 定义环境变量)或者 .cshrc (使用 setenv 定义环境变量)。</p></blockquote>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 加载软件启动目录下的 .cdsenv 文件</span><br><span class="hljs-built_in">export</span> CDS_LOAD_ENV = CWD(setenv CDS_LOAD_ENV CWD)<br><br><span class="hljs-comment"># 首先加载用户主目录下的 .cdsenv 文件，然后加载软件启动目录下的 .cdsenv 文件。</span><br><span class="hljs-built_in">export</span> CDS_LOAD_ENV = addCWD(setenv CDS_LOAD_ENV addCWD)<br></code></pre></td></tr></table></figure></li></ul></li><li>display.drf: 一般在工艺库中会有初始化的显示文件。这里面会有电路的连线粗细及颜色，器件的一些显示，版图layout里面的layer颜色等等，还有ADE波形图里面的线的属性。总之就是显示相关的一些设置。<ul><li>文件的修改保存: 当修改过显示后，每次退出 virtuoso 会显示一个保存显示信息，这里输入名称，比如display_1.drf，这个文件默认保存在打开 virtuoso 的文件夹下面。</li><li>默认文件的设置: 在.cdsinit 文件里添加载入命令 <code>drLoadDrf(filepath)</code> 。</li></ul></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Cadence&quot;&gt;&lt;a href=&quot;#Cadence&quot; class=&quot;headerlink&quot; title=&quot;Cadence&quot;&gt;&lt;/a&gt;Cadence&lt;/h2&gt;&lt;h4 id=&quot;Virtuoso&quot;&gt;&lt;a href=&quot;#Virtuoso&quot; class=&quot;headerlink&quot; title=&quot;Virtuoso&quot;&gt;&lt;/a&gt;Virtuoso&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;.cdsinit: 负责Cadence软件的初始化配置，包括加载快捷方式、嵌入Calibre软件接口等。</summary>
    
    
    
    <category term="-[Semiconductor,EDA]" scheme="http://shenguosai.github.io/categories/Semiconductor-EDA/"/>
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/tags/Semiconductor/"/>
    
    <category term="EDA" scheme="http://shenguosai.github.io/tags/EDA/"/>
    
    <category term="Note" scheme="http://shenguosai.github.io/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>Work Logs--20240130</title>
    <link href="http://shenguosai.github.io/2024/01/30/Work-Logs-20240130/"/>
    <id>http://shenguosai.github.io/2024/01/30/Work-Logs-20240130/</id>
    <published>2024-01-30T10:00:00.000Z</published>
    <updated>2024-01-31T02:58:44.266Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="016e9aa1b2a512a297f9da608425a92f780194182117c2a5a917ea0dc66dc521">ae118af9461036e20f25663a30e189738734b433ecdcc685de42ade449b792d34bc8972806baa92858fa8c8179cc4f0cdad51b0f6d2e4688d806e1d895f634ddc3219fc23abbb5e49b2a3b0254457461a9e56f5091442fae415b599f95777f53349b5ac9c312d9f9d1912e24590acb55e898248e5f1fb86dc1d9976c1c1e6c8ecd7887d313f4407fbe3c890889a2d2809bb4758b29849793363c11583b4ca9bd52f72d00646e0765e1deeb8257354e35b1486ec2c81c151f323ad47e25a5e4315e22752ae0d2bfa35030b1a4e4583373bb896c9c8e403d683847dfb63251a37ec83a411798f3e5da471901e0e75c29d8526668ce930203040fb45b7a3abcfd0f3a3dec5dc16e7ee3ab45903cb868d7327add83a440d3b1660763271a7aab8ac70343844527c88ff59b5258ad8eb40496151c1e20d21267041fd4536a9ad3730095312382d9e2281afdc99c37d0ca3b44e329865d1ab6adc600b7e549e9837a6bc544531c3f9fe6b5bd33a6afa9d96a7f2a7bd0f0834d1f6f8b8fce30406b113877aa44806a250fcdf93d4d8a079ec9d4a0274aaaa95b2f03f09d85815c7aac1756558d9c3bfee577aae8640f09022b39a5e98d4ac8bc3e5dd56c13ba3caa06fd7a69f9f167c4524f8f34380a0febbfbf5d18e90f9d60aca880095d2725c456ba7426f9fc862ecbb3186a336121f4721441be44e4ce6b6f78c992da28dba56256f4ad4652895a736187c1f143ec1c0ccc9ef6e267ecace024063638c6119927c2c3a84896ddf99865ce8273947f1154e0dedda49eca1cc75c020eb1a9c081092a068fb317c0d307c9dcedf0c16dd871be612edf08e9caad415c46483ee97dafe34865ebedb8054bd621333bf6fd48014c34d165024971a301204fbd4475c622192f82e8fce352800a9f14fe87f6cb5a53b521615f70a28d6763ce6991ad7e5b5be0db481a8aa907d156bcde2fef66ff580b28a296b5d7cb9024b18c68b738cb86667dd6cdfb5e2ba81cc39325e7f4e399af93910e819b3df61c9dc7f28c35f3698014cf3c18888b9a4cd391a49e4e999e27fa66ece754f81cd66e8c013295f5ba13efaa3f6cbef275fb834b8eb8ec32f99c9efcfa9b9788daadf47dcef3192b89cf044c80de4fe86910ac925e606e377949dda4c187c422eca1ef1b1681d5bc74a6d2d1e8854ebcf0ffa80bdd6862480309d391afb82ecdbc05d81014f978af49cb5a399e5bdc1d8173f271b56a9f14e410c961ff6668fba456fe23e3c34b8471472c8c82a6c9a2a9880b43a91a6380b84bdf9a876c48ffc35d6f4421eea2c08633d6d4b0f009e7398cdd8cfb9f9354477a7704d271fac8893f04a1082988aa06ade7c4dbf8a53ff50e2a99789459506e070238a0af01d5570d87400daf457a93efd151cfb72de663f942ea36fbfdaf4e48c9ee4d21ed9ff20f0cd0a6139c667edff6c6dc5d1ac5cb7d104dc956b0158beb4a6317517fb50ee209fe934ce959abdca40d606faa7994ffc75c708ddfda002e9cbd4f3fbdd1a542a71cd094129a2b98c766892f2f2c53c405bf15bbf35fc815d3770803066b0460fa51cef863a557c67ef8435eccc9e7bfebd5abb9b81e671d8e92df7050109c11f05e3bd5ef048d3ea2b83985f68dc3cb2eb4c5db4972a2618a16d3d1fc3bda29ac49ba877187b1bf7d582901bf18f364529e28b6b321f88fd944fbc76fe4dafc9f3e515f329b9f1ba5c674b2bc97980df2b8bc5aefa2d6eb611e26a7767c61126d62e3256100016861766f65355cce2fa0e7fc51ba76cfd38dc52daada452c4bd48675086039d0ebc0d402533ff23f4aaaa59504f581ce8ab18dfd52d3847adb22ebc4962358b905e8718861e41acc24309981112f954ba7b9a6520b58631fe9714f91f3ce9925689ecc7cf10343bd45167895fb645cda5df1228c94b7e97d43ea1c6947105aae8586afb5d4f6f5850ce460c720c8d58c5d7ae6ac35a88f93342dc6529ac26880b67a7bfae16328065dfe33817f78d0e503856368ec397b13c1aa5228823ec2a8695dd47b1c2bfebda36da3d1a896d8952804886b5cb01d1d16d7fa9b3290f2226d3a1305cf019e66e88413d41a89368061d8b28d89b81531e096689ef2de74aa91417184c2757e7b43d7f4c9dae6bfec2c58d352f932628893a3489287344c073199d1ca2530ee8722525ceb2740364d948763ae352a26f15fce4f4cb87ff98fdd7c5defa6cc631ac33b03280e40e9c4ac7bff9b8bf228bc5641f45c272f189716e88787b88115acd7e1c9468522f70553f7bef38601a0ab7949ef6faa22a87e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="-[Projects,CXT2503S]" scheme="http://shenguosai.github.io/categories/Projects-CXT2503S/"/>
    
    
    <category term="WorkLogs" scheme="http://shenguosai.github.io/tags/WorkLogs/"/>
    
    <category term="Swiching Regulator" scheme="http://shenguosai.github.io/tags/Swiching-Regulator/"/>
    
    <category term="Buck-Boost" scheme="http://shenguosai.github.io/tags/Buck-Boost/"/>
    
  </entry>
  
  <entry>
    <title>浅谈几种带宽与增益</title>
    <link href="http://shenguosai.github.io/2024/01/10/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8D%E5%B8%A6%E5%AE%BD%E4%B8%8E%E5%A2%9E%E7%9B%8A/"/>
    <id>http://shenguosai.github.io/2024/01/10/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8D%E5%B8%A6%E5%AE%BD%E4%B8%8E%E5%A2%9E%E7%9B%8A/</id>
    <published>2024-01-10T07:02:38.000Z</published>
    <updated>2024-01-10T08:49:57.248Z</updated>
    
    <content type="html"><![CDATA[<p>今天记录一下闭环增益、开环增益、环路增益，以及3dB带宽、单位增益带宽(UGB)、增益带宽积(GBW)。</p><span id="more"></span><h2 id="关于增益"><a href="#关于增益" class="headerlink" title="关于增益"></a>关于增益</h2><h3 id="闭环增益"><a href="#闭环增益" class="headerlink" title="闭环增益"></a>闭环增益</h3><p>对于一个闭环反馈系统，如下图:<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240110153857.png" alt="20240110153857"><br>闭环增益即传输函数为: $\frac{Y(s)}{X(s)}&#x3D;\frac{H(s)}{1+\beta H(s)}$, 是 $\frac{开环增益}{1+环路增益}$。</p><h3 id="开环增益"><a href="#开环增益" class="headerlink" title="开环增益"></a>开环增益</h3><p>从上面图中可知，开环增益就是去除反馈对系统的作用，看运放的增益。</p><h3 id="环路增益"><a href="#环路增益" class="headerlink" title="环路增益"></a>环路增益</h3><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240110154642.png" alt="20240110154642"><br>如图所示，输入置0，断开环路。<br>环路增益$\frac{V_F}{V_t}&#x3D;\beta A$<br>根据巴克豪森判据判断系统是否稳定，所以仿真都是用stb仿环路稳定性，看<b>环路增益波特图</b>而不是看开环增益或者闭环增益。</p><p>那为什么到运放看稳定性就说开环增益了呢？<br>对于单个运放来说，由于运放一般工作在负反馈系统中，开环增益就相当于反馈系数为1的环路增益，所以到运放会说开环增益，其实还是在说环路增益。</p><p>那为什么说运放仿开环增益相位裕度够了就代表其接成反馈系统是稳定的呢？<br>拉扎维的10.2节完美解释了这个问题:<br>运放开环增益相当于反馈系数为1的环路增益:在反馈系统里，反馈系数最大为1，就是接成单位增益负反馈形势。这种情况下，系统的环路增益波特图与运放的完全重合，即相位裕度一样，所以可以稳定。<br>对于其它反馈系数小于1的系统来说，环路增益为$\beta A$，不管$\beta$如何变，环路增益的波特图中，极点的位置与运放极点位置一样，不会变，所以相频曲线没有任何改变。但是由于$\beta &lt;1$，幅频曲线下移，增益交点提前，相位裕度只会越来越大。<br>综上，运放单独仿真与它接在负反馈系统里相比，相位裕度是最差的情况了，即当反馈变弱时，结果是系统更稳定。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20240110161104.png" alt="20240110161104"></p><h2 id="关于带宽"><a href="#关于带宽" class="headerlink" title="关于带宽"></a>关于带宽</h2><h3 id="3dB带宽"><a href="#3dB带宽" class="headerlink" title="3dB带宽"></a>3dB带宽</h3><p>3dB带宽就是运放的主极点处所对应的频率，幅度上对应比低频增益下降3个dB处。<br>推导:<br>运放传递函数:$A_v(s)&#x3D;\frac{A_v(0)}{(1+s&#x2F;\omega _0)(1+s&#x2F;\omega _1)(1+s&#x2F;\omega _2)···}$</p><p>假设次极点离主极点很远很远，那么在主极点$s&#x3D;\omega _0$处，有:<br>$A_v(\omega _0)&#x3D;20log(\frac{A_v(0)}{1+\omega _0&#x2F;\omega _0})&#x3D;20log(\frac{A_v(0))}{2}&#x3D;20logA_v(0)-20log(2)\approx 20logA_v(0)-3dB$</p><p>所以叫做3dB带宽。</p><h3 id="单位增益带宽"><a href="#单位增益带宽" class="headerlink" title="单位增益带宽"></a>单位增益带宽</h3><p>顾名思义，就是运放$\frac{开环增益}{闭环负反馈系统环路增益}&#x3D;1$时对应的频率。<br>为了推导方便，假设只有一个极点的运放，那么在它的单位增益带宽处，有:<br>$A_v(\omega _{UGB})&#x3D;\frac{A_v(0)}{1+\frac{\omega _{UGB}}{\omega _0}}&#x3D;1$<br>可得，$\omega _{UGB}&#x3D;A_v(0)*\omega _0$</p><p>这里有一个结论: 闭环系统的3dB带宽等于环路增益的党委增益带宽。单位增益负反馈系统的3dB带宽等于该系统中所使用的运放的单位增益带宽。<br>推导:负反馈想要稳定，即相位裕度达到60°，单位增益带宽内一定只有一个极点。只看单位增益带宽内的情况，那么有:<br>环路增益: $\beta A(s)&#x3D;\frac{\beta A_0}{1+\frac{s}{\omega _0}}$<br>闭环系统传输函数: $\frac{Y(s)}{X(s)}&#x3D;\frac{A(s)}{1+\beta A(s)}&#x3D;\frac{\frac{A_0}{1+\beta A_0}}{1+\frac{s}{(1+\beta A_0)\omega _0}}$<br>所以就闭环系统传输函数3dB带宽<b>(不是环路增益，是传输函数)</b>是$\omega _0<em>\beta A_0$，环路增益的单位增益带宽也是$\omega _0</em>\beta A_0$。<br>当系统为单位增益负反馈系统时，即反馈因子是1，系统3dB带宽是$\omega _0<em>A_0$,运放单位增益带宽也是$\omega _0</em>A_0$。</p><h3 id="增益带宽积-GBW"><a href="#增益带宽积-GBW" class="headerlink" title="增益带宽积(GBW)"></a>增益带宽积(GBW)</h3><p>增益与带宽的乘积。<br>重要结论:在单极点系统中，GBW是不变的，等于单位增益带宽，等于低频增益3dB带宽。因为只有一个极点的时候，极点之后，带宽每增大10倍，增益下降20dB，20dB就是10倍，一个增大十倍，一个减小十倍，自然不变。<br>结合单位增益带宽中的结论推导部分，可见，闭环系统传输函数的增益带宽积与开环的增益带宽积相等。(再次强调:是传输函数的增益带宽积，不是环路增益中的增益带宽积)<br>$A_0<em>\omega _0&#x3D;\frac{A_0}{1+\beta A_0}</em>(1+\beta A_0)*\omega _0$</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天记录一下闭环增益、开环增益、环路增益，以及3dB带宽、单位增益带宽(UGB)、增益带宽积(GBW)。&lt;/p&gt;</summary>
    
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/categories/Semiconductor/"/>
    
    <category term="Analog" scheme="http://shenguosai.github.io/categories/Semiconductor/Analog/"/>
    
    
    <category term="反馈" scheme="http://shenguosai.github.io/tags/%E5%8F%8D%E9%A6%88/"/>
    
  </entry>
  
  <entry>
    <title>TVBox的安装与使用</title>
    <link href="http://shenguosai.github.io/2024/01/05/TVBox%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://shenguosai.github.io/2024/01/05/TVBox%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2024-01-05T00:48:22.000Z</published>
    <updated>2024-01-31T08:41:55.813Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/download/TVBox_takagen99_20231231-1656.apk">apk下载</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;/download/TVBox_takagen99_20231231-1656.apk&quot;&gt;apk下载&lt;/a&gt;&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/spoiler.css&quot; type=&quot;text/css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    <category term="TV-Software" scheme="http://shenguosai.github.io/categories/Tutorial/TV-Software/"/>
    
    <category term="TVBox" scheme="http://shenguosai.github.io/categories/Tutorial/TV-Software/TVBox/"/>
    
    
    <category term="Life" scheme="http://shenguosai.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Cadence使用Calibre进行后仿</title>
    <link href="http://shenguosai.github.io/2023/12/18/Cadence%E4%BD%BF%E7%94%A8Calibre%E8%BF%9B%E8%A1%8C%E5%90%8E%E4%BB%BF/"/>
    <id>http://shenguosai.github.io/2023/12/18/Cadence%E4%BD%BF%E7%94%A8Calibre%E8%BF%9B%E8%A1%8C%E5%90%8E%E4%BB%BF/</id>
    <published>2023-12-18T05:50:59.000Z</published>
    <updated>2024-01-31T03:02:31.009Z</updated>
    
    <content type="html"><![CDATA[<ol><li>通过 Virtuoso 的 Layout XL &#x3D;&gt; Calibre &#x3D;&gt; Run PEX 进入 Calibre PEX，并将工艺厂提供的 xRC(Rule) 文件设置好 Calibre PEX。<span id="more"></span></li><li>为了减少寄生参数，以及提高后仿效率，建议在 Calibre PEX &#x3D;&gt; PEX Options &#x3D;&gt; Netlist &#x3D;&gt; Reduction and CC 中将 Enable MinRes reduction 和 Enable MinCap Reduction 选中，并在 COMBINE 和 REMOVE 后的框中填写所需数值，一般 Cap 的 Combine 为 0.5fF，Remove 为 0.1fF。Res 的 Combine 为 1Ω，Remove 为 0.1Ω。</li><li>在 Outputs 选项中，Outputs &#x3D;&gt; Netlist 框中，Format 选 CALIBREVIEW(可增加 Geometry 可在 PEX 运行完后弹出寄生参数的总结)，Use Names From : SCHEMATIC 。</li><li>点击 Run PEX 开始寄生参数提取，之后进入 Calibre View Setup 界面。</li><li>Calibre View Setup 设置中，Output 选项填被提取寄生参数的 library，Calibre View Type 选择 masklayout 意味着直接以 layout 的摆放位置提取寄生参数，选择 Schematic 意味着以 schematic 的位置生成寄生参数，建议选择 schematic，这可以在后仿中如前仿一样直接查看 schematic 的电路仿真信息，Create Terminal &#x3D;&gt; if matching terminal exists on symbol，Device Placement &#x3D;&gt; Layout Location，设置完毕，点击 OK 。</li><li>提取寄生参数完毕后，如果有错误可能是 calibre 中部分线短路了，手动改正即可，可通过 calibre view type 更改类型为 masklayout 可以避免这种错误，但是后仿不能通过直接点击。</li><li>在 testbench 中新建 config view，将 config 中的 view to use 更改为提取的寄生参数 calibre，加入 calibre 提取出来的参数，同时 ADE L &#x3D;&gt; Setup &#x3D;&gt; Design 更改类型为 config，即可开始后仿。</li><li>仿真结束后，可以直接在 schematic 中查看信号线。</li></ol><p>生成 calibre 耗费时间过长，可以直接更改 calibre view type 为 masklayout，但是此种方法对于查看结果没那么方便。<br>或者直接在 pex 设置中，Output &#x3D;&gt; Netlist &#x3D;&gt; Format 更改为 SPECTRE 生成网表。</p><ol><li>该方法生成的网表不一定能直接用于 spectre 仿真，需要先将该网表的 pin 顺序更正。更改方法为，首先需要先用前仿电路跑一次仿真生成网表，然后在 simulation 这个文件夹中找到 input.scs 的网表，将该网表中的 pin 复制到后仿的网表中。</li><li>后仿生成的网表更改完毕，在 testbench 中新建 config view，将 config 中的 view to use 更改为 Specify SPICE Source File，同时选择后仿的网表即可，这就是用网表仿真，速度快，但是不方便查看信号，但是利于排除寄生电容，需要排除哪项将其注释即可。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;通过 Virtuoso 的 Layout XL &amp;#x3D;&amp;gt; Calibre &amp;#x3D;&amp;gt; Run PEX 进入 Calibre PEX，并将工艺厂提供的 xRC(Rule) 文件设置好 Calibre PEX。</summary>
    
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/categories/Semiconductor/"/>
    
    <category term="post-sim" scheme="http://shenguosai.github.io/categories/Semiconductor/post-sim/"/>
    
    <category term="EDA" scheme="http://shenguosai.github.io/categories/Semiconductor/EDA/"/>
    
    
    <category term="Calibre" scheme="http://shenguosai.github.io/tags/Calibre/"/>
    
  </entry>
  
  <entry>
    <title>在Windows11中找回照片查看器打开图片</title>
    <link href="http://shenguosai.github.io/2023/12/12/%E5%9C%A8Windows11%E4%B8%AD%E6%89%BE%E5%9B%9E%E7%85%A7%E7%89%87%E6%9F%A5%E7%9C%8B%E5%99%A8%E6%89%93%E5%BC%80%E5%9B%BE%E7%89%87/"/>
    <id>http://shenguosai.github.io/2023/12/12/%E5%9C%A8Windows11%E4%B8%AD%E6%89%BE%E5%9B%9E%E7%85%A7%E7%89%87%E6%9F%A5%E7%9C%8B%E5%99%A8%E6%89%93%E5%BC%80%E5%9B%BE%E7%89%87/</id>
    <published>2023-12-12T15:41:05.000Z</published>
    <updated>2023-12-12T16:06:21.443Z</updated>
    
    <content type="html"><![CDATA[<ol><li>使用快捷键<code>Win + R</code>打开运行窗口， 输入<code>regedit</code>命令回车打开注册表<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231212234749.png" alt="20231212234749"><span id="more"></span></li><li>找到<code>HKEY_LOCAL_MACHINE</code> -&gt; <code>SOFTWARE</code>-&gt;<code>Microsoft</code> -&gt; <code>Windows Photo Viewer</code> -&gt; <code>Capabilities</code> -&gt; <code>FileAssociations</code>，右键&#x3D;&gt;新建&#x3D;&gt;字符串值，名称填写<code>.jpg</code>，数值填写<code>PhotoViewer.FileAssoc.Tiff</code>，同理添加 <code>.png</code>  <code>.jpeg</code>，数值相同。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231212234917.png" alt="20231212234917"></li><li>添加之后就可以使用Windows照片查看器看图。<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231212235008.png" alt="20231212235008"></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;使用快捷键&lt;code&gt;Win + R&lt;/code&gt;打开运行窗口， 输入&lt;code&gt;regedit&lt;/code&gt;命令回车打开注册表&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231212234749.png&quot; alt=&quot;20231212234749&quot;&gt;</summary>
    
    
    
    <category term="Note" scheme="http://shenguosai.github.io/categories/Note/"/>
    
    <category term="Windows" scheme="http://shenguosai.github.io/categories/Note/Windows/"/>
    
    
  </entry>
  
  <entry>
    <title>smic工艺中带有ckt后缀的器件</title>
    <link href="http://shenguosai.github.io/2023/12/08/smic%E5%B7%A5%E8%89%BA%E4%B8%AD%E5%B8%A6%E6%9C%89ckt%E5%90%8E%E7%BC%80%E7%9A%84%E5%99%A8%E4%BB%B6/"/>
    <id>http://shenguosai.github.io/2023/12/08/smic%E5%B7%A5%E8%89%BA%E4%B8%AD%E5%B8%A6%E6%9C%89ckt%E5%90%8E%E7%BC%80%E7%9A%84%E5%99%A8%E4%BB%B6/</id>
    <published>2023-12-08T06:16:14.000Z</published>
    <updated>2024-01-10T07:20:43.247Z</updated>
    
    <content type="html"><![CDATA[<p>在SMIC的PDK中存在后面带ckt和不带ckt的PDK，其中不带ckt的器件模型是bsim4，而带ckt的器件模型是subckt。网上查询，subckt就是sub circuit，即子电路的意思。<br>查询并猜想如下:<br>不带ckt: 类理想器件，即只针对此种器件建模；<br>带ckt: 考虑其内部构造所产生的各种寄生成分，并且包含寄生器件参数随电路参数的变化</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在SMIC的PDK中存在后面带ckt和不带ckt的PDK，其中不带ckt的器件模型是bsim4，而带ckt的器件模型是subckt。网上查询，subckt就是sub circuit，即子电路的意思。&lt;br&gt;查询并猜想如下:&lt;br&gt;不带ckt: 类理想器件，即只针对此种器件建</summary>
      
    
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/categories/Semiconductor/"/>
    
    <category term="Process" scheme="http://shenguosai.github.io/categories/Semiconductor/Process/"/>
    
    
    <category term="工艺" scheme="http://shenguosai.github.io/tags/%E5%B7%A5%E8%89%BA/"/>
    
  </entry>
  
  <entry>
    <title>VIM学习笔记--状态行</title>
    <link href="http://shenguosai.github.io/2023/12/06/VIM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%8A%B6%E6%80%81%E8%A1%8C/"/>
    <id>http://shenguosai.github.io/2023/12/06/VIM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E7%8A%B6%E6%80%81%E8%A1%8C/</id>
    <published>2023-12-06T15:33:25.000Z</published>
    <updated>2023-12-12T15:54:28.260Z</updated>
    
    <content type="html"><![CDATA[<center>状态行参数列表</center><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>%(…%)</td><td>定义一个项目</td></tr><tr><td>%{n}*</td><td>%对其余的行使用高亮显示组<code>User n</code>，知道另一个<code>%n*</code>。数字<code>n</code> 必须从<code>1</code>到<code>9</code>。用<code>%*</code>或<code>%0*</code>可以恢复正常的高亮显示。</td></tr><tr><td>%&lt;</td><td>如果状态行过长，在何处换行。缺省是在开头。</td></tr><tr><td>%&#x3D;</td><td>左对齐和右对齐之间的分割点。</td></tr><tr><td>%</td><td>字符<code>%</code></td></tr><tr><td>%B</td><td>光标下字符的十六进制形式。</td></tr><tr><td>%F</td><td>缓冲区的文件完整路径。</td></tr><tr><td>%H</td><td>如果为帮助缓冲区则显示为<code>HLP</code>。</td></tr><tr><td>%L</td><td>缓冲区中的行数。</td></tr><tr><td>%M</td><td>如果缓冲区修改过则显示未<code>+</code>。</td></tr><tr><td>%N</td><td>打印机页号。</td></tr><tr><td>%O</td><td>以十六进制方式显示文件中的字符偏移。</td></tr><tr><td>%P</td><td>文件中光标前的<code>%</code>。</td></tr><tr><td>%R</td><td>如果缓冲区只读则为<code>RO</code>。</td></tr><tr><td>%V</td><td>列数。如果与<code>%c</code>相同则为空字符。</td></tr><tr><td>%W</td><td>如果窗口为预览窗口则为<code>PRV</code>。</td></tr><tr><td>%Y</td><td>缓冲区的文件类型，如 vim。</td></tr><tr><td>%a</td><td>如果编辑多行文本，这个字行串就是<code>(&#123;current&#125; of &#123;arguments&#125;)</code>，例如: <code>(5 of 18)</code>。如果在命令行中只有一行，这个字符串为空。</td></tr><tr><td>%b</td><td>光标下的字符的十进制表示形式。</td></tr><tr><td>%c</td><td>列号。</td></tr><tr><td>%f</td><td>缓冲区的文件路径。</td></tr><tr><td>%h</td><td>如果为帮助缓冲区显示为<code>[Help]</code>。</td></tr><tr><td>%l</td><td>行号。</td></tr><tr><td>%m</td><td>如果缓冲区已修改则表示为<code>[+]</code>。</td></tr><tr><td>%n</td><td>缓冲区号。</td></tr><tr><td>%o</td><td>在光标前的字符数(包括光标下的字符)。</td></tr><tr><td>%p</td><td>文件中所在行的百分比。</td></tr><tr><td>%r</td><td>如果缓冲区为只读则表示为<code>[RO]</code>。</td></tr><tr><td>%t</td><td>文件名(无路径)。</td></tr><tr><td>%v</td><td>虚列号。</td></tr><tr><td>%w</td><td>如果为预览窗口则显示为<code>[Preview]</code>。</td></tr><tr><td>%y</td><td>缓冲区的文件类型，如<code>[vim]</code>。</td></tr><tr><td>%{expr}</td><td>表达式的结果。</td></tr></tbody></table><span id="more"></span><p>例:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">set</span> statusline=%F%<span class="keyword">m</span>%r%h%<span class="keyword">w</span>\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%<span class="number">04</span><span class="keyword">l</span>,%<span class="number">04</span>v][%<span class="keyword">p</span>%%]\ [LEN=%L]</span><br></pre></td></tr></table></figure><p>定义显示颜色</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">set</span> statusline=%<span class="number">2</span>*%n%<span class="keyword">m</span>%r%h%<span class="keyword">w</span>%*\ %F\ %<span class="number">1</span>*[FORMAT=%<span class="number">2</span>*%&#123;&amp;ff&#125;:%&#123;&amp;fenc!=<span class="string">&#x27;&#x27;</span>?&amp;fenc:&amp;enc&#125;%<span class="number">1</span>*]\ [TYPE=%<span class="number">2</span>*%Y%<span class="number">1</span>*]\ [COL=%<span class="number">2</span>*%<span class="number">03</span>v%<span class="number">1</span>*]\ [ROW=%<span class="number">2</span>*%<span class="number">03</span><span class="keyword">l</span>%<span class="number">1</span>*/%<span class="number">3</span>*%L(%<span class="keyword">p</span>%%)%<span class="number">1</span>*]\</span><br></pre></td></tr></table></figure><p>自定义高亮显示颜色</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">hi</span> User1 guifg=gray</span><br><span class="line"><span class="keyword">hi</span> User2 guifg=<span class="keyword">red</span></span><br><span class="line"><span class="keyword">hi</span> User3 guifg=white</span><br></pre></td></tr></table></figure><p>还可以通过在<code>.vimrc</code>文件中包括以下命令，使状态行根据状态的不同，显示不同的颜色。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function!</span> <span class="title">InsertStatuslineColor</span><span class="params">(mode)</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">a:mode</span> == <span class="string">&#x27;i&#x27;</span></span><br><span class="line">  <span class="keyword">hi</span> statusline guibg=peru</span><br><span class="line"><span class="keyword">elseif</span> <span class="variable">a:mode</span> == <span class="string">&#x27;r&#x27;</span></span><br><span class="line">  <span class="keyword">hi</span> statusline guibg=blue</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">hi</span> statusline guibg=black</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"><span class="keyword">au</span> InsertEnter * <span class="keyword">call</span> InsertStatuslineColor(<span class="variable">v:insertmode</span>)</span><br><span class="line"><span class="keyword">au</span> InsertLeave * <span class="keyword">hi</span> statusline guibg=orange guifg=white</span><br><span class="line"><span class="keyword">hi</span> statusline guibg=black</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;center&gt;状态行参数列表&lt;/center&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;%(…%)&lt;/td&gt;
&lt;td&gt;定义一个项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%{n}*&lt;/td&gt;
&lt;td&gt;%对其余的行使用高亮显示组&lt;code&gt;User n&lt;/code&gt;，知道另一个&lt;code&gt;%n*&lt;/code&gt;。数字&lt;code&gt;n&lt;/code&gt; 必须从&lt;code&gt;1&lt;/code&gt;到&lt;code&gt;9&lt;/code&gt;。用&lt;code&gt;%*&lt;/code&gt;或&lt;code&gt;%0*&lt;/code&gt;可以恢复正常的高亮显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&amp;lt;&lt;/td&gt;
&lt;td&gt;如果状态行过长，在何处换行。缺省是在开头。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&amp;#x3D;&lt;/td&gt;
&lt;td&gt;左对齐和右对齐之间的分割点。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;字符&lt;code&gt;%&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%B&lt;/td&gt;
&lt;td&gt;光标下字符的十六进制形式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%F&lt;/td&gt;
&lt;td&gt;缓冲区的文件完整路径。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%H&lt;/td&gt;
&lt;td&gt;如果为帮助缓冲区则显示为&lt;code&gt;HLP&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%L&lt;/td&gt;
&lt;td&gt;缓冲区中的行数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%M&lt;/td&gt;
&lt;td&gt;如果缓冲区修改过则显示未&lt;code&gt;+&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%N&lt;/td&gt;
&lt;td&gt;打印机页号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%O&lt;/td&gt;
&lt;td&gt;以十六进制方式显示文件中的字符偏移。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%P&lt;/td&gt;
&lt;td&gt;文件中光标前的&lt;code&gt;%&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%R&lt;/td&gt;
&lt;td&gt;如果缓冲区只读则为&lt;code&gt;RO&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%V&lt;/td&gt;
&lt;td&gt;列数。如果与&lt;code&gt;%c&lt;/code&gt;相同则为空字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%W&lt;/td&gt;
&lt;td&gt;如果窗口为预览窗口则为&lt;code&gt;PRV&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Y&lt;/td&gt;
&lt;td&gt;缓冲区的文件类型，如 vim。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%a&lt;/td&gt;
&lt;td&gt;如果编辑多行文本，这个字行串就是&lt;code&gt;(&amp;#123;current&amp;#125; of &amp;#123;arguments&amp;#125;)&lt;/code&gt;，例如: &lt;code&gt;(5 of 18)&lt;/code&gt;。如果在命令行中只有一行，这个字符串为空。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%b&lt;/td&gt;
&lt;td&gt;光标下的字符的十进制表示形式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;列号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;缓冲区的文件路径。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%h&lt;/td&gt;
&lt;td&gt;如果为帮助缓冲区显示为&lt;code&gt;[Help]&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%l&lt;/td&gt;
&lt;td&gt;行号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%m&lt;/td&gt;
&lt;td&gt;如果缓冲区已修改则表示为&lt;code&gt;[+]&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%n&lt;/td&gt;
&lt;td&gt;缓冲区号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;在光标前的字符数(包括光标下的字符)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;
&lt;td&gt;文件中所在行的百分比。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%r&lt;/td&gt;
&lt;td&gt;如果缓冲区为只读则表示为&lt;code&gt;[RO]&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%t&lt;/td&gt;
&lt;td&gt;文件名(无路径)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%v&lt;/td&gt;
&lt;td&gt;虚列号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%w&lt;/td&gt;
&lt;td&gt;如果为预览窗口则显示为&lt;code&gt;[Preview]&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%y&lt;/td&gt;
&lt;td&gt;缓冲区的文件类型，如&lt;code&gt;[vim]&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%{expr}&lt;/td&gt;
&lt;td&gt;表达式的结果。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="Note" scheme="http://shenguosai.github.io/categories/Note/"/>
    
    <category term="vim" scheme="http://shenguosai.github.io/categories/Note/vim/"/>
    
    
  </entry>
  
  <entry>
    <title>Adobe Acrobat XI Pro 11.0.23下载及激活</title>
    <link href="http://shenguosai.github.io/2023/12/05/Adobe-Acrobat-XI-Pro-11-0-23%E4%B8%8B%E8%BD%BD%E5%8F%8A%E6%BF%80%E6%B4%BB/"/>
    <id>http://shenguosai.github.io/2023/12/05/Adobe-Acrobat-XI-Pro-11-0-23%E4%B8%8B%E8%BD%BD%E5%8F%8A%E6%BF%80%E6%B4%BB/</id>
    <published>2023-12-05T05:33:35.000Z</published>
    <updated>2024-01-05T02:01:11.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Adobe Acrobat XI Pro 是一个著名的功能性程序，用于舒适地处理各种 PDF 文件，它将为您提供以专业水平创建和编辑高质量 PDF 文件的机会。 Acrobat XI Pro 包含高级功能，可以轻松打开许多其他管理功能，具有用户友好的界面。在创建 PDF 文件并在以后进行处理时，Adobe Acrobat 变得绝对不可替代。</p><p>Adobe Acrobat XI Pro 包含提供额外互操作性的智能功能。简单，快速，专业。将包括文档，电子表格，电子邮件，图像，视频，3D图形和地图在内的多种内容组合到一个压缩的结构化PDF包中。在查看共享的文档时进行协作。创建交互式表格并快速收集数据。保护和控制有价值的信息。</p><p>体验 Adobe®Acrobat®Dynamic PDF 技术创建和共享下一代 PDF 的强大功能。通过电子文档审阅，可填写的 PDF 表单和 Acrobat 服务与同行，客户和合作伙伴进行协作。将多种文件类型组合成一个无缝组织的专业质量 PDF 包。设置密码和权限以保护文档。内容丰富，使您的文档更具吸引力。</p><p>Adobe Acrobat XI Pro 是理想的工具，可轻松，快速，专业地处理各种 PDF 文件。</p><span id="more"></span><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><ul><li>1.3GHz或更快的处理器</li><li>Microsoft Windows XP，Service Pack 3 (32位) 或 Service Pack 2 (64位)；<br>Windows Server 2003 R2 (32位和64位)；<br>Windows Server 2008 或 2008 R2 (32位和64位)；<br>Windows 7 (32位何64位)；<br>Windows 8 (32位和64位)。</li><li>512 MB RAM (推荐1GB)</li><li>1.85 GB 可用硬盘空间</li><li>1024 x 768 屏幕分辨率</li><li>视频硬件加速(可选)</li></ul><p><b> 注意 </b>: 对于64位版本的Windows Server 2003 R2 和 Windows XP (带Service Pack 2)，需要 <code>Microsoft Update KB930627</code></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="magnet:?xt=urn:btih:2A0D5EE6129F2C24A2AC94A4C0ADC880CE99A1A0&tr=http%3A%2F%2Fbt4.t-ru.org%2Fann%3Fmagnet&dn=Adobe%20Acrobat%20XI%20Pro%20v11.0.23%20Final%20%5B2017%2CMl%5CRus%5D">Adobe Acrobat XI Pro v11.0.23 Final MI</a><br>　　　　|–adobe.snr.patch.v2.0-painter<br>　　　　|–amtemu.v0.9.2.win-painter<br>　　　　|–Serial_Keygen X-FORCE<br>　　　　|–2A0D5EE6129F2C24A2AC94A4C0ADC880CE99A1A0.torrent<br>　　　　|–About the program.txt<br>　　　　|–AcrobatPro_11_Web_WWMUI.exe<br>　　　　|–AcrobatUpd11023.msp<br>　　　　|–Лечение.txt</p><h2 id="安装及激活"><a href="#安装及激活" class="headerlink" title="安装及激活"></a>安装及激活</h2><ol><li>断开互联网连接。</li><li>双击运行安装程序<code>AcrobatPro_11_Web_WWMUI.exe</code>，在安装程序窗口选择<code>使用试用版或订阅</code>。</li><li>安装程序(此时安装好的 Adobe Acrobat XI 为 11.0.0版本，可直接转向 5 )。</li><li>双击运行安装文件<code>AcrobatUpd11023.msp</code>，重新启动计算机(如有需要)。此程序安装好后版本升至 11.0.23。</li><li>激活:<ul><li>方式一:使用adobe.snr.patch.v2.0-painter<ul><li>将修补程序<code>adobe.snr.patch.v2.0-painter.exe</code>复制到包含已安装程序的文件夹中(一般情况为:<code>C:\Program Files (x86)\Adobe\Acrobat 11.0\Acrobat</code>)，然后以管理员身份运行。</li><li>从下拉菜单中选择<code>Adobe Acrobat XI Pro(32-bit)</code>，然后点击<code>Patch</code>。</li></ul></li><li>方式二:使用amtemu.v0.9.2.win-painter<ul><li>将修补程序<code>amtemu.v0.9.2-painter.exe</code>复制到包含已安装程序的文件夹中(一般情况为:<code>C:\Program Files (x86)\Adobe\Acrobat 11.0\Acrobat</code>)，然后以管理员身份运行。</li><li>从下拉菜单中选择<code>Adobe Acrobat XI</code>，然后单击<code>Install</code>。</li><li>如果需要，在打开的窗口中转到软件安装位置，然后选择<code>amtlib.dll</code>文件，等待软件被激活。</li></ul></li></ul></li><li>激活完成，打开网络连接。</li></ol><h2 id="关于闪退原因及解决办法"><a href="#关于闪退原因及解决办法" class="headerlink" title="关于闪退原因及解决办法"></a>关于闪退原因及解决办法</h2><p>在上述安装及激活完成后，Adobe Acrobat XI Pro会出现闪退问题，原因是联机版权校验问题，更多深层次的原理这里不做过多讨论，本文主要讲解如何避免闪退。既然原因找到了，就可以从以下方面着手进行处理：阻拦该软件进行联网校验即可。办法很多，这里提供两种稍微容易操作的方法进行说明。</p><ol><li>域名欺骗，添加伪造的host解析条目<br>Acrobat 校验的域名为: acroipm.adobe.com，因此只要将该域名定位到一个假的 IP 地址即可。最简单的办法就是在<code>C:\Windows\System32\drivers\etc\host</code>文件中添加条目:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 acroipm.adobe.com</span><br></pre></td></tr></table></figure><b>注意</b>&gt;: 编辑host需要管理员权限</li><li>阻断Acrobat主程序联网<br>这里使用windows自带防火墙进行阻断。具体操作步骤如下:<br><code>开始 -&gt; 设置 -&gt; 更新与安全</code>，打开更新与安全设置，点击 <code>Windows 安全中心</code>，点击打开<code>防火墙和网络保护</code>界面，点击<code>高级设置</code>，在<code>高级设置</code>界面中选择<code>出站规则</code>然后点击<code>新建规则</code>创建出站规则，在弹出的新建规则向导界面中，选择要创建的规则类型为<code>程序</code>，然后点击<code>下一步</code>选择指定的程序路径<code>C:\Program Files (x86)\Adobe\Acrobat 11.0\Acrobat\Acrobat.exe</code>，然后点击<code>下一步</code>，在操作类型界面选择<code>阻止连接</code>，点击<code>下一步</code>，在选择何时应用规则的界面选择所有的场景并点击<code>下一步</code>，在命名界面中填写<code>名称</code>及<code>描述</code>，然后点击完成即可。<br><b>注意</b>: 本方法的前提是要保障 Windows Defender 防火墙对三个应用区域(域网络、专用网络、公用网络)都已经启用。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Adobe Acrobat XI Pro 是一个著名的功能性程序，用于舒适地处理各种 PDF 文件，它将为您提供以专业水平创建和编辑高质量 PDF 文件的机会。 Acrobat XI Pro 包含高级功能，可以轻松打开许多其他管理功能，具有用户友好的界面。在创建 PDF 文件并在以后进行处理时，Adobe Acrobat 变得绝对不可替代。&lt;/p&gt;
&lt;p&gt;Adobe Acrobat XI Pro 包含提供额外互操作性的智能功能。简单，快速，专业。将包括文档，电子表格，电子邮件，图像，视频，3D图形和地图在内的多种内容组合到一个压缩的结构化PDF包中。在查看共享的文档时进行协作。创建交互式表格并快速收集数据。保护和控制有价值的信息。&lt;/p&gt;
&lt;p&gt;体验 Adobe®Acrobat®Dynamic PDF 技术创建和共享下一代 PDF 的强大功能。通过电子文档审阅，可填写的 PDF 表单和 Acrobat 服务与同行，客户和合作伙伴进行协作。将多种文件类型组合成一个无缝组织的专业质量 PDF 包。设置密码和权限以保护文档。内容丰富，使您的文档更具吸引力。&lt;/p&gt;
&lt;p&gt;Adobe Acrobat XI Pro 是理想的工具，可轻松，快速，专业地处理各种 PDF 文件。&lt;/p&gt;</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    <category term="Win-Software" scheme="http://shenguosai.github.io/categories/Tutorial/Win-Software/"/>
    
    <category term="Adobe" scheme="http://shenguosai.github.io/categories/Tutorial/Win-Software/Adobe/"/>
    
    
  </entry>
  
  <entry>
    <title>使用命令行抽取寄生(Calibre)</title>
    <link href="http://shenguosai.github.io/2023/12/03/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F-Calibre/"/>
    <id>http://shenguosai.github.io/2023/12/03/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F-Calibre/</id>
    <published>2023-12-03T15:12:02.000Z</published>
    <updated>2023-12-03T15:16:48.215Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% calibre -lvs -hier -auto rule.file</span><br><span class="line">% calibre -xrc -pdb -rcc -xcell cell.file rule.file</span><br><span class="line">% calibre -xrc -fmt -all -xcell cell.file rule.file</span><br></pre></td></tr></table></figure><p>rule.file 中应指定layout(gds)的路径及文件名<br><a href="https://www.engr.colostate.edu/ECE571/class_materials/xcalibre_instructions.htm">Instructions for Extracting Parasitics for your Layout using xCalibre Tool</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/categories/Semiconductor/"/>
    
    <category term="post-sim" scheme="http://shenguosai.github.io/categories/Semiconductor/post-sim/"/>
    
    <category term="EDA" scheme="http://shenguosai.github.io/categories/Semiconductor/EDA/"/>
    
    
  </entry>
  
  <entry>
    <title>抽取寄生时屏蔽掉在spice model中已经存在的寄生电容</title>
    <link href="http://shenguosai.github.io/2023/12/03/%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F%E6%97%B6%E5%B1%8F%E8%94%BD%E6%8E%89%E5%9C%A8spice-model%E4%B8%AD%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E5%AF%84%E7%94%9F%E7%94%B5%E5%AE%B9/"/>
    <id>http://shenguosai.github.io/2023/12/03/%E6%8A%BD%E5%8F%96%E5%AF%84%E7%94%9F%E6%97%B6%E5%B1%8F%E8%94%BD%E6%8E%89%E5%9C%A8spice-model%E4%B8%AD%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E5%AF%84%E7%94%9F%E7%94%B5%E5%AE%B9/</id>
    <published>2023-12-03T14:14:43.000Z</published>
    <updated>2023-12-18T05:49:28.082Z</updated>
    
    <content type="html"><![CDATA[<p>在提取寄生参数时，除了需要关注金属导体的寄生电容外，还需要分析mos器件的节点寄生参数提取是否准确。<br>下面是一个典型的 nmos 4端器件:</p><p>该mos管的4个节点 D, G, S, B 的寄生电容是否准确呢？<br>首先用calibre xrc提取一下其寄生参数，结果如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cc_1 S G 3.32511f</span><br><span class="line">cc_2 S D 6.73464e-19</span><br><span class="line">cc_3 S B 12.7622f</span><br><span class="line">cc_4 G D 3.32511f</span><br><span class="line">cc_5 G B 1.16212f</span><br><span class="line">cc_6 D B 12.7506f</span><br></pre></td></tr></table></figure><span id="more"></span><p>上述寄生电容分为4类:</p><ul><li>Gate 到 Source&#x2F;Drain 电容</li><li>Source&#x2F;Drain 到 Bulk 电容</li><li>Gate 到 Bulk 电容</li><li>Source 到 Drain 电容</li></ul><p>由于在spice model中一般会自动把上述4类电容考虑，如果寄生参数提取中再提取一遍，就会发生重复提取。<br>因此，需要把这4类电容屏蔽，屏蔽方法如下:</p><ul><li>屏蔽 Gate 到 Source&#x2F;Drain 电容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPACITANCE ALL poly nsd</span><br><span class="line">PEX IGNORE CAPACITANCE ALL poly psd</span><br></pre></td></tr></table></figure></li><li>屏蔽 Gate 到 Bulk 电容，其中 ALLGATE 是 mark layer<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPATANCE DEVICE INTRINSIC poly ALLGATE</span><br></pre></td></tr></table></figure></li></ul><p>设置上述3个参数后，提取结果如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cc_1 S D 0.00129446f</span><br><span class="line">cc_2 S B 12.7622f</span><br><span class="line">cc_3 G B 0.211916f</span><br><span class="line">cc_4 D B 12.7506f</span><br></pre></td></tr></table></figure><p>可以看到，Gate 到 Source&#x2F;Drain 的电容没有了，被屏蔽掉了。Gate 到 Bulk 的电容比刚才的值小了，说明在mos管区域的电容被屏蔽了，只剩下 Gate 露头的电容了，这个符合预期。<br>但是，Source&#x2F;Drain 到 Bulk 的电容没有屏蔽掉，该如何设置呢？<br>首先看一下再原始的工艺文件定义中，有如下语句:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">diffusion = diff &#123;</span><br><span class="line">    thickness = 0.004</span><br><span class="line">    min_width = 0.15</span><br><span class="line">    min_spacing = 0.18</span><br><span class="line">    resistivity = 10</span><br><span class="line">    src_drn_layers = &#123;nsd_psd_&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意 diffusion, src_drn_layers是关键字，nsd_psd_ 是两个 process layer。<br>calibre命令文件中原来有如下语句:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PEX MAP diff NTAP PTAP nsd psd</span><br></pre></td></tr></table></figure><p>它把 nsd, psd 映射到了diff层，但是没有告诉工具映射到 nsd_psd_层。<br>如果修改该语句如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PEX MAP diff NTAP PTAP</span><br><span class="line">PEX MAP nsd_nsd_</span><br><span class="line">PEX MAP psd_psd_</span><br></pre></td></tr></table></figure><p>当calibre xrc识别到该语句后，自动会把nsd之间的相互电容屏蔽掉，也自动会把 nsd&#x2F;psd 到衬底的电容屏蔽掉。<br>屏蔽后提取结果如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cc_1 S B 0.0777512f</span><br><span class="line">cc_2 G B 0.211916f</span><br><span class="line">cc_3 D B 0.0540989f</span><br></pre></td></tr></table></figure><p>以上3个电容都是连接到mos管的金属之间的耦合电容了，电容值很小，不是器件本身的电容，符合预期。</p><hr><p>如果用户在原始的工艺定义中没有用 diffusion 的关键字，而是用 conductor 的关键字，如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conductor = diff &#123;</span><br><span class="line">    thickness = 0.004</span><br><span class="line">    min_width = 0.15</span><br><span class="line">    min_spacing = 0.18</span><br><span class="line">    resistivity = 10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则用户需要增加额外的语句来屏蔽 source 到 drain，source 到衬底的寄生电容。</p><ul><li>屏蔽 Gate 到 Source&#x2F;Drain 的电容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPATANCE ALL poly nsd</span><br><span class="line">PEX IGNORE CAPATANCE ALL poly psd</span><br></pre></td></tr></table></figure></li><li>屏蔽 Gate 到 Bulk<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPACITANCE DEVICE INTRINSIC poly ALLGATE</span><br></pre></td></tr></table></figure></li><li>屏蔽 Source&#x2F;Drain 到 Bulk<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPACITANCE DEVICE INTRINSIC nsd ALLGATE</span><br></pre></td></tr></table></figure></li><li>屏蔽 Source 到 Drain<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PEX IGNORE CAPACITANCE DEVICE nsd nsd ALLGATE</span><br></pre></td></tr></table></figure>可以看到，这种写法比较繁琐，不如前面的方法简洁。</li></ul><p>总结，屏蔽掉 spice model 中的寄生参数最简单的方法是:在工艺文件定义中用 diffusion 的关键字，用 src_drn_layers 指定具体的layer名称。然后在提取命令文件中，把 gate 的电容通过 PEX IGNORE 语句来屏蔽掉，不需要写 source, drain 的屏蔽语句。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;在提取寄生参数时，除了需要关注金属导体的寄生电容外，还需要分析mos器件的节点寄生参数提取是否准确。&lt;br&gt;下面是一个典型的 nmos 4端器件:&lt;/p&gt;
&lt;p&gt;该mos管的4个节点 D, G, S, B 的寄生电容是否准确呢？&lt;br&gt;首先用calibre xrc提取一下其寄生参数，结果如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cc_1 S G 3.32511f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_2 S D 6.73464e-19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_3 S B 12.7622f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_4 G D 3.32511f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_5 G B 1.16212f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_6 D B 12.7506f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Semiconductor" scheme="http://shenguosai.github.io/categories/Semiconductor/"/>
    
    <category term="post-sim" scheme="http://shenguosai.github.io/categories/Semiconductor/post-sim/"/>
    
    <category term="EDA" scheme="http://shenguosai.github.io/categories/Semiconductor/EDA/"/>
    
    
    <category term="Calibre" scheme="http://shenguosai.github.io/tags/Calibre/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text (Build 4169) 注册方法</title>
    <link href="http://shenguosai.github.io/2023/12/03/Sublime-Text-Build-4169-%E6%B3%A8%E5%86%8C%E6%96%B9%E6%B3%95/"/>
    <id>http://shenguosai.github.io/2023/12/03/Sublime-Text-Build-4169-%E6%B3%A8%E5%86%8C%E6%96%B9%E6%B3%95/</id>
    <published>2023-12-02T16:37:03.000Z</published>
    <updated>2023-12-02T17:03:47.810Z</updated>
    
    <content type="html"><![CDATA[<p>截止2023年12月2日，最新版本是<a href="https://www.sublimetext.com/">Sublime Text 4 (Build 4169)</a>。<br>注册方法如下:</p><ul><li>安装软件:<ul><li>去官方网站下载并安装，<a href="https://www.sublimetext.com/">Sublime Text - Text Editing, Done Right</a></li></ul></li><li>修改sublime的执行文件:<ul><li>使用16进制编辑器或打开<a href="https://hexed.it/">https://hexed.it</a></li><li>点击“打开文件”打开 Sublime Text 安装目录下的 sublime_text.exe</li><li>在右边的“搜索”中输入<code>807805000f94c1</code>并按回车键</li><li>将搜索方案中的“启用替换”选中，在“替换为”中输入<code>c64005014885c9</code>即可</li><li>点击“另存为”，保存修改后的文件到本地，将文件名设定为 sublime_text.exe</li><li>进入安装目录，备份原 sublime_text.exe 文件(如修改为 sublime_text_bak20231202.exe )</li><li>将修改后刚刚保存到本地的 sublime_text.exe 复制到原 Sublime Text 4 的安装目录中</li></ul></li></ul><span id="more"></span><p><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231203005935.png" alt="20231203005935"></p><p>如此便成功激活了，可以发现原来标题栏中的 “Unregistered” 变为了 “ADMIN”<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231203010151.png" alt="20231203010151"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;截止2023年12月2日，最新版本是&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text 4 (Build 4169)&lt;/a&gt;。&lt;br&gt;注册方法如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装软件:&lt;ul&gt;
&lt;li&gt;去官方网站下载并安装，&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text - Text Editing, Done Right&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修改sublime的执行文件:&lt;ul&gt;
&lt;li&gt;使用16进制编辑器或打开&lt;a href=&quot;https://hexed.it/&quot;&gt;https://hexed.it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;点击“打开文件”打开 Sublime Text 安装目录下的 sublime_text.exe&lt;/li&gt;
&lt;li&gt;在右边的“搜索”中输入&lt;code&gt;807805000f94c1&lt;/code&gt;并按回车键&lt;/li&gt;
&lt;li&gt;将搜索方案中的“启用替换”选中，在“替换为”中输入&lt;code&gt;c64005014885c9&lt;/code&gt;即可&lt;/li&gt;
&lt;li&gt;点击“另存为”，保存修改后的文件到本地，将文件名设定为 sublime_text.exe&lt;/li&gt;
&lt;li&gt;进入安装目录，备份原 sublime_text.exe 文件(如修改为 sublime_text_bak20231202.exe )&lt;/li&gt;
&lt;li&gt;将修改后刚刚保存到本地的 sublime_text.exe 复制到原 Sublime Text 4 的安装目录中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
    <category term="software" scheme="http://shenguosai.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>英语--肯定句变否定句</title>
    <link href="http://shenguosai.github.io/2023/12/01/%E8%8B%B1%E8%AF%AD-%E8%82%AF%E5%AE%9A%E5%8F%A5%E5%8F%98%E5%90%A6%E5%AE%9A%E5%8F%A5/"/>
    <id>http://shenguosai.github.io/2023/12/01/%E8%8B%B1%E8%AF%AD-%E8%82%AF%E5%AE%9A%E5%8F%A5%E5%8F%98%E5%90%A6%E5%AE%9A%E5%8F%A5/</id>
    <published>2023-12-01T00:50:58.000Z</published>
    <updated>2023-12-03T12:25:30.096Z</updated>
    
    <content type="html"><![CDATA[<h3 id="肯定句变否定句规则"><a href="#肯定句变否定句规则" class="headerlink" title="肯定句变否定句规则:"></a>肯定句变否定句规则:</h3><h4 id="一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。"><a href="#一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。" class="headerlink" title="一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。"></a>一、<font color=red>有</font>be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。</h4><p>例如:</p><table><thead><tr><th><center>肯定句</center></th><th><center>否定句</center></th></tr></thead><tbody><tr><td>I am a student.</td><td>I am not a student.</td></tr><tr><td>Amy is a good girl.</td><td>Amy <u>is not</u><em><u><font color=red>(isn&#39;t)</font></u></em> a good girl.</td></tr><tr><td>These flowers are very beautiful.</td><td>These flowers <u>are not</u><em><u><font color=red>(aren&#39;t)</font></u></em> very beautiful.</td></tr><tr><td>I can swim.</td><td>I <u>can not</u><em><u><font color=red>(can&#39;t)</font></u></em> swim.</td></tr><tr><td>There are some books on the table.</td><td>There <u>are not</u><em><u><font color=red>(aren&#39;t)</font></u></em> any books on the table.</td></tr><tr><td>Jack is a doctor.</td><td>Jack <u>is not</u><em><u><font color=red>(isn&#39;t)</font></u></em> a doctor.</td></tr><tr><td>I was a student ten years ago.</td><td>I <u>was not</u><em><u><font color=red>(wasn&#39;t)</font></u></em> a student ten years ago.</td></tr></tbody></table><p><b>注:&ensp;(1) some、and用于肯定句中，any、or用于否定句中；</b><br><b>　 &ensp;(2) was是is的过去式，were是are的过去式。</b></p><span id="more"></span><h3 id="二、没有be动词-am、is、are-和情态动词（can、could、may、must、should、will、would等）的，在动词前面加don-t，doesn-t-一般现在时第三人称单数-，didn-t-一般过去时-，动词恢复成原形，some变any，and变or，too变either，其他的照抄。"><a href="#二、没有be动词-am、is、are-和情态动词（can、could、may、must、should、will、would等）的，在动词前面加don-t，doesn-t-一般现在时第三人称单数-，didn-t-一般过去时-，动词恢复成原形，some变any，and变or，too变either，其他的照抄。" class="headerlink" title="二、没有be动词(am、is、are)和情态动词（can、could、may、must、should、will、would等）的，在动词前面加don&#39;t，doesn&#39;t(一般现在时第三人称单数)，didn&#39;t(一般过去时)，动词恢复成原形，some变any，and变or，too变either，其他的照抄。"></a>二、<font color=red>没有</font>be动词(am、is、are)和情态动词（can、could、may、must、should、will、would等）的，在动词前面加don&#39;t，doesn&#39;t(一般现在时第三人称单数)，didn&#39;t(一般过去时)，动词恢复成原形，some变any，and变or，too变either，其他的照抄。</h3><p>例如:</p><table><thead><tr><th><center>肯定句</center></th><th><center>否定句</center></th></tr></thead><tbody><tr><td>I like math.</td><td>I <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> like math.</td></tr><tr><td>Jack like math, too.</td><td>Jack <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> like math, either.</td></tr><tr><td>They like bananas and apples.</td><td>They <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> like bananas or apples.</td></tr><tr><td>Lily gets up at six every morning.</td><td>Lily <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> get up at six every morning.</td></tr><tr><td>His father likes playing football.</td><td>His father <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> like playing football.</td></tr><tr><td>I went fishing yesterday.</td><td>I <u>did not</u><em><u><font color=red>(didn&#39;t)</font></u></em> go fishing yesterday.</td></tr></tbody></table><p><b>注:&ensp;(1) 当句子是一般过去时态时，在动词前面加didn&#39;t,动词恢复成原形；</b><br><b>　 &ensp;(2) 当句子是一般现在时态，且主语是第三人称单数时，在动词前加doesn&#39;t，动词恢复成原形；</b><br><b>　 &ensp;(3) 当句子是一般现在时态，且主语不是第三人称单数时，在动词前加don&#39;t。</b></p><h3 id="三、肯定句变否定句专项练习。"><a href="#三、肯定句变否定句专项练习。" class="headerlink" title="三、肯定句变否定句专项练习。"></a>三、肯定句变否定句专项练习。</h3><style>    table th:first-of-type {        width: 50%    }    table th:nth-of-type(2) {        width: 50%    }</style><table><thead><tr><th><center>肯定句</center></th><th><center>否定句</center></th></tr></thead><tbody><tr><td>He is my father.</td><td></td></tr><tr><td>This is a cat.</td><td></td></tr><tr><td>These are his books.</td><td></td></tr><tr><td>David can swim.</td><td></td></tr><tr><td>Stand up.</td><td></td></tr><tr><td>There are some books and two pencils on the desk.</td><td></td></tr><tr><td>We come from Shandong.</td><td></td></tr><tr><td>Milli has breakfast at 7:30 in the morning.</td><td></td></tr><tr><td>My parents like watching TV at night.</td><td></td></tr><tr><td>I often play basketball with my friends.</td><td></td></tr><tr><td>His brother likes swinmming and running.</td><td></td></tr><tr><td>My mother and I visited my grandparents last week.</td><td></td></tr><tr><td>I have many friends here.</td><td></td></tr><tr><td>Tom went to Beijing last summer vacation.</td><td></td></tr><tr><td>Jack likes playing football after school, too.</td><td></td></tr></tbody></table><div class='spoiler collapsed'>    <div class='spoiler-title'>        Answers    </div>    <div class='spoiler-content'>        <table><thead><tr><th><center>肯定句</center></th><th><center>否定句</center></th></tr></thead><tbody><tr><td>He is my father.</td><td>He <u>is not</u><em><u><font color=red>(isn&#96;t)</font></u></em> my father.</td></tr><tr><td>This is a cat.</td><td>This <u>is not</u><em><u><font color=red>(isn&#39;t)</font></u></em> a cat.</td></tr><tr><td>These are his books.</td><td>These <u>are not</u><em><u><font color=red>(aren&#39;t)</font></u></em> his books</td></tr><tr><td>David can swim.</td><td>David <u>can not</u><em><u><font color=red>(can&#39;t)</font></u></em> swim.</td></tr><tr><td>Stand up.</td><td><u>Do not</u><em><u><font color=red>(Don&#39;t)</font></u></em> stand up.</td></tr><tr><td>There are some books and two pencils on the desk.</td><td>There <u>are not</u><em><u><font color=red>(aren&#39;t)</font></u></em> some books or two pencils on the desk.</td></tr><tr><td>We come from Shandong.</td><td>We <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> come from Shandong.</td></tr><tr><td>Milli has breakfast at 7:30 in the morning.</td><td>Milli <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> have breakfast at 7:30 in the morning.</td></tr><tr><td>My parents like watching TV at night.</td><td>My parents <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> like watching TV at night.</td></tr><tr><td>I often play basketball with my friends.</td><td>I <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> often play basketball with my friends.</td></tr><tr><td>His brother likes swinmming and running.</td><td>His brother <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> like swimming and running.</td></tr><tr><td>My mother and I visited my grandparents last week.</td><td>My mother and I <u>did not</u><em><u><font color=red>(didn&#39;t)</font></u></em> visit my grandparents last week.</td></tr><tr><td>I have many friends here.</td><td>I <u>do not</u><em><u><font color=red>(don&#39;t)</font></u></em> have many friends here.</td></tr><tr><td>Tom went to Beijing last summer vacation.</td><td>Tom <u>did not</u><em><u><font color=red>(didn&#39;t)</font></u></em> go to Beijing last summer vacation.</td></tr><tr><td>Jack likes playing football after school, too.</td><td>Jack <u>does not</u><em><u><font color=red>(doesn&#39;t)</font></u></em> like playing football after school, either.</td></tr></tbody></table>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;肯定句变否定句规则&quot;&gt;&lt;a href=&quot;#肯定句变否定句规则&quot; class=&quot;headerlink&quot; title=&quot;肯定句变否定句规则:&quot;&gt;&lt;/a&gt;肯定句变否定句规则:&lt;/h3&gt;&lt;h4 id=&quot;一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。&quot;&gt;&lt;a href=&quot;#一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。&quot; class=&quot;headerlink&quot; title=&quot;一、有be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。&quot;&gt;&lt;/a&gt;一、&lt;font color=red&gt;有&lt;/font&gt;be动词（am、is、are）和情态动词（can、could、may、must、should、will、would等）的，直接在be动词和情态动词后面加not，some变any，and变or，too变either，其他的照抄。&lt;/h4&gt;&lt;p&gt;例如:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;center&gt;肯定句&lt;/center&gt;&lt;/th&gt;
&lt;th&gt;&lt;center&gt;否定句&lt;/center&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;I am a student.&lt;/td&gt;
&lt;td&gt;I am not a student.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amy is a good girl.&lt;/td&gt;
&lt;td&gt;Amy &lt;u&gt;is not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(isn&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; a good girl.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;These flowers are very beautiful.&lt;/td&gt;
&lt;td&gt;These flowers &lt;u&gt;are not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(aren&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; very beautiful.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I can swim.&lt;/td&gt;
&lt;td&gt;I &lt;u&gt;can not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(can&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; swim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;There are some books on the table.&lt;/td&gt;
&lt;td&gt;There &lt;u&gt;are not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(aren&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; any books on the table.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jack is a doctor.&lt;/td&gt;
&lt;td&gt;Jack &lt;u&gt;is not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(isn&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; a doctor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I was a student ten years ago.&lt;/td&gt;
&lt;td&gt;I &lt;u&gt;was not&lt;/u&gt;&lt;em&gt;&lt;u&gt;&lt;font color=red&gt;(wasn&amp;#39;t)&lt;/font&gt;&lt;/u&gt;&lt;/em&gt; a student ten years ago.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;b&gt;注:&amp;ensp;(1) some、and用于肯定句中，any、or用于否定句中；&lt;/b&gt;&lt;br&gt;&lt;b&gt;　 &amp;ensp;(2) was是is的过去式，were是are的过去式。&lt;/b&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Education" scheme="http://shenguosai.github.io/categories/Education/"/>
    
    
    <category term="Children" scheme="http://shenguosai.github.io/tags/Children/"/>
    
  </entry>
  
  <entry>
    <title>古诗词欣赏—20231127</title>
    <link href="http://shenguosai.github.io/2023/11/27/%E5%8F%A4%E8%AF%97%E8%AF%8D%E6%AC%A3%E8%B5%8F%E2%80%9420231127/"/>
    <id>http://shenguosai.github.io/2023/11/27/%E5%8F%A4%E8%AF%97%E8%AF%8D%E6%AC%A3%E8%B5%8F%E2%80%9420231127/</id>
    <published>2023-11-27T06:43:08.000Z</published>
    <updated>2023-12-01T03:47:07.576Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>表达随遇而安：<br>时光清浅处，一步一安然。</p></li><li><p>表达岁月静好：<br>山野万万里，余生路漫。日暮酒杯淡饭，一半一半</p></li><li><p>夸心上人美好：<br>山有扶苏，隰（xí）有荷华。</p></li><li><p>想说坚韧不拔：<br>冬青树上挂凌霄，岁晏花凋树不凋。</p></li><li><p>对于好朋友：<br>半师半友半知己，半慕半尊半倾心。</p></li><li><p>乐观面对上火：<br>时间煮雨，岁月缝花。以欢喜心，慢度日常。</p></li><li><p>琐碎诗意交织：<br>手执烟火以谋生，心怀诗意以谋爱。</p></li><li><p>表达对另一半的爱意：<br>日出有盼，日落有念。心有所期，忙而不茫。</p><span id="more"></span></li><li><p>古人对万物的雅称：</p><ul><li>太阳：扶光</li><li>月亮：望舒</li><li>梅花：疏影</li><li>风筝：纸鸢</li><li>圆月：冰轮</li><li>茄子：落苏</li><li>小草：柔甲</li><li>天河：星汉</li><li>天空：碧落</li><li>大地：坤灵</li><li>雪花：寒酥</li><li>风　：扶摇</li><li>云　：纤凝</li><li>雨　：灵泽</li><li>茶　：不夜侯</li><li>酒　：忘忧君</li></ul></li><li><p>你更喜欢谁的相思</p><ul><li>纳兰性德：人生若只如初见，何事秋风悲画扇。</li><li>　李清照：花自飘零水自流，一种相思，两处闲愁。</li><li>　白居易：群埋泉下泥销骨，我寄人间雪满头。</li><li>　辛弃疾：若教眼底无离恨，不信人间有白头。</li><li>　温庭筠：玲珑骰子安红豆，入骨相思知不知。</li><li>　李商隐：直道相思了无益，未妨惆怅是清狂。</li><li>　王国维：最是人间留不住，朱颜辞镜花辞树。</li><li>　欧阳修：泪眼问花花不语，乱红飞过秋千去。</li><li>　卓文君：愿得一心人，自首不相离。</li><li>　唐　寅：晓看天色暮看云，行也思君，坐也思君。</li><li>　元　稹：曾经沧海难为水，除却巫山不是云。</li><li>　李　白：相思相见知何日，此时此夜难为情。</li><li>　李　煜：春花秋月何时了？往事知多少。</li><li>　柳　永：衣带渐宽终不悔，为伊消得人憔悴。</li><li>　苏　轼：十年生死两茫茫，不思量，自难忘。</li></ul></li><li><p>古诗词中的表白：</p><ul><li>三生清风三里路，步步春风再无你。（我终于失去你了）</li><li>我与春风皆过客，你携秋水揽星河。（我不喜欢你了）</li><li>既许一人以偏爱，愿尽余生之慷慨。（我这一生都会对你好，爱你）</li><li>半身风雨半身伤，半句别恨半句凉。（真的很难过）</li><li>无人与我立黄昏，无人问我粥可温。（孤单一人）</li><li>从此音尘各悄然，春山如黛草如烟。（以后各奔东西，不必联系）</li><li>苍天不解人情暖，冷眼看花尽是悲。（没人能够读懂我）</li><li>从此烟雨落金城，一人撑伞两人行。（我们在一起了）</li></ul></li><li><p>古人拒绝表白：</p><ul><li>一身清贫怎敢入繁华，两袖清风怎敢误佳人。（我配不上你）</li><li>枝上柳绵吹又少，天涯何处无芳草。（你追谁都行，别追我）</li><li>感郎千金意，惭无倾城色。（你很好，是我配不上你）</li><li>子非我良人，亦非我最新。（你不是我喜欢的类型）</li><li>心似流水不倦花，我如明月君勿恋。（你不要爱上我）</li><li>万水千山都是情，冥冥之中靠天定。（我们之间不合适）</li><li>落花有意随流水，流水无心恋落花。（你喜欢我，但我不喜欢你）</li><li>都兰之猗猎扬扬其香，不采而佩于兰何伤。（你是个好人，我不想伤害你）</li></ul></li><li><p>用古文表达失恋：</p><ul><li>【青铜】一别两宽，各自欢喜。</li><li>【白银】你有你的清欢渡，我有我的不归路。</li><li>【黄金】从此山水不相逢，莫道彼此长和短。</li><li>【钻石】柳絮随风各西东，物是人非事事休。</li><li>【王者】山河岁月空惆怅，今生今世已惘然。</li></ul></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;表达随遇而安：&lt;br&gt;时光清浅处，一步一安然。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表达岁月静好：&lt;br&gt;山野万万里，余生路漫。日暮酒杯淡饭，一半一半&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;夸心上人美好：&lt;br&gt;山有扶苏，隰（xí）有荷华。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;想说坚韧不拔：&lt;br&gt;冬青树上挂凌霄，岁晏花凋树不凋。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于好朋友：&lt;br&gt;半师半友半知己，半慕半尊半倾心。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;乐观面对上火：&lt;br&gt;时间煮雨，岁月缝花。以欢喜心，慢度日常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;琐碎诗意交织：&lt;br&gt;手执烟火以谋生，心怀诗意以谋爱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表达对另一半的爱意：&lt;br&gt;日出有盼，日落有念。心有所期，忙而不茫。&lt;/p&gt;</summary>
    
    
    
    <category term="Knowledge Share" scheme="http://shenguosai.github.io/categories/Knowledge-Share/"/>
    
    
    <category term="Poetry" scheme="http://shenguosai.github.io/tags/Poetry/"/>
    
  </entry>
  
  <entry>
    <title>Hexo字数统计与阅读统计</title>
    <link href="http://shenguosai.github.io/2023/11/20/Hexo%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%B8%8E%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/"/>
    <id>http://shenguosai.github.io/2023/11/20/Hexo%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%B8%8E%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/</id>
    <published>2023-11-20T12:54:12.000Z</published>
    <updated>2023-11-20T13:25:13.794Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装<code>hexo-wordcount</code>插件<br><code>npm install hexo-wordcount --save</code></li><li>安装<code>hexo-symbols-count-time</code>插件<br><code>npm install hexo-symbols-count-time --save</code></li><li>安装<code>eslint</code><br><code>npm install eslint --save</code></li></ol><span id="more"></span><ol start="4"><li>在hexo配置文件中添加<code>symbols_count_time</code>配置语句<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line"> symbols: true               # 文字字数统计</span><br><span class="line"> time: true                  # 文章阅读时长</span><br><span class="line"> total_symbols: true         # 站点总字数统计</span><br><span class="line"> total_time: true            # 站点总阅读时长</span><br><span class="line"> exclude_codeblock: false    # 排除代码字数统计</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中添加<code>symbols_count_time</code>配置语句<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line"> separated_meta: true        # 是否另起一行(true的话不和发表时间等同一行)</span><br><span class="line"> item_text_post: true        # 首页文章统计数量前是否显示文字描述(本文字数、阅读时长)</span><br><span class="line"> item_text_total: false      # 页面底部统计数量前是否显示文字描述(站点总字数、站点阅读时长)</span><br><span class="line"> awl: 4                      # Average Word Lenth</span><br><span class="line"> wpm: 275                    # Words Per Minute（每分钟阅读词数</span><br><span class="line"> suffix: mins.</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中配置wordcount<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:          # 字数统计</span><br><span class="line"> item_text: true         # 是否显示文字</span><br><span class="line"> wordcount: true         # 显示字数</span><br><span class="line"> min2read: true          # 显示阅读时间</span><br><span class="line"> totalcount: true        # 显示总数</span><br><span class="line"> seperated_meta: true    # 是否分开</span><br></pre></td></tr></table></figure></li></ol><p>设置完成！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;安装&lt;code&gt;hexo-wordcount&lt;/code&gt;插件&lt;br&gt;&lt;code&gt;npm install hexo-wordcount --save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;hexo-symbols-count-time&lt;/code&gt;插件&lt;br&gt;&lt;code&gt;npm install hexo-symbols-count-time --save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;eslint&lt;/code&gt;&lt;br&gt;&lt;code&gt;npm install eslint --save&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>更换新电脑后，hexo无损重新部署</title>
    <link href="http://shenguosai.github.io/2023/11/14/%E6%9B%B4%E6%8D%A2%E6%96%B0%E7%94%B5%E8%84%91%E5%90%8E%EF%BC%8Chexo%E6%97%A0%E6%8D%9F%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/"/>
    <id>http://shenguosai.github.io/2023/11/14/%E6%9B%B4%E6%8D%A2%E6%96%B0%E7%94%B5%E8%84%91%E5%90%8E%EF%BC%8Chexo%E6%97%A0%E6%8D%9F%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/</id>
    <published>2023-11-14T13:44:02.000Z</published>
    <updated>2024-01-05T01:22:47.358Z</updated>
    
    <content type="html"><![CDATA[<p>趁着双十一在京东￥499入手了<a href="https://item.jd.com/100048210573.html#crumb-wrap">樊想S500PRO</a>的2T SSD固态硬盘。<br>到货后就迫不及待的换下了原来笔记本里500G的老硬盘。然后发现换硬盘新装系统后各种软件的安装和配置都要重新来一遍。</p><h3 id="下面记录下hexo的迁移过程。"><a href="#下面记录下hexo的迁移过程。" class="headerlink" title="下面记录下hexo的迁移过程。"></a>下面记录下hexo的迁移过程。</h3><span id="more"></span><ul><li><p>首先将原硬盘的hexo目录拷贝到新硬盘。我自己的目录是<code>D:\99_Git\blog</code>。</p></li><li><p>配置hexo环境：</p><ul><li><p>安装nodejs和git，nodejs安装好才可以使用npm安装hexo，git就是用来上传博客用的；（如果不希望多装软件可只安装git而不需要git bash）</p></li><li><p>如果可以将原来电脑中的<code>C:\User\username\.gitconfig</code>文件和<code>C:\User\username（斜体）\.ssh\</code>目录拷贝到同目录下就不需要重新配置了。(其中username是自己电脑的用户名)<br>如果没有就只能重新设置并生成ssh key文件了，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.mail &quot;user mail address&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;user mail address&quot;</span><br></pre></td></tr></table></figure></li><li><p>进入到hexo部署文件夹，执行命令安装hexo和hexo-depolyer-git插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p><b>然后这里会出现一个问题:</b><br>我是使用vs code中的终端来操作的，怎么样也识别不了hexo命令，提示如下：（由于忘记截图了，网上找了张类似的）<br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231114224848.png" alt="20231114224848"></p></li><li><p><b>解决方法</b><br>可以通过访问“请参阅……”后面的链接查看，核心问题是power shell的安全策略，将hexo命令视为了不安全脚本，不允许执行。只需要放开权限就行。<br>通过管理员权限运行power shell，然后输入命令：<code>set-ExecutionPolicy RemoteSigned</code><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/20231115001919.png" alt="20231115001919"><br>选择“Y”即可。<br>然后就可以正常在<a href="https://code.visualstudio.com/">VS Code</a>的终端里使用<a href="https://hexo.io/zh-cn/index.html">hexo</a>了。</p></li><li><p><b><font color=blue>碰到的第二个问题：</font></b><br>上传时提示有换行符的问题，在执行<code>hexo d</code>后会出现整屏的提示信息，是我这个强迫症患者所无法忍受的。</p></li><li><p><b><font color=blue>解决方法：</font></b><br>通过执行命令<code>git config --global core.autocrlf false</code>将默认的换行符转换功能去掉。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#提交时转换为LF，检出时转换为CRLF（默认）</span><br><span class="line">git config --global core.autocrlf true</span><br><span class="line"></span><br><span class="line">#提交和检出时均不做换行符转换（修改）</span><br><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure></li></ul></li><li><p>图床设置<br>下载插件vs code的插件PicGo，配置方法网上有很多，但是需要注意一点在<code>Picgo &gt; Pic Bed &gt; Github: Custom Url</code>中需要填入图传链接格式为<code>https://raw.githubusercontent.com/用户名/仓库名/分支名</code>，一开始这个地方没有设置对对上传没有影响但是在博客中看不到图片。</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;趁着双十一在京东￥499入手了&lt;a href=&quot;https://item.jd.com/100048210573.html#crumb-wrap&quot;&gt;樊想S500PRO&lt;/a&gt;的2T SSD固态硬盘。&lt;br&gt;到货后就迫不及待的换下了原来笔记本里500G的老硬盘。然后发现换硬盘新装系统后各种软件的安装和配置都要重新来一遍。&lt;/p&gt;
&lt;h3 id=&quot;下面记录下hexo的迁移过程。&quot;&gt;&lt;a href=&quot;#下面记录下hexo的迁移过程。&quot; class=&quot;headerlink&quot; title=&quot;下面记录下hexo的迁移过程。&quot;&gt;&lt;/a&gt;下面记录下hexo的迁移过程。&lt;/h3&gt;</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>在自己搭建的hexo博客上发布文章</title>
    <link href="http://shenguosai.github.io/2023/11/13/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/"/>
    <id>http://shenguosai.github.io/2023/11/13/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</id>
    <published>2023-11-13T01:19:15.440Z</published>
    <updated>2023-11-20T13:27:35.585Z</updated>
    
    <content type="html"><![CDATA[<ol><li>在<code>/source/_posts</code>目录下建立<code>.md</code>文件并撰写内容；<br>编辑文章时要在第一行中加上<code>title</code>，如果不按此格式来写的话在<code>hexo</code>博客中就会显示这篇文章没有名字。<span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章题目</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li>命名完成后，将终端当前目录更改为<code>/source/_posts</code><br>输入<code>hexo g</code>(完整命令为<code>hexo generate</code>)，生成静态文件；<br>输入<code>hexo s</code>(完整命令为<code>hexo server</code>)，启动local服务器，主要用于本地预览。完成后打开浏览器输入<a href="">http://localhost:4000</a>，就会发现多了刚才写的那篇博客。<br>输入<code>hexo d</code>(完整命令为<code>hexo deploy</code>)，将本地文件发布到github仓库上。</li><li>每次对hexo博客上的<code>.md</code>文件进行更改后都要重复步骤2，这样更改的内容才能在hexo博客上显示。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;/source/_posts&lt;/code&gt;目录下建立&lt;code&gt;.md&lt;/code&gt;文件并撰写内容；&lt;br&gt;编辑文章时要在第一行中加上&lt;code&gt;title&lt;/code&gt;，如果不按此格式来写的话在&lt;code&gt;hexo&lt;/code&gt;博客中就会显示这篇文章没有名字。</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客挂载Github(未完)</title>
    <link href="http://shenguosai.github.io/2023/11/13/Hexo%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%82%E8%BD%BDgithub/"/>
    <id>http://shenguosai.github.io/2023/11/13/Hexo%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8C%82%E8%BD%BDgithub/</id>
    <published>2023-11-13T01:19:15.440Z</published>
    <updated>2023-11-20T13:27:22.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="1-Git"><a href="#1-Git" class="headerlink" title="1.Git"></a>1.Git</h2><p><a href="https://git-scm.com/downloads">Git官网下载</a><br>下载完成后，双击安装包，选项全部默认，一路Next安装完成。<br>测试安装成功，输入<code>git --version</code>显示版本信息即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L ~$ git --version</span><br><span class="line">git version 2.37.1</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-Node-js"><a href="#2-Node-js" class="headerlink" title="2.Node.js"></a>2.Node.js</h2><p><a href="https://nodejs.org/zh-cn/">Node官网下载</a><br>下载完成后，双击安装包，选项全部默认，一路Next安装完成。<br>测试安装成功，输入<code>node -v</code>显示版本信息即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L ~$ node -v</span><br><span class="line">v18.15.0</span><br></pre></td></tr></table></figure><h2 id="3-Gitee或GitHub-目前只成功挂载GitHub-2023-8-3"><a href="#3-Gitee或GitHub-目前只成功挂载GitHub-2023-8-3" class="headerlink" title="3.Gitee或GitHub(目前只成功挂载GitHub@2023&#x2F;8&#x2F;3)"></a>3.Gitee或GitHub(目前只成功挂载GitHub@2023&#x2F;8&#x2F;3)</h2><p>准备Gitee或GitHub账号，这个是用来托管的，可以不需要自己的服务器和域名就可以拥有自己的博客。<br><a href="https://gitee.com/">Gitee官网</a><br><a href="https://github.com/">GitHub官网</a><br>注册完成后，创建一个仓库，然后就可以将hexo挂载到这个仓库中了。<br>创建仓库的时候用 <em>YourName.github.io</em> 或 <em>YourNama.gitee.io</em> ，这样后面托管的域名比较好记。</p><h1 id="二、博客搭建"><a href="#二、博客搭建" class="headerlink" title="二、博客搭建"></a>二、博客搭建</h1><h2 id="1-Hexo下载"><a href="#1-Hexo下载" class="headerlink" title="1.Hexo下载"></a>1.Hexo下载</h2><p>新建一个文件夹作为博客的顶级目录。<br>打开cmd，进入到新建的文件夹目录，输入<code>npm install hexo-cli -g</code>以安装hexo。</p><h2 id="2-Hexo初始化"><a href="#2-Hexo初始化" class="headerlink" title="2.Hexo初始化"></a>2.Hexo初始化</h2><p>安装完成后，输入<code>hexo init blog</code>进行初始化。<br>注：blog就是<b><font color="red">步骤1</font></b>中新建的目录。<br>初始化后，文件夹下就会有下方形式的目录结构。<br><em><font color="grey" size=1 >设置好图床后添加</font></em><br><img src="https://raw.githubusercontent.com/shenguosai/MyPic/img/img/image-20230807153014796.png" alt="image-20230807153014796"></p><h2 id="3-启动博客"><a href="#3-启动博客" class="headerlink" title="3.启动博客"></a>3.启动博客</h2><p>使用终端将目录进入到blog下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ la</span><br><span class="line">total 245</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 18:38 .</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:13 ..</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  3 00:39 .deploy_git</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 .github</span><br><span class="line">-rw-rw-r--    1 shenguos 197121          82 Aug  2 15:14 .gitignore</span><br><span class="line">-rw-rw-r--    1 shenguos 197121           0 Aug  2 15:14 _config.landscape.yml</span><br><span class="line">-rw-rw-r--    1 shenguos 197121        2582 Aug  3 00:01 _config.yml</span><br><span class="line">-rwxrwxr-x    1 shenguos 197121      352551 Aug  3 00:38 db.json</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:34 node_modules</span><br><span class="line">-rwxrwxr-x    1 shenguos 197121       92731 Aug  2 15:34 package-lock.json</span><br><span class="line">-rw-rw-r--    1 shenguos 197121         655 Aug  2 15:34 package.json</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  3 00:08 public</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 scaffolds</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 15:14 source</span><br><span class="line">drwxrwxr-x    1 shenguos 197121           0 Aug  2 23:53 themes</span><br><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本地静态网页就启动了，在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a>就能看到如下网页。<br><em><font color="grey" size=1 >设置好图床后添加</font></em></p><h1 id="三、挂载到GitHub上"><a href="#三、挂载到GitHub上" class="headerlink" title="三、挂载到GitHub上"></a>三、挂载到GitHub上</h1><h2 id="1-挂载须知"><a href="#1-挂载须知" class="headerlink" title="1.挂载须知"></a>1.挂载须知</h2><h3 id="a-git配置"><a href="#a-git配置" class="headerlink" title="a) git配置"></a>a) git配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;shenguosai&quot;</span>  //用户名</span><br><span class="line">git config --global user.email <span class="string">&quot;xxx@xx.com&quot;</span>  //邮箱</span><br></pre></td></tr></table></figure><p>用户名和邮箱根据注册github的信息自行修改。</p><h3 id="b-SSH密钥"><a href="#b-SSH密钥" class="headerlink" title="b) SSH密钥"></a>b) SSH密钥</h3><p>挂载到GitHub上时，为了方便，我们要创建<code>ssh</code>密钥，使用ssh连接更为方便的推送。<br>方法：<code>ssh-keygen -C &quot;xxxx@xxx.com&quot;</code>就会生成密钥，Linux用户在<code>~/.ssh/</code>中，Windows用户在<code>C:/Users/xxx/.ssh/</code>中。<br>在github上绑定公钥:<code>Settings-&gt;SSH and GPG keys-&gt;SSH keys-&gt;New SSH key</code><br>将生成的<code>id_rsa.pub</code>中的文本内容复制到<code>Key</code>框中，点击<code>Add SSH key</code>。<br><em><font color="grey" size=1 >此处说明需要添加图片，设置好图床后添加。</font></em><br>输入<code>ssh -T git@github.com</code>，如果如下所示，出现你的用户名即配置成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shenguosai@LAPTOP-FBGFH99L /mnt/d/99_Git/blog$ ssh -T git@github.com</span><br><span class="line">X11 forwarding request failed on channel 0</span><br><span class="line">Hi shenguosai! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h3 id="c-Token"><a href="#c-Token" class="headerlink" title="c) Token"></a>c) Token</h3><h2 id="2-开始挂载"><a href="#2-开始挂载" class="headerlink" title="2.开始挂载"></a>2.开始挂载</h2><p>打开博客目录下的<code>.config.yml</code>(hexo的配置文件)，下拉到最下方。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://ghp_xxxxxx@github.com/shenguosai/shenguosai.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><code>ghp_xxxxxx</code>即使上面申请的token。<br>然后输入<code>hexo cl</code>清除缓存，完成代码为<code>hexo clean</code>。<br>清除缓存后输入<code>hexo g</code>生成静态网页，然后输入<code>hexo d</code>推送到<strong>GitHub</strong>。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h1&gt;&lt;h2 id=&quot;1-Git&quot;&gt;&lt;a href=&quot;#1-Git&quot; class=&quot;headerlink&quot; title=&quot;1.Git&quot;&gt;&lt;/a&gt;1.Git&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git官网下载&lt;/a&gt;&lt;br&gt;下载完成后，双击安装包，选项全部默认，一路Next安装完成。&lt;br&gt;测试安装成功，输入&lt;code&gt;git --version&lt;/code&gt;显示版本信息即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shenguosai@LAPTOP-FBGFH99L ~$ git --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git version 2.37.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tutorial" scheme="http://shenguosai.github.io/categories/Tutorial/"/>
    
    
  </entry>
  
</feed>
